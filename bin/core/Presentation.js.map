{
"version":3,
"file":"Presentation.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/Projects/HIDE/src/about/Presentation.hx","C:/Projects/HIDE/src/cm/Editor.hx","C:/Projects/HIDE/src/core/Completion.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/Projects/HIDE/src/filetree/FileTree.hx","C:/HaxeToolkit/haxe/std/haxe/Log.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/Utf8.hx","C:/HaxeToolkit/haxe/std/haxe/io/Eof.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/Projects/HIDE/src/parser/ClasspathWalker.hx","C:/Projects/HIDE/src/projectaccess/Project.hx","C:/Projects/HIDE/src/projectaccess/ProjectAccess.hx","C:/HaxeToolkit/haxe/lib/tjson/1,4,0/tjson/TJSON.hx","C:/Projects/HIDE/src/watchers/LocaleWatcher.hx","C:/Projects/HIDE/src/watchers/SettingsWatcher.hx","C:/Projects/HIDE/src/watchers/ThemeWatcher.hx","C:/Projects/HIDE/src/watchers/Watcher.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","C:/Projects/HIDE/libs/nodejs-std/js/Node.hx","C:/Projects/HIDE/libs/nodejs-std/js/node/Watchr.hx","C:/Projects/HIDE/src/parser/ClassParser.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cpp\nusing cpp.NativeString;\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s, \"\");\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#elseif cpp\n\t\tif (s.length<start.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str();\n\t\tvar p1 = start.c_str();\n\t\tfor(i in 0...start.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#elseif cpp\n\t\tif (s.length<end.length)\n\t\t\treturn false;\n\t\tvar p0 = s.c_str().add( s.length-end.length );\n\t\tvar p1 = end.c_str();\n\t\tfor(i in 0...end.length)\n\t\t\tif ( p0.at(i) != p1.at(i) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s.cca(index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.internal.UBuiltins.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash || cpp)\n\t\treturn c == 0;\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","package about;\nimport watchers.LocaleWatcher;\nimport watchers.SettingsWatcher;\nimport haxe.Timer;\nimport js.Browser;\nimport js.html.DivElement;\nimport js.html.Element;\nimport js.html.KeyboardEvent;\nimport js.html.ParagraphElement;\nimport js.html.AnchorElement;\nimport js.Lib;\nimport nodejs.webkit.Window;\n\n/**\n * ...\n * @author AS3Boyan\n */\nclass Presentation\n{\n\tstatic var impressDiv:DivElement;\n\tstatic var slidesCount:Int;\n\tstatic var autoplay:Bool = true;\n\tstatic private var timer:Timer;\n\n\tpublic static function main()\n\t{\t\t\n\t\tWindow.get().showDevTools();\n\t\t\n\t\tBrowser.window.onload = function (e):Void\n\t\t{\n\t\t\tSettingsWatcher.load();\n\t\t\t\n\t\t\timpressDiv = Browser.document.createDivElement();\n\t\t\timpressDiv.id = \"impress\";\n\t\t\n\t\t\tvar start:DivElement = Browser.document.createDivElement();\n\t\t\tstart.id = \"start\";\n\t\t\tstart.className = \"step\";\n\t\t\tstart.setAttribute('data-transition-duration', \"1000\");\n\t\t\timpressDiv.appendChild(start);\n\t\t\t\n\t\t\tvar p:ParagraphElement = Browser.document.createParagraphElement();\n\t\t\tp.style.width = \"1000px\";\n\t\t\tp.style.fontSize = \"80px\";\n\t\t\tp.style.textAlign = \"center\";\n\t\t\tp.setAttribute(\"localeString\", \"HIDE - cross platform extensible IDE for Haxe\");\n\t\t\tp.textContent = LocaleWatcher.getStringSync(\"HIDE - cross platform extensible IDE for Haxe\");\n\t\t\tstart.appendChild(p);\n\t\t\t\t\t\t\n\t\t\tslidesCount = 1;\n\n\t\t\tvar slide:DivElement;\n\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"'Feature request' perk backer and project sponsor\"));\n\t\t\tslide = createSlide(\"Haxe Foundation \", \"http://haxe-foundation.org/\", \"haxe-foundation.org\", \"120px\");\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"'Link to your website' perk backers\"));\n\t\t\tslide = createSlide(\"FlashDevelop\", \"http://www.flashdevelop.org/\", \"www.flashdevelop.org\", \"100px\");\n\t\t\tslide = createSlide(\"OpenFL\", \"http://www.openfl.org/\", \"www.openfl.org\", \"100px\");\n\t\t\tslide = createSlide(\"Hypersurge\", \"http://hypersurge.com/\", \"hypersurge.com\", \"100px\");\n\t\t\tslide = createSlide(\"Adrian Cowan\", \"http://blog.othrayte.net/\", \"blog.othrayte.net\", \"100px\");\n\t\t\tslide = createSlide(\"Justin Donaldson\", \"http://scwn.net/\", \"scwn.net\", \"100px\");\n\t\t\tslide = createSlide(\"Jonas Malaco Filho\", null, null, \"100px\");\n\t\t\tslide = createSlide(\"tommy62\", null, null, \"100px\");\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"'Contributor' perk backers\"));\n\t\t\t\n\t\t\tvar contributors:Array<String> = [\n\t\t\t\"Allan Dowdeswell\",\n\t\t\t\"Samuel Batista\",\n\t\t\t\"JongChan Choi\",\n\t\t\t\"Patric Vormstein\",\n\t\t\t\"Harry.french\",\n\t\t\t\"Vincent Blanchet\",\n\t\t\t\"zaynyatyi\",\n\t\t\t\"qzix13\",\n\t\t\t\"free24speed\",\n\t\t\t\"franco.ponticelli\",\n\t\t\t\"william.shakour\",\n\t\t\t\"frabbit\",\n\t\t\t\"Nick Holder\",\n\t\t\t\"fintanboyle\",\n\t\t\t\"Katsuomi Kobayashi\",\n\t\t\t\"grigoruk\",\n\t\t\t\"jessetalavera\",\n\t\t\t\"bradparks\",\n\t\t\t\"pchertok\",\n\t\t\t\"Masahiro Wakame\",\n\t\t\t\"Stojan Ilic\",\n\t\t\t\"Renaud Bardet\",\n\t\t\t\"Filip Loster\",\n\t\t\t\"MatejTyc\",\n\t\t\t\"Tiago Ling Alexandre\",\n\t\t\t\"Skial Bainn\",\n\t\t\t\"lars.doucet\",\n\t\t\t\"Ido Yehieli\",\n\t\t\t\"Ronan Sandford\",\n\t\t\t\"brutfood\",\n\t\t\t\"Matan Uberstein\",\n\t\t\t\"rcarcasses\",\n\t\t\t\"vic.cvc\",\n\t\t\t\"Richard Lovejoy\",\n\t\t\t\"Tarwin Stroh-Spijer\",\n\t\t\t\"obutovich\",\n\t\t\t\"erik.escoffier\",\n\t\t\t\"Robert Wahler\",\n\t\t\t\"Louis Tovar\",\n\t\t\t\"L Pope\",\n\t\t\t\"Florian Landerl\",\n\t\t\t\"shohei 909\",\n\t\t\t\"Andy Li\",\n\t\t\t\"dionjw\",\n\t\t\t\"Aaron Spjut\",\n\t\t\t\"sebpatu\",\n\t\t\t\"brycedneal\",\n\t\t\t\"Sam Twidale\",\n\t\t\t\"Phillip Louderback\",\n\t\t\t\"Mario Vormstein\",\n\t\t\t\"deepnight\",\n\t\t\t\"Daniel Freeman\",\n\t\t\t];\n\t\t\t\n\t\t\twhile (contributors.length > 0)\n\t\t\t{\n\t\t\t\tslide = createSlide(contributors.splice(Std.random(contributors.length), 1)[0]);\n\t\t\t}\n\t\t\t\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"Also there is anonymous contributors, people who helped us to spread the word and people who helped us through pull requests, bug reports and feature requests and by giving feedbacks\"));\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"Without your help, this would not have been possible to make it\"));\t\t\t\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"Thanks for your support!\"));\n\t\t\tslide = createSlide(LocaleWatcher.getStringSync(\"(in case if you want to change website or name, just let me know - AS3Boyan)\"));\n\n\t\t\tBrowser.document.body.appendChild(impressDiv);\n\t\t\t\n\t\t\trunImpressJS();\n\t\t\t\n\t\t\tvar window = Window.get();\n\t\t\twindow.on(\"close\", function (e)\n\t\t\t{\n\t\t\t\twindow.close(true);\n\t\t\t}\n\t\t\t);\n\t\t};\n\t}\n\t\n\tprivate static function createSlide(text:String, ?url:String, ?linkText:String, ?_fontSize:String = \"80px\"):DivElement\n\t{\n\t\tslidesCount++;\n\n\t\tvar slide:DivElement = Browser.document.createDivElement();\n\t\tslide.id = \"slide\" + Std.string(slidesCount);\n\t\tslide.className = \"step\";\n\t\t\n\t\tslide.setAttribute(\"data-rotate\", Std.string(Std.random(360)));\n\t\tslide.setAttribute(\"data-scale\", Std.string(Math.random() * 25 + 1));\n\t\tslide.setAttribute(\"data-x\", Std.string( Math.random() * 100000));\n\t\tslide.setAttribute(\"data-y\", Std.string( Math.random() * 100000));\n\t\tslide.setAttribute(\"data-z\", Std.string( -Math.random() * 3000));\n\t\tslide.setAttribute(\"data-rotate-x\", Std.string(Std.random(360)));\n\t\tslide.setAttribute(\"data-rotate-y\", Std.string(Std.random(360)));\n\t\t\n\t\tvar p:ParagraphElement = Browser.document.createParagraphElement();\n\t\tp.style.width = \"1000px\";\n\t\tp.style.fontSize = _fontSize;\n\t\tp.innerText = text;\n\t\tslide.appendChild(p);\n\n\t\tif (url != null)\n\t\t{\n\t\t\tp = Browser.document.createParagraphElement();\n\t\t\tp.className = \"footnote\";\n\t\t\tp.innerText = LocaleWatcher.getStringSync(\"Website: \");\n\t\t\tp.setAttribute(\"localeString\", \"Website: \");\n\t\t\tp.style.fontSize = \"24px\";\n\t\t\tslide.appendChild(p);\n\n\t\t\tvar a:AnchorElement = Browser.document.createAnchorElement();\n\t\t\ta.href = url;\n\t\t\ta.innerText = linkText;\n\t\t\ta.target = \"_blank\";\n\t\t\tp.appendChild(a);\n\t\t}\n\n\t\timpressDiv.appendChild(slide);\n\t\treturn slide;\n\t}\n\n\tprivate static function runImpressJS():Void\n\t{\t\t\n\t\tvar impressInstance:Dynamic = untyped impress();\n\t\timpressInstance.init();\n\t\t\n\t\t//Impress.js autoplay\n\t\t//ported to Haxe from\n\t\t//http://stackoverflow.com/questions/11694069/how-to-make-impress-js-slideshow-auto-play-and-loop\n\t\tBrowser.document.addEventListener('impress:stepenter', function (e):Void\n\t\t{\t\t\t\n\t\t\tif (autoplay)\n\t\t\t{\n\t\t\t\tvar duration:Int = (e.target.getAttribute('data-transition-duration') != null ? e.target.getAttribute('data-transition-duration') : 2500 + Std.random(1500)); // use the set duration or fallback to 2000ms\n\t\t\t\n\t\t\t\tTimer.delay(function () \n\t\t\t\t{\n\t\t\t\t\tif (autoplay)\n\t\t\t\t\t{\n\t\t\t\t\t\tuntyped impressInstance.next(); \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t, duration);\n\t\t\t}\n\t\t});\n\t\t\n\t\tBrowser.document.addEventListener(\"keyup\", function (e:KeyboardEvent)\n\t\t{\n\t\t\tautoplay = false;\n\t\t\t\n\t\t\tif (timer != null)\n\t\t\t{\n\t\t\t\ttimer.stop();\n\t\t\t\ttimer = null;\n\t\t\t}\n\t\t\t\n\t\t\ttimer = new Timer(15000);\n\t\t\t\n\t\t\ttimer.run = function ()\n\t\t\t{\n\t\t\t\tautoplay = true;\n\t\t\t\tuntyped impressInstance.next(); \n\t\t\t\ttimer.stop();\n\t\t\t\ttimer = null;\n\t\t\t};\n\t\t}\n\t\t);\n\t}\n}","package cm;\r\n#if !macro\r\nimport watchers.SettingsWatcher;\r\nimport projectaccess.Project.FileData;\r\nimport parser.RegexParser;\r\nimport CodeMirror.Pos;\r\nimport core.Completion;\r\nimport core.FunctionParametersHelper;\r\nimport core.HaxeLint;\r\nimport core.HaxeParserProvider;\r\nimport core.Helper;\r\nimport core.Hotkeys;\r\nimport core.OutlinePanel;\r\nimport haxe.Json;\r\nimport haxe.Timer;\r\nimport jQuery.JQuery;\r\nimport js.Browser;\r\nimport js.html.DivElement;\r\nimport js.html.KeyboardEvent;\r\nimport js.html.svg.TextElement;\r\nimport js.html.TextAreaElement;\r\nimport js.Lib;\r\nimport js.Node;\r\nimport menu.BootstrapMenu;\r\nimport nodejs.webkit.Window;\r\nimport parser.OutlineHelper;\r\nimport projectaccess.ProjectAccess;\r\nimport tabmanager.TabManager;\r\nimport tjson.TJSON;\r\n#end\r\n\r\n#if macro\r\nimport haxe.macro.Context;\r\nimport haxe.macro.Expr;\r\nimport sys.FileSystem;\r\n#end\r\n    \r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nclass Editor\r\n{\t\r\n\t#if !macro\r\n\t\r\n\tpublic static var editor:CodeMirror;\r\n\tpublic static var regenerateCompletionOnDot:Bool;\r\n\t\r\n\tpublic static function load():Void\r\n\t{\t\t\r\n\t\tregenerateCompletionOnDot = true;\r\n\t\t\r\n\t\tvar readFileOptions:NodeFsFileOptions = {};\r\n\t\treadFileOptions.encoding = NodeC.UTF8;\r\n\t\t\r\n\t\tvar options:Dynamic = { };\r\n\t\t\r\n\t\ttry \r\n\t\t{\r\n\t\t\toptions = TJSON.parse(Node.fs.readFileSync(Node.path.join(SettingsWatcher.pathToFolder, \"editor.json\"), readFileOptions));\r\n\t\t}\r\n\t\tcatch (err:Dynamic)\r\n\t\t{\r\n\t\t\ttrace(err);\r\n\t\t}\r\n\t\t\r\n\t\twalk(options);\r\n\t\t\r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\tvar completionInstance = Completion.get();\r\n\t\tvar xmlInstance = cm.Xml.get();\r\n\t\t\r\n\t\toptions.extraKeys = \r\n\t\t{\r\n\t\t\t\".\" : \r\n\t\t\t\tfunction passAndHint(cm) \r\n\t\t\t\t{\r\n\t\t\t\t\tif (tabManagerInstance.getCurrentDocument().getMode().name == \"haxe\") \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar completionActive = editor.state.completionActive;\r\n\t\t\t\t\t\tvar completionType = completionInstance.getCompletionType();\r\n                        \r\n\t\t\t\t\t\tif ((completionType == CompletionType.REGULAR || completionType == CompletionType.CLASSLIST) && completionActive != null && completionActive.widget != null) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcompletionActive.widget.pick();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn CodeMirrorStatic.Pass;\r\n\t\t\t\t},\r\n\t\t\t\";\":\r\n\t\t\t\tfunction passAndHint(cm:CodeMirror) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar cursor = editor.getCursor();\r\n\t\t\t\t\tvar ch = editor.getRange(cursor, { line: cursor.line, ch: cursor.ch +1 } );\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (ch == \";\") \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcm.execCommand(\"goCharRight\");\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn CodeMirrorStatic.Pass;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n           \t\"=\":\r\n\t\t\t\tfunction passAndHint(cm2:CodeMirror) \r\n\t\t\t\t{\r\n                    var mode = tabManagerInstance.getCurrentDocument().getMode().name;\r\n                    \r\n\t\t\t\t\tif (completionInstance.getCompletionType() == CompletionType.REGULAR && mode == \"haxe\" || mode == \"xml\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar completionActive = cm2.state.completionActive;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (completionActive != null && completionActive.widget != null) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcompletionActive.widget.pick();\r\n\t\t\t\t\t\t}\r\n                            \r\n                        if (mode == \"xml\")\r\n                        {\r\n                            var cur = cm2.getCursor();\r\n                            cm2.replaceRange(\"=\\\"\\\"\", cur, cur);\r\n                            cm2.execCommand(\"goCharLeft\");\r\n                            xmlInstance.completeIfInTag(cm2);\r\n\t\t\t\t\t\t\treturn null;\r\n                        }\r\n                        else\r\n                        {\r\n                            return CodeMirrorStatic.Pass;\r\n                        }\r\n                        \r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n                    {\r\n                        return CodeMirrorStatic.Pass;\r\n                    }\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n//             \"\\\\\\'(\\\\\\'\":\r\n//             \tfunction passAndHint(cm2:CodeMirror)\r\n//             \t{\r\n//                     trace(\"test\");\r\n//                     cm.Xml.completeIfInTag(cm2);\r\n//                     untyped __js__(\"return CodeMirror.Pass\");\r\n//                 },\r\n            \t\r\n            \"\\\\\\'<\\\\\\'\":\r\n            \tfunction passAndHint(cm2:CodeMirror)\r\n            \t{\r\n                    xmlInstance.completeAfter(cm2);\r\n                    return CodeMirrorStatic.Pass;\r\n                },\r\n            \t\r\n            \"\\\\\\'/\\\\\\'\":\r\n            \tfunction passAndHint(cm2:CodeMirror)\r\n            \t{\r\n                    xmlInstance.completeIfAfterLt(cm2);\r\n                    return CodeMirrorStatic.Pass;\r\n                },\r\n            \"\\\\\\' \\\\\\'\":\r\n                function passAndHint(cm2:CodeMirror)\r\n            \t{\r\n                    xmlInstance.completeIfInTag(cm2);\r\n                    return CodeMirrorStatic.Pass;\r\n                },\r\n            \"Ctrl-J\": \"toMatchingTag\"\r\n\t\t}\r\n\t\t\r\n\t\teditor = CodeMirror.fromTextArea(Browser.document.getElementById(\"code\"), options);\r\n        \r\n\t\teditor.on(\"keypress\", function (cm:CodeMirror, e:KeyboardEvent):Void \r\n\t\t{\r\n\t\t\tif (e.shiftKey) \r\n\t\t\t{\r\n                if (e.keyCode == 40 || e.keyCode == 62)\r\n                {\r\n                    if (completionInstance.getCompletionType() == CompletionType.REGULAR && tabManagerInstance.getCurrentDocument().getMode().name == \"haxe\")\r\n                    {\r\n                        var completionActive = editor.state.completionActive;\r\n\r\n                        if (completionActive != null && completionActive.widget != null) \r\n                        {\r\n                            completionActive.widget.pick();\r\n                        }\r\n                    }\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tnew JQuery(\"#editor\").hide(0);\r\n\t\t\r\n\t\tloadThemes(getThemeList(), loadTheme);\r\n\t\t\r\n\t\tvar value:String = \"\";\r\n\t\tvar map = CodeMirror.keyMap.sublime;\r\n\t\tvar mapK = untyped CodeMirror.keyMap[\"sublime-Ctrl-K\"];\r\n\t\t\r\n\t\t  for (key in Reflect.fields(map)) \r\n\t\t  {\r\n\t\t\t  //&& !/find/.test(map[key])\r\n\t\t\tif (key != \"Ctrl-K\" && key != \"fallthrough\")\r\n\t\t\t{\r\n\t\t\t\tvalue += \"  \\\"\" + key + \"\\\": \\\"\" + Reflect.field(map, key) + \"\\\",\\n\";\r\n\t\t\t}\r\n\t\t\t  \r\n\t\t  }\r\n\t\t  for (key in Reflect.fields(mapK)) \r\n\t\t  {\r\n\t\t\tif (key != \"auto\" && key != \"nofallthrough\")\r\n\t\t\t{\r\n\t\t\t\tvalue += \"  \\\"Ctrl-K \" + key + \"\\\": \\\"\" + Reflect.field(mapK, key) + \"\\\",\\n\";\r\n\t\t\t}\r\n\t\t\t  \r\n\t\t  }\r\n\t\t\r\n// \t\ttrace(Editor.editor);\r\n\t\t\r\n\t\tNode.fs.writeFileSync(Node.path.join(\"core\", \"bindings.txt\"), value, NodeC.UTF8);\r\n\t\t\r\n\t\tBrowser.window.addEventListener(\"resize\", function (e)\r\n\t\t{\t\t\t\r\n\t\t\tHelper.debounce(\"resize\", function ():Void \r\n\t\t\t{\r\n\t\t\t\teditor.refresh();\r\n\t\t\t}, 100);\r\n\t\t\t\r\n\t\t\tTimer.delay(resize, 50);\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tnew JQuery('#thirdNested').on('resize', \r\n\t\tfunction (event) {       \r\n\t\t\tvar panels = event.args.panels;\r\n\t\t\t\r\n\t\t\tresize();\r\n\t\t});\r\n\t\t\r\n\t\tColorPreview.create(editor);\r\n\t\t\r\n\t\teditor.on(\"cursorActivity\", function (cm:CodeMirror)\r\n\t\t{\r\n\t\t\tHelper.debounce(\"cursorActivity\", function ():Void \r\n\t\t\t{\r\n\t\t\t\tvar functionParametersHelper = FunctionParametersHelper.get();\r\n\t\t\t\tfunctionParametersHelper.update(cm);\r\n\t\t\t\tColorPreview.update(cm);\r\n\t\t\t\tERegPreview.update(cm);\r\n\t\t\t}, 100);\r\n\t\t\t\r\n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\r\n\t\t\tif (doc != null)\r\n\t\t\t{\r\n\t\t\t\tvar pos = doc.getCursor();\r\n\t\t\t\tBrowser.document.getElementById(\"status-cursor\").textContent = \"Line \" + Std.string(pos.line + 1) + \", Column \" + Std.string(pos.ch + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\teditor.on(\"scroll\", function (cm:CodeMirror):Void \r\n\t\t{\r\n\t\t\tColorPreview.scroll(editor);\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tvar timer:Timer = null;\r\n\t\t\r\n\t\tvar basicTypes = [\"Array\", \"Map\", \"StringMap\"];\r\n\t\t\r\n// \t\tvar ignoreNewLineKeywords = [\"function\", \"for \", \"while\"];\r\n\t\t\r\n\t\teditor.on(\"change\", function (cm:CodeMirror, e:CodeMirror.ChangeEvent):Void \r\n\t\t{\t\t\t\r\n            if (e.origin == \"paste\" && (e.from.line - e.to.line) > 0)\r\n            {\r\n                for (line2 in e.from.line...e.to.line)\r\n                {\r\n\t\t\t\t\tcm.indentLine(line2);                \r\n                }\r\n            }\r\n            \r\n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\r\n\t\t\tvar modeName:String = doc.getMode().name;\r\n\t\t\t\r\n\t\t\tif (modeName == \"haxe\") \r\n\t\t\t{\r\n\t\t\t\tHelper.debounce(\"change\", function ():Void \r\n\t\t\t\t{\r\n\t\t\t\t\tHaxeLint.updateLinting();\r\n\t\t\t\t}, 100);\r\n\t\t\t\t\r\n\t\t\t\tvar cursor = cm.getCursor();\r\n\t\t\t\tvar data = cm.getLine(cursor.line);\r\n\t\t\t\t\r\n\t\t\t\t//if (StringTools.endsWith(e.text[0], \";\")) \r\n\t\t\t\t//{\r\n\t\t\t\t\t//var insertNewLine:Bool = true;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//for (keyword in ignoreNewLineKeywords) \r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\t//if (data.indexOf(keyword) != -1) \r\n\t\t\t\t\t\t//{\r\n\t\t\t\t\t\t\t//insertNewLine = false;\r\n\t\t\t\t\t\t\t//break;\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//cm.execCommand(\"newlineAndIndent\");\r\n\t\t\t\t//}\r\n\t\t\t\t\r\n\t\t\t\tvar lastChar = data.charAt(cursor.ch - 1);\r\n\t\t\t\t\r\n\t\t\t\tif (lastChar == \".\")\r\n                {\r\n                    triggerCompletion(Editor.editor, true);\r\n                }\t\r\n\t\t\t\telse if (data.charAt(cursor.ch - 2) == \"=\" && lastChar == \" \")\r\n                {\r\n                    var name = StringTools.trim(data.substring(0, cursor.ch - 2));\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar type = null;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar ereg = ~/[a-z_0-9]+$/i;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar start = name.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (start - 1 > 0 && ereg.match(name.charAt(start - 1))) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstart--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tname = name.substr(start);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (name != \"\" && name.indexOf(\".\") == -1)\r\n\t\t\t\t\t{\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar variableDeclarations = RegexParser.getVariableDeclarations(doc.getValue());\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar variableWithExplicitType = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (item in variableDeclarations)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (item.type != null)\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvariableWithExplicitType.push(item);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (item in variableWithExplicitType)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (name == item.name)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\ttype = item.type;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\t \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar suggestions = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tvar value = doc.getValue();\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\tif (type != null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (type == \"Bool\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsuggestions = [\"false;\", \"true;\"];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (StringTools.startsWith(type, \"Array<\"))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsuggestions = [\"[\"];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (type == \"String\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsuggestions = [\"\\\"\"];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (type == \"Dynamic\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsuggestions = [\"{\"];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar variableWithSameType = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (item in variableWithExplicitType)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (type == item.type)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvariableWithSameType.push(item.name);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tfor (item in variableWithSameType)\r\n\t\t\t\t\t\t\t{\r\n// \t\t\t\t\t\t\t\t~/[\\t ]*editor2[\\t ]*= *(.+)$/gm\r\n// \t\t\t\t\t\t\t\t~/[\\t ]*editor2[\\t ]*:[a-zA-Z0-9_]*[\\t ]*= *(.+)$/gm\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\tvar ereg = new EReg(\"[\\t ]*\" + item + \"[\\t ]*= *(.+)$\", \"gm\");\r\n\t\t\t\t\t\t\t\tvar ereg2 = new EReg(\"[\\t ]*\" + item + \"[\\t ]*:[a-zA-Z0-9_<>]*[\\t ]*= *(.+)$\", \"gm\");\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\tereg.map(value, function (ereg3)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\tereg2.map(value, function (ereg3)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tsuggestions.push(\"new \" + type);\r\n\t\t\t\t\t\t\tcompletionInstance.showCodeSuggestions(suggestions);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttrace(name);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar ereg = new EReg(\"[\\t ]*\" + name + \"[\\t ]*= *(.+)$\", \"gm\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tereg.map(value, function (ereg3)\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tvar text = StringTools.trim(ereg3.matched(1));\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tif (text != \"\" && suggestions.indexOf(text) == -1)\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tsuggestions.push(text);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (suggestions.length > 0)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcompletionInstance.showCodeSuggestions(suggestions);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n                }\t\r\n\t\t\t\telse if (lastChar == \":\")\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data.charAt(cursor.ch - 2) == \"@\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcompletionInstance.showMetaTagsCompletion();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar pos = {line: cursor.line, ch: cursor.ch - 1};\r\n\t\t\t\t\t\tvar word = completionInstance.getCurrentWord(editor, {word: ~/[A-Z_0-9\\.]+$/i}, pos);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (word.word == null || word.word != \"default\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar len = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (word.word != null)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlen = word.word.length;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tvar dataBeforeWord = data.substring(0, pos.ch - len);\r\n\t\t\t\t\t\t\tdataBeforeWord = StringTools.trim(dataBeforeWord);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (!StringTools.endsWith(dataBeforeWord, \"case\"))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcompletionInstance.showClassList();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (lastChar == \"<\")\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (type in basicTypes) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (StringTools.endsWith(data.substr(0, cursor.ch - 1), type)) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcompletionInstance.showClassList();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (StringTools.endsWith(data, \"import \")) \r\n\t\t\t\t{                    \r\n\t\t\t\t\tcompletionInstance.showClassList(true);\r\n\t\t\t\t}\r\n\t\t\t\telse if (StringTools.endsWith(data, \"in )\"))\r\n\t\t\t\t{\t\r\n\t\t\t\t\tvar ereg = ~/for[\\t ]*\\([a-z_0-9]+[\\t ]+in[\\t ]+\\)/gi;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (ereg.match(data))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttriggerCompletion(editor, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if\t(StringTools.endsWith(data, \"new \") || StringTools.endsWith(data, \"extends \"))\r\n\t\t\t\t{\r\n\t\t\t\t\tcompletionInstance.showClassList(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (modeName == \"hxml\") \r\n\t\t\t{\r\n\t\t\t\tvar cursor = cm.getCursor();\r\n\t\t\t\tvar data = cm.getLine(cursor.line);\r\n\t\t\t\t\r\n\t\t\t\tif (data == \"-\")\r\n\t\t\t\t{\r\n\t\t\t\t\tcompletionInstance.showHxmlCompletion();\r\n\t\t\t\t}\r\n                else if (data == \"-cp \")\r\n                {\r\n                    completionInstance.showFileList(false, true);\r\n                }\r\n                else if (data == \"-dce \" || data == \"-lib \")\r\n                {\r\n                    completionInstance.showHxmlCompletion();\r\n\t\t\t\t}\r\n                else if (data == \"--macro \")\r\n               \t{\r\n                    completionInstance.showClassList(true);\r\n                }\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//Helper.debounce(\"filechange\", function ():Void \r\n\t\t\t//{\r\n\t\t\t\tvar tab = tabManagerInstance.tabMap.get(tabManagerInstance.selectedPath);\r\n\t\t\t\ttab.setChanged(!tab.doc.isClean());\r\n\t\t\t//}\r\n\t\t\t//, 150);\r\n\t\t\t\r\n\t\t\ttrace(e);\r\n\r\n\t\t\tif ([\"+input\", \"+delete\"].indexOf(e.origin) != -1)\r\n\t\t\t{\r\n// \t\t\t\tHelper.debounce(\"type\", function ():Void\r\n// \t\t\t\t\t\t   {\r\n\t\t\t\t\t\t\t var text = e.text[0];\r\n\t\t\t\t\t\t\t var removed = e.removed[0];\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t   if (text != \"\\t\" && text != \" \" && removed != \"\\t\" && removed != \" \" && isValidWordForCompletionOnType())\r\n\t\t\t\t\t\t\t   {\r\n\t\t\t\t\t\t\t\t   var doc = tabManagerInstance.getCurrentDocument();\r\n\t\t\t\t\t\t\t\t   var pos = doc.getCursor();\r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t   completionInstance.getCompletion(function ()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isValidWordForCompletionOnType())\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar pos2 = doc.getCursor();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (pos.line == pos2.line && pos.ch == pos2.ch)\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompletionInstance.showRegularCompletion(false);\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}, pos);\r\n\t\t\t\t\t\t\t   }\r\n\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\r\n// \t\t\t\t\t\t   }, 500);\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tCodeMirror.prototype.centerOnLine = function(line) \r\n\t\t{\r\n\t\t\tuntyped __js__(\" var h = this.getScrollInfo().clientHeight;  var coords = this.charCoords({line: line, ch: 0}, 'local'); this.scrollTo(null, (coords.top + coords.bottom - h) / 2); \");\r\n\t\t};\r\n\r\n\t\teditor.on(\"gutterClick\", function (cm:CodeMirror, line:Int, gutter:String, e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (ProjectAccess.currentProject != null && gutter == \"CodeMirror-foldgutter\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tsaveFoldedRegions();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t}\r\n\t\t\r\n\t\tstatic function isValidWordForCompletionOnType()\r\n\t\t{\r\n\t\t\tvar isValid:Bool = false;\r\n\t\t\t\r\n\t\t\tvar cm = editor;\r\n\t\t\t\r\n\t\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\tvar completionInstance = Completion.get();\r\n\t\t\t\r\n\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\r\n\r\n\t\t    if (doc != null && doc.getMode().name == \"haxe\")\r\n\t\t    {\r\n\t\t\t\tvar completionActive = editor.state.completionActive;\r\n\r\n\t\t\t\tif (completionActive == null) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar pos = doc.getCursor();\r\n\r\n\t\t\t\t\tvar word = completionInstance.getCurrentWord(editor, {word: ~/[A-Z_0-9]+$/i}, pos);\r\n\r\n\t\t\t\t\tvar type = cm.getTokenTypeAt(pos);\r\n\r\n\t\t\t\t\tvar eregDigit = ~/[0-9]+$/i;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (word.word != null && type != \"string\" && type != \"string-2\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (word.word.length >= 1 && !eregDigit.match(word.word.charAt(0)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar lineData = doc.getLine(pos.line);\r\n\t\t\t\t\t\t\tvar dataBeforeWord = lineData.substring(0, pos.ch - word.word.length);\r\n\r\n\t\t\t\t\t\t\tif (!StringTools.endsWith(dataBeforeWord, \"var \") && !StringTools.endsWith(dataBeforeWord, \"function \"))\r\n\t\t\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tisValid = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t    }\r\n\t\t\t\t\r\n\t\t\treturn isValid;\r\n\t\t}\r\n\r\n\t\t\r\n\tpublic static function saveFoldedRegions()\r\n\t{\r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\r\n\t\tvar doc = tabManagerInstance.getCurrentDocument();\r\n\t\t\r\n\t\tif (doc != null && ProjectAccess.currentProject != null)\r\n\t\t{\r\n\t\t\tvar cm = editor;\r\n\t\t\tvar cursor = doc.getCursor();\r\n\t\t\tvar foldedRegions:Array<Pos> = [];\r\n\r\n\t\t\tfor (marker in doc.getAllMarks())\r\n\t\t\t{\r\n\t\t\t\tvar pos = marker.find().from;\r\n\r\n\t\t\t\tif (cm.isFolded(pos))\r\n\t\t\t\t{\r\n\t\t\t\t\tfoldedRegions.push(pos);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar selectedFile = ProjectAccess.getFileByPath(tabManagerInstance.getCurrentDocumentPath());\r\n\r\n\t\t\tif (selectedFile != null)\r\n\t\t\t{\r\n\t\t\t\tselectedFile.foldedRegions = foldedRegions;\r\n\t\t\t\tselectedFile.activeLine = cursor.line;\r\n\t\t\t\t\r\n\t\t\t\ttrace(\"folding regions saved successfully for\" + Std.string(selectedFile));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ttrace(\"cannot save folded regions for this document\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttrace(\"unable to preserve code folding for\" + Std.string(doc));\r\n\t\t}\r\n\t}\r\n\r\n\t\t\r\n\tpublic static function triggerCompletion(cm:CodeMirror, ?dot:Bool = false) \r\n\t{\r\n        trace(\"triggerCompletion\");\r\n        \r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\tvar completionInstance = Completion.get();\r\n\t\t\r\n\t\tvar modeName:String = tabManagerInstance.getCurrentDocument().getMode().name;\r\n\t\t\r\n\t\tswitch (modeName)\r\n\t\t{\r\n\t\t\tcase \"haxe\":\r\n\t\t\t\t//HaxeParserProvider.getClassName();\r\n\t\t\t\t\r\n\t\t\t\tif (!dot || regenerateCompletionOnDot || (dot && !cm.state.completionActive)) \r\n\t\t\t\t{\r\n\t\t\t\t\ttabManagerInstance.saveActiveFile(function ():Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcompletionInstance.showRegularCompletion();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\tcase \"hxml\":\r\n\t\t\t\tcompletionInstance.showHxmlCompletion();\r\n        \tcase \"xml\":\r\n        \t\tcm.showHint({completeSingle: false});\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function walk(object:Dynamic)\r\n\t{\t\t\r\n\t\tvar regexp = untyped __js__(\"RegExp\");\r\n\t\t\r\n\t\tfor (field in Reflect.fields(object))\r\n\t\t{\r\n\t\t\tvar value = Reflect.field(object, field);\r\n\t\t\t\r\n\t\t\tif (Std.is(value, String)) \r\n\t\t\t{\r\n\t\t\t\tif (StringTools.startsWith(value, \"regexp\")) \r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.setField(object, field, Type.createInstance(regexp, [value.substring(6)]));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err:Dynamic)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (StringTools.startsWith(value, \"eval\")) \r\n\t\t\t\t{\r\n\t\t\t\t\ttry \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tReflect.setField(object, field, Lib.eval(value.substring(4)));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (err:Dynamic)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttrace(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (Reflect.isObject(value) && !Std.is(value, Array) && Type.typeof(value).getName() == \"TObject\") \r\n\t\t\t{\r\n\t\t\t\twalk(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function resize():Void \r\n\t{\t\t\r\n\t\tvar panels = untyped new JQuery('#thirdNested').jqxSplitter('panels');\r\n\r\n\t\tvar height = Browser.window.innerHeight - 34 - new JQuery(\"ul.tabs\").height() - panels[1].element[0].clientHeight - 5;\r\n\t\tnew JQuery(\".CodeMirror\").css(\"height\", Std.string(Std.int(height)) + \"px\");\r\n\t\t\r\n\t\tnew JQuery(\"#annotationRuler\").css(\"height\", Std.string(Std.int(height - 1)) + \"px\");\r\n\t}\r\n\t\r\n\tstatic function loadTheme() \r\n\t{\r\n\t\tvar localStorage2 = Browser.getLocalStorage();\r\n\t\t\r\n\t\tif (localStorage2 != null)\r\n\t\t{\r\n\t\t\tvar theme:String = localStorage2.getItem(\"theme\");\r\n\t\t\t\r\n\t\t\tif (theme != null) \r\n\t\t\t{\r\n\t\t\t\tsetTheme(theme);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n            \tsetTheme(\"mbo\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tstatic function loadThemes(themes:Array<String>, onComplete:Dynamic):Void\r\n\t{\r\n\t\tvar themesSubmenu = BootstrapMenu.getMenu(\"View\").getSubmenu(\"Themes\");\r\n\t\tvar theme:String;\r\n\t\t\r\n\t\tvar pathToThemeArray:Array<String> = new Array();\r\n\t\t\r\n\t\tthemesSubmenu.addMenuItem(\"default\", 0, setTheme.bind(\"default\"));\r\n\t\t\r\n\t\tfor (i in 0...themes.length)\r\n\t\t{\r\n\t\t\ttheme = themes[i];\r\n\t\t\tthemesSubmenu.addMenuItem(theme, i + 1, setTheme.bind(theme));\r\n\t\t}\r\n\t\t\r\n\t\tonComplete();\r\n\t}\r\n\t\r\n\tpublic static function setTheme(theme:String):Void\r\n\t{\r\n\t\teditor.setOption(\"theme\", theme);\r\n\t\tBrowser.getLocalStorage().setItem(\"theme\", theme);\r\n\t}\r\n\t\r\n\t#end\r\n\t\r\n\tmacro public static function getThemeList() \r\n\t{\r\n\t\tvar p = Context.currentPos();\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor (theme in sys.FileSystem.readDirectory(Sys.getCwd() + \"libs/js/CodeMirror/theme\")) \r\n\t\t{\r\n\t\t\tvar basename = theme.split(\".\").shift();\r\n\t\t\tvar eConst = EConst(CString(basename));\r\n\t\t\tresult.push( { expr: eConst, pos: p } );\r\n\t\t}\r\n        \r\n//         for (theme in sys.FileSystem.readDirectory(Sys.getCwd() + \"libs/css/theme\"))\r\n// \t\t{\r\n// \t\t\tvar eConst = EConst(CString(theme.split(\".\").shift()));\r\n// \t\t\tresult.push( { expr: eConst, pos: p } );\r\n// \t\t}\r\n\t\t\r\n\t\treturn { expr: EArrayDecl(result), pos: p };\r\n    }\r\n}\r\n","package core;\r\nimport haxe.Timer;\r\nimport completion.Hxml.CompletionData;\r\nimport parser.RegexParser;\r\nimport cm.Editor;\r\nimport CodeMirror;\r\nimport completion.Filter;\r\nimport completion.Hxml;\r\nimport completion.MetaTags;\r\nimport completion.SnippetsCompletion;\r\nimport haxe.ds.StringMap.StringMap;\r\nimport haxe.xml.Fast;\r\nimport js.Browser;\r\nimport js.html.DivElement;\r\nimport js.html.SpanElement;\r\nimport js.Node;\r\nimport openproject.OpenFL;\r\nimport parser.ClassParser;\r\nimport projectaccess.Project;\r\nimport projectaccess.ProjectAccess;\r\nimport tabmanager.TabManager;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nenum CompletionType\r\n{\r\n\tREGULAR;\r\n\tFILELIST;\r\n\tPASTEFOLDER;\r\n    OPENFILE;\r\n\tCLASSLIST;\r\n\tHXML;\r\n\tMETATAGS;\r\n}\r\n\r\ntypedef CompletionItem = \r\n{\r\n\t@:optional\r\n\tvar d:String;\r\n\t@:optional\r\n\tvar t:String;\r\n\tvar n:String;\r\n}\r\n    \r\ntypedef TopLevelImport =\r\n{\r\n    name:String,\r\n    ?fullName:String\r\n}\r\n\r\nclass Completion\r\n{\r\n\tvar list:Array<CompletionData>;\r\n\tvar editor:CodeMirror;\r\n\tvar word:EReg;\r\n\tvar range:Int;\r\n\tvar cur:Pos;\r\n\tvar end:Int;\r\n\tvar start:Int;\r\n\tvar WORD:EReg = ~/[A-Z_0-9]+$/i;\r\n\tvar RANGE = 500;\r\n\tpublic var curWord:String;\r\n\tpublic var completions:Array<CompletionItem> = [];\r\n\tpublic var declarationPositions:Array<String> = [];\r\n\tvar completionType:CompletionType = REGULAR;\r\n\tvar completionActive:Bool;\r\n    \r\n\tstatic var instance:Completion;\r\n\t\r\n\tpublic static function get()\r\n\t{\r\n\t\tif (instance == null)\r\n\t\t{\r\n\t\t\tinstance = new Completion();\r\n\t\t}\r\n\t\t\t\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function load()\r\n\t{\r\n\t\tHxml.load();\r\n\t\tMetaTags.load();\r\n\t\t\r\n\t\tvar snippetsCompletion = SnippetsCompletion.get();\r\n\t\t\r\n\t\tsnippetsCompletion.load();\r\n\t\t\r\n        completionActive = false;\r\n        \r\n        Editor.editor.on(\"endCompletion\", function ()\r\n                        {\r\n                            completionActive = false;\r\n                        });\r\n\t}\r\n\r\n\t\r\n\tfunction getHints(cm:CodeMirror, ?options:Dynamic): { list: Array<CompletionData>, from: CodeMirror.Pos, to: CodeMirror.Pos }\r\n\t{\t\t\r\n\t\tword = null;\r\n\t\t\r\n\t\trange = null;\r\n\t\t\r\n\t\tif (options != null && options.range != null)\r\n\t\t{\r\n\t\t\trange = options.range;\r\n\t\t}\r\n\t\telse if (RANGE != null)\r\n\t\t{\r\n\t\t\trange = RANGE;\r\n\t\t}\r\n\t\t\r\n\t\tlist = new Array();\r\n\r\n\t\tswitch (completionType) \r\n\t\t{\r\n\t\t\tcase REGULAR:\r\n\t\t\t\tfor (completion in completions) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar completionItem = generateCompletionItem(completion.n, completion.t, completion.d);\r\n\t\t\t\t\tlist.push(completionItem);\r\n\t\t\t\t}\r\n        \t\t\r\n        \t\tgetCurrentWord(cm, {word: ~/[A-Z_0-9.]+$/i});\r\n        \r\n        \t\tvar className = \"CodeMirror-Tern-completion\";\t\r\n        \r\n\t\t\t\tif (curWord == null || curWord.indexOf(\".\") == -1)\r\n                    \r\n\t\t\t\t{\r\n\t\t\t\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar doc = tabManagerInstance.getCurrentDocument();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (doc != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar data = doc.getRange({line: 0, ch: 0}, {line: cm.getCursor().line + 1, ch: 0});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar functionParams = RegexParser.getFunctionParameters(data, doc.getCursor());\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (item in functionParams)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar completionItem = generateCompletionItem(item.name, item.type);\r\n\t\t\t\t\t\t\tlist.push(completionItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar variableDeclarations = RegexParser.getVariableDeclarations(data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (item in variableDeclarations)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar completionItem = generateCompletionItem(item.name, item.type);\r\n\t\t\t\t\t\t\tlist.push(completionItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar functionDeclarations = RegexParser.getFunctionDeclarations(doc.getValue());\r\n\r\n\t\t\t\t\t\tfor (item in functionDeclarations)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (item.name != \"\")\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar completionData = generateFunctionCompletionItem(item.name, item.params);\r\n\t\t\t\t\t\t\t\tvar completionItem = createCompletionItem(item.name, null, completionData);\r\n\t\t\t\t\t\t\t\tlist.push(completionItem);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar snippetsCompletion = SnippetsCompletion.get();\r\n\r\n\t\t\t\t    list = list.concat(snippetsCompletion.getCompletion());\r\n\r\n                    var classList = getClassList();\r\n                    \r\n\t\t\t\t\tvar packages:Array<String> = [];\t\t\t\t\r\n\t\r\n                    for (item in classList.topLevelClassList)\r\n                    {\r\n                        var completion:CompletionData = {text: item.name };\r\n                        completion.className = className + \" CodeMirror-Tern-completion-class\";\r\n                    \tlist.push(completion);\r\n                    }\r\n\r\n\t\t\t\t\tfor (list in [ClassParser.importsList, ClassParser.haxeStdImports])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor (item in list)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar str = item.split(\".\")[0];\r\n\t\r\n\t\t\t\t\t\t\tif (packages.indexOf(str) == -1 && str.charAt(0) == str.charAt(0).toLowerCase())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpackages.push(str);\r\n\t\t\t\t\t\t\t}\t \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (item in packages)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar completion:CompletionData = {text: item };\r\n                        completion.className = className + \" CodeMirror-Tern-completion-package\";\r\n                    \tlist.push(completion);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tcase METATAGS:\r\n\t\t\t\tlist = MetaTags.getCompletion();\r\n\t\t\tcase HXML:\r\n\t\t\t\tlist = Hxml.getCompletion().copy();\r\n        \r\n        \t\tfor (list2 in [ClassParser.topLevelClassList, ClassParser.importsList, ClassParser.haxeStdTopLevelClassList, ClassParser.haxeStdImports])\r\n                {\r\n                \tfor (item in list2) \r\n                    {\r\n                        list.push( { text: item} );\r\n                    }\r\n                }\r\n\t\t\tcase FILELIST:\r\n        \t\tvar displayText:String;\r\n        \r\n\t\t\t\tfor (list2 in [ClassParser.filesList, ClassParser.haxeStdFileList])\r\n                {\r\n                    for (item in list2) \r\n                    {                    \r\n                        list.push( { text: item.path, displayText: processDisplayText(item.path)} );\r\n                    }\r\n\t\t\t\t}\r\n            case PASTEFOLDER:\r\n        \t\tvar displayText:String;\r\n        \r\n        \t\tfor (item in ClassParser.filesList) \r\n\t\t\t\t{\r\n\t\t\t\t\tlist.push( { text: item.directory, displayText: processDisplayText(item.path)} );\r\n\t\t\t\t}\r\n\t\t\tcase CLASSLIST:\r\n\t\t\t\tvar classList = getClassList();\r\n                     \r\n\t\t\t\tvar className = \"CodeMirror-Tern-completion\";\r\n\r\n                for (item in classList.topLevelClassList)\r\n                {\r\n                    var completion:CompletionData = {text: item.name };\r\n                    completion.className = className + \" CodeMirror-Tern-completion-class\";\r\n                    list.push(completion);\r\n                }\r\n                    \r\n                for (item in classList.importsList)\r\n                {\r\n                    var completion:CompletionData = {text: item};\r\n                    completion.className = className + \" CodeMirror-Tern-completion-class\";\r\n                    list.push(completion);\r\n                }\r\n\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n    \tgetCurrentWord(cm, options);\r\n    \r\n\t\tlist = Filter.filter(list, curWord, completionType);\r\n\t\t\r\n\t\tvar data:Dynamic = { list: list, from: { line:cur.line, ch:start }, to: { line:cur.line, ch:end } };\r\n\t\tCodeMirrorStatic.attachContextInfo(Editor.editor, data);\r\n\r\n\t\tswitch (completionType)\r\n        {\r\n        \tcase REGULAR, CLASSLIST:\r\n                CodeMirrorStatic.on(data, \"pick\", searchForImport);\r\n            default:\r\n        }\r\n\r\n\t\treturn data;\r\n\t}\r\n\t\r\n    function searchForImport(completion:CompletionData)\r\n    {\r\n        var cm = Editor.editor;\r\n        \r\n        var cursor = cm.getCursor();\r\n        var curLine:String = cm.getLine(cursor.line);\r\n        \r\n\t\tif (!StringTools.startsWith(curLine, \"import \"))\r\n\t\t{\r\n\t\t\tvar word = ~/[A-Z_0-9\\.]+$/i;\r\n        \r\n\t\t\tvar importStart = cursor.ch;\r\n\t\t\tvar importEnd = importStart;\r\n\r\n\t\t\twhile (importStart > 0 && word.match(curLine.charAt(importStart - 1))) --importStart;\r\n\r\n\t\t\tif (importStart != importEnd) \r\n\t\t\t{\r\n\t\t\t\tvar fullImport = curLine.substring(importStart, importEnd);\r\n\r\n\t\t\t\tif (fullImport.indexOf(\".\") != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar topLevelClassList = getClassList().topLevelClassList;\r\n\t\t\t\t\tImportDefinition.searchImportByText(topLevelClassList, fullImport, {line: cursor.line, ch:importStart}, {line: cursor.line, ch:importEnd}, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\t\r\n    public function processDisplayText(displayText:String):String\r\n    {\r\n        if (displayText.length > 70)\r\n        {\r\n            displayText = displayText.substr(0, 35) + \" ... \" + displayText.substr(displayText.length - 35);\r\n        }\r\n            \r\n        return displayText;\r\n    }\r\n    \r\n\tpublic function getCurrentWord(cm:CodeMirror, ?options:Dynamic, ?pos:Pos):{word:String, from:CodeMirror.Pos, to:CodeMirror.Pos}\r\n\t{\r\n\t\tif (options != null && options.word != null)\r\n\t\t{\r\n\t\t\tword = options.word;\r\n\t\t}\r\n\t\telse if (WORD != null)\r\n\t\t{\r\n\t\t\tword = WORD;\r\n\t\t}\r\n\t\t\r\n\t\tif (pos != null) \r\n\t\t{\r\n\t\t\tcur = pos;\r\n\t\t}\r\n\t\t\r\n\t\tvar curLine:String = cm.getLine(cur.line);\r\n\t\tstart = cur.ch;\r\n\t\t\r\n\t\tend = start;\r\n\t\t\r\n\t\twhile (end < curLine.length && word.match(curLine.charAt(end))) ++end;\r\n\t\twhile (start > 0 && word.match(curLine.charAt(start - 1))) --start;\r\n\t\t\r\n\t\tcurWord = null;\r\n\t\t\r\n\t\tif (start != end) \r\n\t\t{\r\n\t\t\tcurWord = curLine.substring(start, end);\r\n\t\t}\r\n\t\t\r\n\t\treturn {word:curWord, from: {line:cur.line, ch: start}, to: {line:cur.line, ch: end}};\r\n\t}\r\n\t\r\n\tpublic function getCompletion(onComplete:Dynamic, ?_pos:Pos, ?mode:String, ?moveCursorToStart:Bool = true):Void\r\n\t{        \r\n\t\tif (ProjectAccess.path != null) \r\n\t\t{\r\n\t\t\tvar projectArguments:Array<String> = [];\r\n\t\t\t//= ProjectAccess.currentProject.args.copy();\r\n\t\t\t\r\n\t\t\tvar project = ProjectAccess.currentProject;\r\n            \r\n\t\t\tswitch (project.type)\r\n\t\t\t{\r\n\t\t\t\tcase Project.HAXE:\r\n\t\t\t\t\tvar pathToHxml:String = project.targetData[project.target].pathToHxml;\r\n\t\t\t\t\tprojectArguments.push(pathToHxml);\r\n\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\r\n\t\t\t\tcase Project.HXML:\r\n\t\t\t\t\tprojectArguments.push(project.main);\r\n\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\r\n\t\t\t\tcase Project.OPENFL:\r\n\t\t\t\t\tOpenFL.parseOpenFLDisplayParameters(ProjectAccess.path, project.openFLTarget, function (args:Array<String>):Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprojectArguments = args;\r\n\t\t\t\t\t\tprocessArguments(projectArguments, onComplete, _pos, mode, moveCursorToStart);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction processArguments(projectArguments:Array<String>, onComplete:Dynamic, ?_pos:Pos, mode:String, moveCursorToStart:Bool):Void \r\n\t{\r\n        trace(\"processArguments\");\r\n        \r\n\t\tprojectArguments.push(\"--no-output\");\r\n\t\tprojectArguments.push(\"--display\");\r\n\t\t\r\n\t\tvar cm:CodeMirror = Editor.editor;\r\n\t\tcur = _pos;\r\n\t\t\r\n\t\tif (cur == null) \r\n\t\t{\r\n\t\t\tcur = cm.getCursor();\r\n\t\t}\r\n\t\t\r\n\t\tgetCurrentWord(cm, null, cur);\r\n\t\t\r\n\t\tif (curWord != null) \r\n\t\t{\r\n\t\t\tcur = {line: cur.line,  ch:start};\r\n\t\t}\r\n\t\t\t\r\n\t\tif (moveCursorToStart == false)\r\n\t\t{\r\n// \t\t\tcur.ch = cm.getCursor().ch;\r\n\t\t\tcur.ch = end;\r\n\t\t\t\r\n\t\t\tif (mode == \"position\")\r\n\t\t\t{\r\n\t\t\t\tcur.ch += 1;\r\n\t\t\t}\r\n\r\n// \t\t\ttrace(cm.getRange({line:cur.line, ch: 0}, {line:cur.line, ch:end}));\r\n\t\t}\r\n\t\t\r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\t\r\n\t\tvar displayArgs = tabManagerInstance.getCurrentDocumentPath() + \"@\" + Std.string(cm.indexFromPos(cur));\r\n\t\t\r\n\t\tif (mode != null)\r\n\t\t{\r\n\t\t\tdisplayArgs += \"@\" + mode;\r\n\t\t}\r\n\t\t\t\r\n\t\tprojectArguments.push(displayArgs);\r\n\t\t\r\n\t\tcompletions = [];\r\n\t\tdeclarationPositions = [];\r\n\t\t\r\n\t\tvar params = [\"--connect\", \"5000\", \"--cwd\", HIDE.surroundWithQuotes(ProjectAccess.path)].concat(projectArguments);\r\n\t\ttrace(params);\r\n\t\tvar pathToHaxe = HaxeHelper.getPathToHaxe();\r\n\t\t\r\n\t\tvar processHelper = ProcessHelper.get();\r\n\t\t\r\n\t\tprocessHelper.runProcess(pathToHaxe, params, null, function (stdout:String, stderr:String)\r\n\t\t{\r\n\t\t\tvar xml:Xml = Xml.parse(stderr);\r\n\t\t\t\r\n\t\t\tvar fast = new Fast(xml);\r\n\t\t\t\r\n\t\t\tif (fast.hasNode.list)\r\n\t\t\t{\r\n\t\t\t\tvar list = fast.node.list;\r\n\t\t\t\tvar completion:CompletionItem;\r\n\t\t\t\t\r\n\t\t\t\tif (list.hasNode.i)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (item in list.nodes.i) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (item.has.n)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcompletion = {n: item.att.n};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (item.hasNode.d)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tvar str = StringTools.trim(item.node.d.innerHTML);\r\n\t\t\t\t\t\t\t\tstr = StringTools.replace(str, \"\\t\", \"\");\r\n\t\t\t\t\t\t\t\tstr = StringTools.replace(str, \"\\n\", \"\");\r\n\t\t\t\t\t\t\t\tstr = StringTools.replace(str, \"*\", \"\");\r\n\t\t\t\t\t\t\t\tstr = StringTools.replace(str, \"&lt;\", \"<\");\r\n\t\t\t\t\t\t\t\tstr = StringTools.replace(str, \"&gt;\", \">\");\r\n\t\t\t\t\t\t\t\tstr = StringTools.trim(str);\r\n\t\t\t\t\t\t\t\tcompletion.d = str;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (item.hasNode.t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcompletion.t = item.node.t.innerData;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcompletions.push(completion);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (fast.hasNode.pos)\r\n\t\t\t{\r\n\t\t\t\tfor (item in fast.nodes.pos)\r\n\t\t\t\t{\r\n\t\t\t\t\t declarationPositions.push(item.innerData);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tonComplete();\r\n\t\t}, \r\n\t\tfunction (code:Int, stdout:String, stderr:String)\r\n\t\t{\r\n\t\t\ttrace(code);\r\n\t\t\ttrace(stderr);\r\n\t\t\t\r\n\t\t\tonComplete();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\t\r\n    function getHintAsync(cm:CodeMirror, c:Dynamic->Void)\r\n\t{\r\n        if (completionActive)\r\n        {\r\n            c(getHints(cm));\r\n        }\r\n        else\r\n        {\r\n            getCompletion(function ()\r\n                                     {\r\n                                         c(getHints(cm));\r\n                                     });\r\n            \r\n            completionActive = true;\r\n\t\t\t\r\n        }\r\n    }\r\n        \r\n\tpublic function isEditorVisible():Bool\r\n\t{\r\n\t\tvar editor = cast(Browser.document.getElementById(\"editor\"), DivElement);\r\n\t\treturn editor.style.display != \"none\";\r\n\t}\r\n\t\r\n\tpublic function showRegularCompletion(?getCompletionFromHaxeCompiler:Bool = true):Void\r\n\t{\r\n\t\tif (isEditorVisible()) \r\n\t\t{\r\n\t\t\tEditor.regenerateCompletionOnDot = true;\r\n\t\t\tWORD = ~/[A-Z_0-9]+$/i;\r\n\t\t\tcompletionType = REGULAR;\r\n            \r\n\t\t\tvar cm = Editor.editor;\r\n\t\t\t\r\n            if (!getCompletionFromHaxeCompiler)\r\n\t\t\t{\r\n\t\t\t\tcompletionActive = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar hint:Dynamic = getHintAsync;\r\n\t\t\thint.async = true;\r\n\t\t\tcm.showHint({hint: hint, completeSingle: false});\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function showMetaTagsCompletion():Void\r\n\t{\r\n\t\tif (isEditorVisible()) \r\n\t\t{\r\n            cur = Editor.editor.getCursor();\r\n            Editor.regenerateCompletionOnDot = false;\r\n\t\t\tWORD = ~/[A-Z_0-9@:]+$/i;\r\n\t\t\tcompletionType = METATAGS;\r\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: untyped __js__(\"/[\\\\s()\\\\[\\\\]{};>,]/\") } );\r\n\t\t}\r\n\t}\r\n        \r\n\tpublic function showHxmlCompletion():Void\r\n\t{\r\n\t\tif (isEditorVisible()) \r\n\t\t{\r\n            cur = Editor.editor.getCursor();\r\n            Editor.regenerateCompletionOnDot = false;\r\n\t\t\tWORD = ~/[A-Z_0-9- \\.\\\\\\/]+$/i;\r\n\t\t\tcompletionType = HXML;\r\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: untyped __js__(\"/[()\\\\[\\\\]{};:>,]/\") } );\r\n\t\t}\r\n\t}\r\n\t\r\n//     Quick Open/Show File List for Hxml completion\r\n\tpublic function showFileList(?openFile:Bool = true, ?insertDirectory:Bool = false):Void\r\n\t{\t\t\r\n        if (openFile)\r\n        {\r\n            completionType = OPENFILE;\r\n\t\t\t\r\n\t\t\tvar quickOpen = QuickOpen.get();\r\n\t\t\t\r\n            quickOpen.show(ClassParser.filesList.copy().concat(ClassParser.haxeStdFileList));\r\n        }\r\n        else if (isEditorVisible()) \r\n\t\t{\r\n            cur = Editor.editor.getCursor();\r\n\t\t\tEditor.regenerateCompletionOnDot = false;\r\n\t\t\tWORD = ~/[A-Z_0-9-\\.\\\\\\/]+$/i;\r\n            \r\n            if (insertDirectory == false)\r\n            {\r\n                completionType = FILELIST;\r\n            }\r\n            else\r\n            {\r\n                completionType = PASTEFOLDER;\r\n            }\r\n                \r\n            CodeMirrorStatic.showHint(Editor.editor, getHints);\r\n\t\t}\r\n\t}\r\n\t\r\n//     Shows list of all classes available for project, used to provide imports completion(\"import |\"), triggered on \":\" symbol\r\n\tpublic function showClassList(?ignoreWhitespace:Bool = false):Void\r\n\t{\r\n\t\tif (isEditorVisible()) \r\n\t\t{\r\n            cur = Editor.editor.getCursor();\r\n\t\t\tEditor.regenerateCompletionOnDot = true;\r\n\t\t\tWORD = ~/[A-Z_0-9\\.]+$/i;\r\n\t\t\tcompletionType = CLASSLIST;\r\n            \r\n//             default closeCharacters value\r\n//             \"/[\\s()\\[\\]{};:>,]/\"\r\n\t\t\t\r\n\t\t\tvar closeCharacters = untyped __js__(\"/[\\\\s()\\\\[\\\\]{};>,]/\");\r\n\t\t\t\r\n\t\t\tif (ignoreWhitespace) \r\n\t\t\t{\r\n\t\t\t\tcloseCharacters = untyped __js__(\"/[()\\\\[\\\\]{};>,]/\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tCodeMirrorStatic.showHint(Editor.editor, getHints, { closeCharacters: closeCharacters  } );\r\n\t\t}\r\n\t}\r\n\t\r\n// \tstatic function getImportHints(cm:CodeMirror)\r\n// \t{\r\n        \r\n//     }\r\n\r\n\tfunction searchImage(name:String, ?type:String, ?description:String)\r\n\t{\r\n\t\tvar functionParametersHelper = FunctionParametersHelper.get();\r\n\t\t\r\n\t\tvar functionData = functionParametersHelper.parseFunctionParams(name, type, description);\r\n\t\t\r\n\t\tvar info:String = null;\r\n\r\n\t\tvar className = \"CodeMirror-Tern-completion\";\r\n\r\n\t\tif (functionData.parameters != null) \r\n\t\t{\r\n\t\t\tvar data = generateFunctionCompletionItem(name, functionData.parameters);\r\n\t\t\tclassName = data.className;\r\n\t\t\tinfo = data.info + \":\" + functionData.retType;\r\n\t\t}\r\n\t\telse if (type != null)\r\n\t\t{\r\n\t\t\tinfo = type;\r\n\r\n\t\t\tswitch (info) \r\n\t\t\t{\r\n\t\t\t\tcase \"Bool\":\r\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-bool\";\r\n\t\t\t\tcase \"Float\", \"Int\", \"UInt\":\r\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-number\";\r\n\t\t\t\tcase \"String\":\r\n\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-string\";\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (info.indexOf(\"Array\") != -1) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-array\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(info.indexOf(\"Map\") != -1 || info.indexOf(\"StringMap\") != -1) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-map\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclassName += \" CodeMirror-Tern-completion-object\";\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\treturn {className: className, info: info};\r\n\t}\r\n\r\n\tfunction generateFunctionCompletionItem(name:String, params:Array<String>)\r\n\t{\r\n\t\tvar info:String = null;\r\n\r\n\t\tvar className = \"CodeMirror-Tern-completion\";\r\n\t\t\r\n\t\tinfo = name + \"(\";\r\n\t\t\r\n\t\tif (params != null)\r\n\t\t{\r\n\t\t\tinfo += params.join(\", \");\r\n\t\t}\r\n\t\t\t\r\n\t\tinfo += \")\";\r\n\t\t\r\n\t\tclassName += \" CodeMirror-Tern-completion-fn\";\r\n\t\t\r\n\t\treturn {className: className, info: info};\r\n\t}\r\n\r\n\tfunction generateCompletionItem(name:String, ?type:String, ?description:String)\r\n\t{\r\n\t\tvar completionData = searchImage(name, type, description);\r\n\t\treturn createCompletionItem(name, description, completionData);\r\n\t}\r\n\r\n\tfunction createCompletionItem(name:String, description:String, completionData:Dynamic)\r\n\t{\r\n\t\tvar completionItem:CompletionData = { text: name };\r\n\r\n\t\tcompletionItem.className = completionData.className;\t\r\n\r\n\t\tvar infoSpan:SpanElement = Browser.document.createSpanElement();\r\n\r\n\t\tif (completionData.info != null)\r\n\t\t{\r\n\t\t\tvar infoTypeSpan:SpanElement = Browser.document.createSpanElement();\r\n\t\t\tinfoTypeSpan.textContent = completionData.info;\r\n\t\t\tinfoSpan.appendChild(infoTypeSpan);\r\n\r\n\t\t\tinfoSpan.appendChild(Browser.document.createElement(\"br\"));\r\n\t\t\tinfoSpan.appendChild(Browser.document.createElement(\"br\"));\r\n\t\t}\r\n\r\n\t\tif (description != null)\r\n\t\t{\r\n\t\t\tvar infoDescriptionSpan:SpanElement = Browser.document.createSpanElement();\r\n\t\t\tinfoDescriptionSpan.className = \"completionDescription\";\r\n\t\t\tinfoDescriptionSpan.innerHTML = description;\r\n\t\t\tinfoSpan.appendChild(infoDescriptionSpan);\r\n\t\t}\r\n\r\n\t\tif (completionData.info != null || description != null)\r\n\t\t{\r\n\t\t\tcompletionItem.info = function (completionItem) \r\n\t\t\t{\r\n\t\t\t\treturn infoSpan;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn completionItem;\r\n\t}\r\n\r\n\r\n\tpublic function showImportDefinition(importsSuggestions:Array<String>, ?from:CodeMirror.Pos, ?to:CodeMirror.Pos)\r\n\t{\r\n        var cm = Editor.editor;\r\n        \r\n        CodeMirrorStatic.showHint(cm, function ()\r\n            {\r\n                var completions:Array<CompletionData> = [];\r\n                \r\n                var completion:CompletionData;\r\n                \r\n                for (item in importsSuggestions)\r\n                {\r\n                     completion = {};\r\n                     completion.text = item;\r\n                     completion.displayText = \"import \" + item;\r\n                     completion.hint = ImportDefinition.importClassHint.bind(from, to);\r\n                     completions.push(completion);\r\n\t\t\t\t}\r\n        \t\t\r\n\t\t\t\tvar pos = cm.getCursor();\r\n                                  \r\n        \t\tvar data:Dynamic = { list: completions, from: pos, to: pos };\r\n        \t\treturn data;\r\n            }\r\n        , {completeSingle: false});\r\n    }\r\n\t\t\r\n\tpublic function showActions(completions:Array<CompletionData>)\r\n\t{\r\n\t\tvar cm = Editor.editor;\r\n        \r\n        CodeMirrorStatic.showHint(cm, function ()\r\n            {        \t\t\r\n\t\t\t\tvar pos = cm.getCursor();\r\n                                  \r\n        \t\tvar data:Dynamic = { list: completions, from: pos, to: pos };\r\n        \t\treturn data;\r\n            }\r\n        , {completeSingle: false});\r\n\t}\r\n\r\n\t\t\r\n\tpublic function showCodeSuggestions(suggestions:Array<String>)\r\n\t{\r\n\t\tvar cm = Editor.editor;\r\n        \r\n        CodeMirrorStatic.showHint(cm, function ()\r\n            {\r\n                var completions:Array<CompletionData> = [];\r\n                \r\n                var completion:CompletionData;\r\n                \r\n\t\t\t\tvar pos = cm.getCursor();\r\n\t\t\t\t\r\n\t\t\t\tvar word = getCurrentWord(cm, {word: ~/[A-Z_0-9]+$/i}, pos).word;\r\n\t\t\t\t\r\n                for (item in suggestions)\r\n                {\r\n\t\t\t\t\t if (word == null || StringTools.startsWith(item, word))\r\n\t\t\t\t\t {\r\n\t\t\t\t\t\t completion = {};\r\n\t\t\t\t\t\t completion.text = item;\r\n\t\t\t\t\t\t completions.push(completion); \r\n\t\t\t\t\t } \r\n\t\t\t\t}\r\n                                  \r\n\t\t\t\tvar data:Dynamic = { list: completions, from: {line: pos.line, ch: start}, to: {line: pos.line, ch: end} };\r\n        \t\treturn data;\r\n            }\r\n        , {completeSingle: false});\r\n\t}\r\n\t\r\n    public function getClassList()\r\n    {\r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\r\n        var value = tabManagerInstance.getCurrentDocument().getValue();\r\n\t\tvar mainClass = Node.path.basename(tabManagerInstance.getCurrentDocumentPath(), \".hx\");\r\n\r\n        var filePackage = RegexParser.getFilePackage(value);\r\n        var fileImports = RegexParser.getFileImportsList(value);\r\n\r\n        var topLevelClassList:Array<TopLevelImport> = [];\r\n        var importsList:Array<String> = [];\r\n        \r\n        var relativeImport:String = null;\r\n\r\n        var parentPackages:Array<String> = [];\r\n        \r\n        if (filePackage.filePackage != null && filePackage.filePackage != \"\")\r\n        {\r\n            var packages = filePackage.filePackage.split(\".\");\r\n\r\n            var parentPackage:String;\r\n\r\n            while (packages.length > 0)\r\n            {\r\n                parentPackage = packages.join(\".\");\r\n                packages.pop();\r\n                parentPackages.push(parentPackage);\r\n            }\r\n        }\r\n        \r\n        var found:Bool;\r\n            \r\n        for (list2 in [ClassParser.importsList, ClassParser.haxeStdImports])\r\n        {\r\n            for (item in list2) \r\n            {\r\n                found = false;\r\n                \r\n                for (parentPackage in parentPackages)\r\n                {\r\n                \tif (StringTools.startsWith(item, parentPackage + \".\") && item.indexOf(\".\", parentPackage.length + 1) == -1)\r\n                    {\r\n                        relativeImport = item.substr(parentPackage.length + 1);\r\n                        topLevelClassList.push({name: relativeImport, fullName: item});\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n            \tif (!found)\r\n                {\r\n                    if (fileImports.indexOf(item) != -1)\r\n                    {\r\n                        relativeImport = item.split(\".\").pop();\r\n                        topLevelClassList.push({name: relativeImport, fullName: item});\r\n                    }\r\n                    else if (filePackage.filePackage != null && filePackage.filePackage != \"\" && StringTools.startsWith(item, filePackage.filePackage + \".\"))\r\n                    {\r\n\t\t\t\t\t\trelativeImport = item.substr(filePackage.filePackage.length + 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttrace(relativeImport);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (StringTools.startsWith(relativeImport, mainClass + \".\"))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trelativeImport = relativeImport.substr(mainClass.length + 1);\r\n\t\t\t\t\t\t\ttrace(relativeImport);\r\n\t\t\t\t\t\t\ttopLevelClassList.push({name: relativeImport, fullName: item});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\timportsList.push(relativeImport);\r\n\t\t\t\t\t\t}\r\n                    }\r\n                    else\r\n                    {\r\n                        relativeImport = item;\r\n                        importsList.push(relativeImport);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        for (list2 in [ClassParser.haxeStdTopLevelClassList, ClassParser.topLevelClassList])\r\n        {\r\n            for (item in list2) \r\n            {\r\n\r\n                topLevelClassList.push({name: item});\r\n            }\r\n        }\r\n            \r\n       \tfor (item in fileImports)\r\n        {\r\n            found = false;\r\n             \r\n\t\t\trelativeImport = item.split(\".\").pop();\r\n\t\t\t\r\n\t\t\tfor (topLevelItem in topLevelClassList)\r\n            {\r\n                if (topLevelItem.name == relativeImport)\r\n                {\r\n                    found = true;\r\n                    break;\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\tif (!found)\r\n            {\r\n                topLevelClassList.push({name: relativeImport, fullName: item});\r\n            }\r\n\t\t}\r\n            \r\n        return {topLevelClassList: topLevelClassList, importsList: importsList};\r\n    }\r\n\r\n        \r\n\tpublic function getCompletionType()\r\n    {\r\n        return completionType;\r\n    }\r\n\r\n}\r\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","package filetree;\r\nimport projectaccess.Project;\r\nimport core.RunProject;\r\nimport haxe.ds.StringMap.StringMap;\r\nimport jQuery.JQuery;\r\nimport jQuery.JQueryStatic;\r\nimport js.Browser;\r\nimport js.html.AnchorElement;\r\nimport js.html.DivElement;\r\nimport js.html.LIElement;\r\nimport js.html.MouseEvent;\r\nimport js.html.UListElement;\r\nimport js.Node;\r\nimport js.node.Mv;\r\nimport js.Node.NodeStat;\r\nimport js.node.Remove;\r\nimport js.node.Walkdir;\r\nimport js.node.Watchr;\r\nimport nodejs.webkit.Shell;\r\nimport parser.ClasspathWalker;\r\nimport projectaccess.ProjectAccess;\r\nimport tabmanager.TabManager;\r\nimport watchers.LocaleWatcher;\r\nimport watchers.SettingsWatcher;\r\nimport watchers.Watcher;\r\nimport core.OutlinePanel.TreeItem;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\n\r\ntypedef ContextMenuItem = \r\n{\r\n\t?element:LIElement,\r\n\t?cb:Dynamic\r\n}\r\n\r\nclass FileTree\r\n{\r\n\tvar lastProjectName:String;\r\n\tvar lastProjectPath:String;\r\n\t\r\n\tvar contextMenu:Dynamic;\r\n\tvar contextMenuCommandsMap:StringMap<ContextMenuItem>;\r\n\tvar watcher:Dynamic;\r\n\t\r\n\tstatic var instance:FileTree;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\t\r\n\t\r\n\tpublic static function get()\r\n\t{\r\n\t\tif (instance == null)\r\n\t\t{\r\n\t\t\tinstance = new FileTree();\r\n\t\t}\r\n\t\t\t\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function init():Void\r\n\t{\t\t\r\n\t\tcontextMenuCommandsMap = new StringMap();\r\n\t\t\r\n\t\tappendToContextMenu(\"New File...\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tvar path:String;\r\n\t\t\t\r\n\t\t\tif (selectedItem.value.type == 'folder') \r\n\t\t\t{\r\n\t\t\t\tpath = selectedItem.value.path;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tpath = Node.path.dirname(selectedItem.value.path);\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\tAlertify.prompt(LocaleWatcher.getStringSync(\"Filename:\"), function (e:Bool, str:String)\r\n\t\t\t{\r\n\t\t\t\tif (e) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar pathToFile:String = js.Node.path.join(path, str);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar tabManager = TabManager.get();\r\n\t\t\t\t\ttabManager.createFileInNewTab(pathToFile);\r\n\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('addTo', createFileItem(pathToFile) , selectedItem.element);\r\n\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t}\r\n\t\t\t}, \"New.hx\");\r\n\t\t});\r\n\t\t\r\n\t\tappendToContextMenu(\"New Folder...\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tvar path:String;\r\n\t\t\t\r\n\t\t\tif (selectedItem.value.type == 'folder') \r\n\t\t\t{\r\n\t\t\t\tpath = selectedItem.value.path;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tpath = Node.path.dirname(selectedItem.value.path);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tAlertify.prompt(\"Folder name:\", function (e, str:String)\r\n\t\t\t{\r\n\t\t\t\tif (e) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar dirname:String = str;\r\n\t\t\t\r\n\t\t\t\t\tif (dirname != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar pathToFolder = Node.path.join(path, dirname);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tNode.fs.mkdir(pathToFolder, function (error:NodeErr):Void\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('addTo', { label: str, value: {type: \"folder\", path: pathToFolder}}, selectedItem.element);\r\n\t\t\t\t\t\t\t\t//icon: \"includes/images/folder.png\"\r\n\t\t\t\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tAlertify.error(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, \"New Folder\");\r\n\t\t});\r\n\t\t\r\n\t\tappendToContextMenu(\"Edit\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tvar tabManager = TabManager.get();\r\n\t\t\t\r\n\t\t\tif (selectedItem.value.type == 'file') \r\n\t\t\t{\r\n\t\t\t\ttabManager.openFileInNewTab(selectedItem.value.path);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tuntyped new JQuery('#filetree').jqxTree('expandItem', selectedItem.element);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tappendToContextMenu(\"Execute\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tShell.openItem(selectedItem.value.path);\r\n\t\t});\r\n\t\t\r\n\t\tappendToContextMenu(\"Show Item In Folder\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tShell.showItemInFolder(selectedItem.value.path);\r\n\t\t});\r\n\t\t\r\n\t\tappendToContextMenu(\"Rename...\", function (selectedItem):Void \r\n\t\t{\t\t\t\r\n\t\t\tvar path = selectedItem.value.path;\r\n\t\t\t\r\n\t\t\tAlertify.prompt(LocaleWatcher.getStringSync(\"Please enter new name for \") + path, function (e, str):Void \r\n\t\t\t{\r\n\t\t\t\tif (e) \r\n\t\t\t\t{\r\n\t\t\t\t\tvar currentDirectory:String = Node.path.dirname(path);\r\n\t\t\t\t\tMv.move(path, Node.path.join(currentDirectory, str), function (error):Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tload();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tAlertify.error(error);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t, Node.path.basename(path));\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tappendToContextMenu(\"Delete...\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tvar path = selectedItem.value.path;\r\n\t\t\t\r\n\t\t\tswitch (selectedItem.value.type) \r\n\t\t\t{\r\n\t\t\t\tcase 'file':\r\n\t\t\t\t\tAlertify.confirm(LocaleWatcher.getStringSync(\"Remove file \") + path + \" ?\", function (e):Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (e) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tNode.fs.unlink(path, function (error:NodeErr):Void \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\r\n\t\t\t\t\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tAlertify.error(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\tcase 'folder':\r\n\t\t\t\t\tAlertify.confirm(LocaleWatcher.getStringSync(\"Remove folder \") + path + \" ?\", function (e):Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (e) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tRemove.removeAsync(path, {}, function (error):Void \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\r\n\t\t\t\t\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tAlertify.error(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tappendToContextMenu(\"Hide/Unhide All\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tif (ProjectAccess.path != null) \r\n\t\t\t{\r\n\t\t\t\tProjectAccess.currentProject.showHiddenItems = !ProjectAccess.currentProject.showHiddenItems;\r\n\t\t\t\tAlertify.success(LocaleWatcher.getStringSync(\"Hidden Items Visible: \") + Std.string(ProjectAccess.currentProject.showHiddenItems));\r\n\t\t\t\t\r\n\t\t\t\tif (!ProjectAccess.currentProject.showHiddenItems) \r\n\t\t\t\t{\r\n\t\t\t\t\tAlertify.log(\"Hidden Items: \\n\" + Std.string(ProjectAccess.currentProject.hiddenItems));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tload();\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tappendToContextMenu(\"Hide/Unhide\", function (selectedItem):Void \r\n\t\t{\r\n\t\t\tif (ProjectAccess.path != null) \r\n\t\t\t{\r\n\t\t\t\tvar path = selectedItem.value.path;\r\n\t\t\t\t\r\n\t\t\t\tif (!ProjectAccess.isItemHidden(path))\r\n\t\t\t\t{\r\n\t\t\t\t\tProjectAccess.hideItem(path);\r\n\t\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\r\n\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tProjectAccess.unhideItem(path);\r\n\t\t\t\t\tload();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tuntyped new JQuery('#filetree').jqxTree('removeItem', selectedItem.element);\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tappendToContextMenu(\"Set As Compile Main\", function (selectedItem):Void\r\n\t\t{\r\n\t\t\tvar path:String = selectedItem.value.path;\r\n\t\t\t\r\n\t\t\tif (RunProject.setHxmlAsProjectBuildFile(path))\r\n\t\t\t{\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tcontextMenu = untyped new JQuery(\"#jqxMenu\").jqxMenu({ autoOpenPopup: false, mode: 'popup' });\r\n\t\t\r\n\t\tattachContextMenu();\r\n\t\t\r\n\t\t// disable the default browser's context menu.\r\n\t\tnew JQuery(Browser.document).on('contextmenu', function (e) {\r\n\t\t\tif (new JQuery(e.target).parents('.jqx-tree').length > 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\t\r\n\t\tnew JQuery(\"#jqxMenu\").on('itemclick', function (event) \r\n\t\t{\r\n\t\t\tvar item = Lambda.find(contextMenuCommandsMap, function (contextMenuItem)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn event.args == contextMenuItem.element;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t   );\r\n\t\t\t\r\n\t\t\titem.cb();\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tnew JQuery('#filetree').dblclick(function (event):Void \r\n\t\t{\r\n\t\t\tvar item = untyped new JQuery('#filetree').jqxTree('getSelectedItem');\r\n\t\t\t\r\n\t\t\tif (item != null)\r\n\t\t\t{\r\n\t\t\t\tvar value = item.value;\r\n\t\t\t\r\n\t\t\t\tif (value != null && value.type == 'file') \r\n\t\t\t\t{\r\n\t\t\t\t\tvar tabManager = TabManager.get();\r\n\t\t\t\t\ttabManager.openFileInNewTab(item.value.path);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t);\r\n\t\t\r\n\t\tnew JQuery('#filetree').bind('dragEnd', function (event) {\r\n                var target = event.args.originalEvent.target;\r\n                var targetParents = new JQuery(target).parents();\r\n                var item:Dynamic = null;\r\n                JQueryStatic.each(untyped new JQuery(\"#filetree\").jqxTree('getItems'), function (index, value) {\r\n                    if (value.label == event.args.label && value.value == event.args.value) {\r\n                        item = value;\r\n                        untyped __js__('return false');\r\n                    }\r\n                });\r\n                if (item) {\r\n                    var parents = new JQuery(item.element).parents('li');\r\n                    var path = \"\";\r\n\t\t\t\t\t\r\n                    JQueryStatic.each(parents, function (index, value) {\r\n                        var item = untyped new JQuery(\"#filetree\").jqxTree('getItem', value);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (item.level > 0) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t path = item.label + \"/\" + path;\r\n\t\t\t\t\t\t}\r\n                    });\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar topDirectory = untyped new JQuery(\"#filetree\").jqxTree('getItems')[0].value.path;\r\n\t\t\t\t\tvar selectedItem = untyped new JQuery(\"#filetree\").jqxTree('getSelectedItem');\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar previousPath = selectedItem.value.path;\r\n                    var newPath = Node.path.join(topDirectory, path, selectedItem.label);\r\n\t\t\t\t\t\r\n\t\t\t\t\tMv.move(previousPath, newPath, function (error:NodeErr):Void \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tAlertify.success(\"File were successfully moved to \" + newPath);\r\n\t\t\t\t\t\t\tselectedItem.value.path = newPath;\r\n\t\t\t\t\t\t\tattachContextMenu();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tAlertify.error(\"Can't move file from \" + previousPath + \" to \" + newPath);\r\n\t\t\t\t\t\t\tload();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n                }\r\n            });\r\n\t}\r\n\t\r\n\tstatic function updateProjectMainHxml()\r\n\t{\r\n\t\tvar project = ProjectAccess.currentProject;\r\n\t\t\r\n\t\tvar noproject = (ProjectAccess.path == null);\r\n\t\t\r\n\t\tvar main = null;\r\n\t\t\r\n\t\tswitch (project.type)\r\n\t\t{\r\n\t\t\tcase Project.HAXE:\r\n\t\t\t\tif (!noproject)\r\n\t\t\t\t{\r\n\t\t\t\t\tmain = Node.path.resolve(ProjectAccess.path, project.targetData[project.target].pathToHxml);\r\n\t\t\t\t}\r\n\r\n\t\t\tcase Project.HXML:\r\n\t\t\t\tif (!noproject && project.main != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tmain = Node.path.resolve(ProjectAccess.path, project.main);\r\n\t\t\t\t}\r\n\t\t\tcase Project.OPENFL:\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t\t\r\n\t\tvar items:Array<Dynamic> = untyped new JQuery('#filetree').jqxTree('getItems');\r\n\t\t\t\t\r\n\t\tfor (item in items)\r\n\t\t{\r\n\t\t\tvar li = cast(item.element, LIElement);\r\n\r\n\t\t\tif (!noproject && main != null && item.value.path == main)\r\n\t\t\t{\r\n\t\t\t\tli.classList.add(\"mainHxml\");\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tli.classList.remove(\"mainHxml\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction appendToContextMenu(name:String, onClick:Dynamic)\r\n\t{\r\n\t\tvar li:LIElement = Browser.document.createLIElement();\r\n\t\tli.textContent = name;\r\n\t\tnew JQuery(\"#filetreemenu\").append(li);\r\n\t\t\r\n\t\tvar contextMenuItem:ContextMenuItem = {};\r\n\t\t\r\n\t\tcontextMenuItem.cb = function ():Void \r\n\t\t{\r\n\t\t\tvar selectedItem = untyped new JQuery('#filetree').jqxTree('getSelectedItem');\r\n\t\t\tif (selectedItem != null) \r\n\t\t\t{\r\n\t\t\t\tonClick(selectedItem);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tcontextMenuItem.element = li;\r\n\t\t\r\n\t\tcontextMenuCommandsMap.set(name, contextMenuItem);\r\n\t}\r\n\t\r\n\tfunction attachContextMenu() \r\n\t{\r\n\t\t// open the context menu when the user presses the mouse right button.\r\n\t\tnew JQuery(\"#filetree li\").on('mousedown', function (event) {\t\t\t\r\n\t\t\tvar target = new JQuery(event.target).parents('li:first')[0];\r\n\t\t\tvar rightClick = isRightClick(event);\r\n\t\t\tif (rightClick && target != null) \r\n\t\t\t{\r\n\t\t\t\tuntyped new JQuery(\"#filetree\").jqxTree('selectItem', target);\r\n\t\t\t\tvar scrollTop = new JQuery(Browser.window).scrollTop();\r\n\t\t\t\tvar scrollLeft = new JQuery(Browser.window).scrollLeft();\r\n\t\t\t\t\r\n\t\t\t\tvar selectedItem = untyped new JQuery(\"#filetree\").jqxTree('getSelectedItem');\r\n\t\t\t\tvar extname = Node.path.extname(selectedItem.value.path);\r\n\t\t\t\t\r\n\t\t\t\tvar editElement = contextMenuCommandsMap.get(\"Edit\").element;\r\n\t\t\t\t\r\n\t\t\t\tif (selectedItem.value.type == \"file\")\r\n\t\t\t\t{\r\n\t\t\t\t\teditElement.textContent = \"Edit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (selectedItem.value.type == \"folder\")\r\n\t\t\t\t{\r\n\t\t\t\t\teditElement.textContent = \"Open Folder\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar setAsCompileMainelement = contextMenuCommandsMap.get(\"Set As Compile Main\").element;\r\n\t\t\t\t\r\n\t\t\t\tif (extname != \".hxml\")\r\n\t\t\t\t{\r\n\t\t\t\t\tnew JQuery(setAsCompileMainelement).hide();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tnew JQuery(setAsCompileMainelement).show();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (ProjectAccess.path != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar hideUnhideItemElement = contextMenuCommandsMap.get(\"Hide/Unhide\").element;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!ProjectAccess.isItemHidden(selectedItem.value.path))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thideUnhideItemElement.textContent = \"Hide\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\thideUnhideItemElement.textContent = \"Unhide\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tvar showHiddenItemsElement = contextMenuCommandsMap.get(\"Hide/Unhide All\").element;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (ProjectAccess.currentProject.showHiddenItems)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tshowHiddenItemsElement.textContent = \"Hide All\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tshowHiddenItemsElement.textContent = \"Unhide All\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tcontextMenu.jqxMenu('open', Std.parseInt(event.clientX) + 5 + scrollLeft, Std.parseInt(event.clientY) + 5 + scrollTop);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tfunction isRightClick(event:Dynamic):Bool\r\n\t{\r\n\t\tvar rightclick = null;\r\n\t\tif (!event) var event = untyped Browser.window.event;\r\n\t\tif (event.which) rightclick = (event.which == 3);\r\n\t\telse if (event.button) rightclick = (event.button == 2);\r\n\t\treturn rightclick;\r\n\t}\r\n\t\r\n\tpublic function load(?projectName:String, ?path:String):Void\r\n\t{        \r\n\t\tif (projectName == null)\r\n\t\t{\r\n\t\t\tprojectName = lastProjectName;\r\n\t\t}\r\n\t\t\r\n\t\tif (path == null)\r\n\t\t{\r\n\t\t\tpath = lastProjectPath;\r\n\t\t}\r\n            \r\n        var filetree:Dynamic = untyped new JQuery(\"#filetree\");\r\n        \r\n        filetree.on('expand', function (event) \r\n        {\r\n            var label = filetree.jqxTree('getItem', event.args.element).label;\r\n            var element2 = new JQuery(event.args.element);\r\n            var loader = false;\r\n            var loaderItem:Dynamic = null;\r\n            var children = element2.find('ul:first').children();\r\n            jQuery.JQueryStatic.each(children, function (index, value) \r\n\t\t\t{\r\n                var item = filetree.jqxTree('getItem', value);\r\n                if (item != null && item.label == \"Loading...\") \r\n                {\r\n                    loaderItem = item;\r\n                    loader = true;\r\n                    untyped __js__(\"return false\");\r\n                };\r\n            });\r\n           \t\r\n            if (loader) \r\n            {\r\n                var pathToItem:String = loaderItem.value;\r\n                \r\n            \tvar items:Array<TreeItem> = readDir2(pathToItem);\r\n                \r\n//                 for (i in 0...items.length)\r\n//                 {\r\n//                 \t items[i] = prepareForLazyLoading(items[i]);\r\n//                 }\r\n                \r\n                filetree.jqxTree('addTo', items, element2[0]);\r\n            \tfiletree.jqxTree('removeItem', loaderItem.element);\r\n            \tattachContextMenu();\r\n            }\r\n        });\r\n\t\t\r\n\t\treadDirItems(path, function (source:TreeItem):Void \r\n\t\t{            \r\n//             var source2:TreeItem = prepareForLazyLoading(source);\r\n//             source2.expanded = true;\r\n            \r\n            untyped new JQuery('#filetree').jqxTree( { source: [source] } );\r\n            attachContextMenu();\r\n            \t\t\t\r\n\t\t\t//var items = untyped new JQuery(\"#filetree\").jqxTree('getItems');\r\n\t\t\t//trace(items);\r\n\t\t}, true);\r\n\t\t\r\n\t\tif (watcher != null) \r\n\t\t{\r\n\t\t\twatcher.close();\r\n\t\t\twatcher = null;\r\n\t\t}\r\n\t\t\r\n\t\tvar classpathWalker = ClasspathWalker.get();\r\n\t\t\t\r\n\t\tvar config:Config = {\r\n\t\t\tpath: path,\r\n\t\t\tlistener:\r\n\t\t\t\tfunction (changeType, filePath, fileCurrentStat, filePreviousStat):Void \r\n\t\t\t\t{\r\n\t\t\t\t\t//trace(changeType);\r\n\t\t\t\t\t//trace(filePath);\r\n\t\t\t\t\t//trace(fileCurrentStat);\r\n\t\t\t\t\t//trace(filePreviousStat);\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch (changeType) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'create':\r\n\t\t\t\t\t\t\t//trace(changeType);\r\n\t\t\t\t\t\t\t//trace(filePath);\r\n\t\t\t\t\t\t\t//load();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tNode.fs.stat(filePath, function (error:NodeErr, stat:NodeStat):Void \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (error == null) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif (stat.isFile()) \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tif (changeType == 'create') \r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tclasspathWalker.addFile(filePath);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tclasspathWalker.removeFile(filePath);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if(stat.isDirectory()) \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttrace(\"stat.isDirectory()\",changeType,filePath);\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\ttrace(changeType);\r\n\t\t\t\t\t\t\t\t\t\ttrace(filePath);\r\n\t\t\t\t\t\t\t\t\t\t//ClasspathWalker.parseProjectArguments();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\ttrace(\"error->\",error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n                        case 'delete':\r\n                            if (Node.path.extname(filePath) != \"\")\r\n                            {\r\n                            \tclasspathWalker.removeFile(filePath);\r\n                    \t\t}\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tconfig.interval = 3000;\r\n\t\t\r\n\t\twatcher = Watchr.watch(config);\r\n\t\t\r\n\t\tlastProjectName = projectName;\r\n\t\tlastProjectPath = path;\r\n\t\t\r\n\t\tupdateProjectMainHxml();\r\n\t}\r\n\t\r\n\tstatic function readDirItems(path:String, ?onComplete:Dynamic->Void, ?root:Bool = false)\r\n\t{\r\n        var source:Dynamic = createFolderItem(path, []);\r\n        source.expanded = true;\r\n        \r\n        source.items = readDir2(path);\r\n        \r\n        onComplete(source);\r\n\t}\r\n\t\r\n    static function readDir2(path:String):Array<TreeItem>\r\n\t{\r\n        var items:Array<TreeItem> = [];\r\n        \r\n        var pathToFolders:Array<String> = [];\r\n        var pathToFiles:Array<String> = [];\r\n        \r\n        var fullPath:String;\r\n        var stat:NodeStat;\r\n        \r\n        for (pathToItem in js.Node.fs.readdirSync(path))\r\n        {      \r\n            if (!SettingsWatcher.isItemInIgnoreList(pathToItem) && !ProjectAccess.isItemInIgnoreList(pathToItem))\r\n            {\r\n                fullPath = Node.path.join(path, pathToItem);\r\n                stat = Node.fs.statSync(fullPath);\r\n\r\n                if (stat.isDirectory())\r\n                {\r\n                    pathToFolders.push(fullPath);\r\n                }\r\n                else if(stat.isFile())\r\n                {\r\n                    pathToFiles.push(fullPath);\r\n                }\r\n            }\r\n        }\r\n        \r\n        var type:String = null;\r\n        type = \"folder\";\r\n        \r\n        var item:TreeItem = null;\r\n        \r\n        for (pathToItem in pathToFolders)\r\n        {\r\n             item = createFolderItem(pathToItem, []);\r\n        \t item.items = [];\r\n        \t item.items.push({label:\"Loading...\", value: pathToItem});\r\n             items.push(item);\r\n\t\t}\r\n    \t\r\n    \ttype = \"file\";\r\n    \r\n    \tfor (pathToItem in pathToFiles)\r\n        {\r\n             item = createFileItem(pathToItem);\r\n             items.push(item);\r\n\t\t}\r\n\r\n\t\treturn items;\r\n\t}\r\n    \r\n\tstatic function createFileItem(path:String):TreeItem\r\n\t{\r\n\t\tvar basename:String = Node.path.basename(path);\r\n\t\tvar extname:String = Node.path.extname(basename);\r\n\t\t\r\n\t\tvar data:TreeItem = { label: basename, value: {path: path, type: \"file\"} };\r\n\t\t\r\n// \t\tswitch (extname) \r\n// \t\t{\r\n// \t\t\tcase \".pdf\":\r\n// \t\t\t\tdata.icon = \"includes/images/page_white_acrobat.png\";\r\n// \t\t\tcase \".swf\":\r\n// \t\t\t\tdata.icon = \"includes/images/page_white_flash.png\";\r\n// \t\t\tcase \".jpg\", \".jpeg\", \".png\", \".gif\", \".tga\":\r\n// \t\t\t\tdata.icon = \"includes/images/photo.png\";\r\n// \t\t\tcase \".html\":\r\n// \t\t\t\tdata.icon = \"includes/images/html.png\";\r\n// \t\t\tdefault:\r\n\t\t\t\t\r\n// \t\t}\r\n\t\t\r\n\t\treturn data;\r\n\t}\r\n    \r\n    static function createFolderItem(path:String, items:Array<TreeItem>):TreeItem\r\n    {\r\n    \treturn {label:Node.path.basename(path), items: items, value: {path: path, type: \"folder\"}}; //icon: \"includes/images/folder.png\"\r\n    }\r\n}\r\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped __global__[\"trace\"](pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tSince all platforms does not guarantee that String always uses UTF-8 encoding, you\n\tcan use this crossplatform API to perform operations on such strings.\n**/\nclass Utf8 {\n\n\tvar __b : String;\n\n\t/**\n\t\tAllocate a new Utf8 buffer using an optional bytes size.\n\t**/\n\tpublic function new( ?size : Int ) {\n\t\t__b = \"\";\n\t}\n\n\t/**\n\t\tAdd the given UTF8 character code to the buffer.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\t__b += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tReturns the buffer converted to a String;\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn __b;\n\t}\n\n\t/**\n\t\tCall the `chars` function for each UTF8 char of the string.\n\t**/\n\tpublic static function iter( s : String, chars : Int -> Void ) {\n\t\tfor( i in 0...s.length )\n\t\t\tchars(s.charCodeAt(i));\n\t}\n\n\t/**\n\t\tEncode the input ISO string into the corresponding UTF8 one.\n\t**/\n\tpublic static function encode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tDecode an UTF8 string back to an ISO string.\n\t\tThrow an exception if a given UTF8 character is not supported by the decoder.\n\t**/\n\tpublic static function decode( s : String ) : String {\n\t\tthrow \"Not implemented\";\n\t}\n\n\t/**\n\t\tSimilar to `String.charCodeAt` but uses the UTF8 character position.\n\t**/\n\tpublic static inline function charCodeAt( s : String, index : Int ) : Int {\n\t\treturn s.charCodeAt(index);\n\t}\n\n\t/**\n\t\tTells if the String is correctly encoded as UTF8.\n\t**/\n\tpublic static inline function validate( s : String ) : Bool {\n\t\treturn true;\n\t}\n\n\t/**\n\t\tReturns the number of UTF8 chars of the String.\n\t**/\n\t#if js @:extern #end\n\tpublic static inline function length( s : String ) : Int {\n\t\treturn s.length;\n\t}\n\n\t/**\n\t\tCompare two UTF8 strings, character by character.\n\t**/\n\tpublic static function compare( a : String, b : String ) : Int {\n\t\treturn a > b ? 1 : (a == b ? 0 : -1);\n\t}\n\n\t/**\n\t\tThis is similar to `String.substr` but the `pos` and `len` parts are considering UTF8 characters.\n\t**/\n\tpublic static inline function sub( s : String, pos : Int, len : Int ) : String {\n\t\treturn s.substr(pos,len);\n\t}\n\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\n\n/**\n\tThis exception is raised when reading while data is no longer available in the [Input].\n**/\nclass Eof {\n\tpublic function new() {\n\t}\n\t@:keep function toString() {\n\t\treturn \"Eof\";\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) {\n\t\treturn untyped js.Lib.global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","package parser;\r\nimport core.Completion;\r\nimport core.HaxeHelper;\r\nimport core.Hotkeys;\r\nimport core.ProcessHelper;\r\nimport core.Utils;\r\nimport dialogs.BrowseDirectoryDialog;\r\nimport dialogs.DialogManager;\r\nimport dialogs.ModalDialog;\r\nimport haxe.ds.StringMap.StringMap;\r\nimport js.Browser;\r\nimport js.Node;\r\nimport js.node.Walkdir;\r\nimport openflproject.OpenFLTools;\r\nimport projectaccess.Project;\r\nimport projectaccess.ProjectAccess;\r\nimport watchers.LocaleWatcher;\r\nimport watchers.SettingsWatcher;\r\nimport parser.ClassParser.FileData;\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\ntypedef ClasspathAndLibs = \r\n{\r\n\tclasspaths: Array<String>,\r\n\tlibs: Array<LibClassPath>\r\n}\r\n\t\r\ntypedef LibClassPath = \r\n{\r\n\tpath: String,\r\n\tstd: Bool\r\n}\r\n\r\nclass ClasspathWalker\r\n{\r\n\tpublic var pathToHaxeStd:String;\r\n\tpublic var pathToHaxe:String;\r\n    \r\n\tstatic var instance:ClasspathWalker;\r\n\t\r\n\tpublic static function get():ClasspathWalker\r\n\t{\r\n\t\tif (instance == null)\r\n\t\t{\r\n\t\t\tinstance = new ClasspathWalker();\r\n\t\t}\r\n\t\t\t\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function new():Void \r\n\t{\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function load()\r\n\t{\r\n\t\tvar localStorage2 = Browser.getLocalStorage();\r\n\t\t\r\n\t\tvar pathToHaxe2 = Node.process.env.HAXE_STD_PATH;\r\n\t\t\r\n\t\tif (pathToHaxe2 != null)\r\n\t\t{\r\n\t\t\tpathToHaxe2 = Node.path.dirname(pathToHaxe2);\r\n\t\t}\r\n\t\t\r\n\t\tvar paths:Array<String> = [Node.process.env.HAXEPATH, pathToHaxe2, Node.process.env.HAXE_HOME];\r\n\t\t\r\n\t\tif (localStorage2 != null) \r\n\t\t{\r\n\t\t\tvar path = localStorage2.getItem(\"pathToHaxe\");\r\n\t\t\tpaths.insert(0, path);\r\n\t\t}\r\n\t\t\r\n\t\tswitch (Utils.os) \r\n\t\t{\r\n\t\t\tcase Utils.WINDOWS:\r\n\t\t\t\tpaths.push(\"C:/HaxeToolkit/haxe\");\r\n\t\t\tcase Utils.LINUX, Utils.MAC:\r\n\t\t\t\tpaths.push(\"/usr/lib/haxe\");\r\n\t\t\tdefault:\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (envVar in paths)\r\n\t\t{\r\n\t\t\tif (envVar != null) \r\n\t\t\t{\r\n\t\t\t\tpathToHaxeStd = getHaxeStdFolder(envVar);\r\n\t\t\t\t\r\n\t\t\t\tif (pathToHaxeStd != null) \r\n\t\t\t\t{\r\n\t\t\t\t\tpathToHaxe = envVar;\r\n\t\t\t\t\tlocalStorage2.setItem(\"pathToHaxe\", pathToHaxe);\r\n\t\t\t\t\tHaxeHelper.updatePathToHaxe();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (pathToHaxeStd == null) \r\n\t\t{\r\n\t\t\tshowHaxeDirectoryDialog();\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tparseClasspath(pathToHaxeStd, true);\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tpublic function showHaxeDirectoryDialog()\r\n\t{\r\n\t\tvar localStorage2 = Browser.getLocalStorage();\r\n\t\t\r\n\t\tvar currentLocation = \"\";\r\n\t\t\r\n\t\tvar pathToHaxe2 = localStorage2.getItem(\"pathToHaxe\");\r\n\t\t\r\n\t\tif (pathToHaxe2 != null) \r\n\t\t{\r\n\t\t\tcurrentLocation = pathToHaxe2;\r\n\t\t}\r\n\t\t\r\n\t\tDialogManager.showBrowseFolderDialog(\"Please specify path to Haxe compiler(parent folder of std): \", function (path:String):Void \r\n\t\t{\r\n\t\t\tpathToHaxeStd = getHaxeStdFolder(path);\r\n\t\t\t\r\n\t\t\tif (pathToHaxeStd != null)\r\n\t\t\t{\r\n\t\t\t\tparseClasspath(pathToHaxeStd, true);\r\n\t\t\t\tpathToHaxe = path;\r\n\t\t\t\tlocalStorage2.setItem(\"pathToHaxe\", pathToHaxe);\r\n\t\t\t\tHaxeHelper.updatePathToHaxe();\r\n\t\t\t\tDialogManager.hide();\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tAlertify.error(LocaleWatcher.getStringSync(\"Can't find 'std' folder in specified path\"));\r\n\t\t\t}\r\n\t\t}, currentLocation, \"Download Haxe\", \"http://haxe.org/download\");\r\n\t}\r\n\t\r\n\tfunction getHaxeStdFolder(path:String):String\r\n\t{\r\n\t\tvar pathToStd:String = null;\r\n\t\t\r\n\t\tvar fileName = \"haxe\";\r\n\t\t\r\n\t\tswitch (Utils.os)\r\n\t\t{\r\n\t\t\tcase Utils.WINDOWS:\r\n\t\t\t\tfileName += \".exe\";\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t\t\r\n\t\tif (Node.fs.existsSync(path)) \r\n\t\t{\r\n\t\t\tif (Node.fs.existsSync(Node.path.join(path, fileName)))\r\n\t\t\t{\r\n\t\t\t\tpath = Node.path.join(path, \"std\");\r\n\r\n\t\t\t\tif (Node.fs.existsSync(path))\r\n\t\t\t\t{\r\n\t\t\t\t\tpathToStd = path;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn pathToStd;\r\n\t}\r\n\r\n\tpublic function getProjectClasspaths(project:Project, onComplete:ClasspathAndLibs->Void)\r\n\t{\r\n\t\tvar classpathsAndLibs = null;\r\n\t\t\r\n\t\tswitch (project.type) \r\n\t\t{\r\n\t\t\tcase Project.HAXE, Project.HXML:\r\n\t\t\t\tvar path:String;\r\n\r\n\t\t\t\tif (project.type == Project.HAXE) \r\n\t\t\t\t{\r\n\t\t\t\t\tpath = Node.path.join(ProjectAccess.path, project.targetData[project.target].pathToHxml);\r\n\t\t\t\t}\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tpath = Node.path.join(ProjectAccess.path, project.main);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar options:js.Node.NodeFsFileOptions = { };\r\n\t\t\t\toptions.encoding = NodeC.UTF8;\r\n\r\n\t\t\t\tvar data:String = Node.fs.readFileSync(path, options);\r\n\t\t\t\tclasspathsAndLibs = getClasspaths(data.split(\"\\n\"));\r\n\t\t\t\t\r\n\t\t\t\tprocessHaxelibs(classpathsAndLibs.libs, function (libs)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvar classpathsAndLibs2 = {classpaths: classpathsAndLibs.classpaths, libs: libs};\r\n\t\t\t\t\t\t\t\t\tonComplete(classpathsAndLibs2);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t   );\r\n\t\t\tcase Project.OPENFL:\r\n\t\t\t\tOpenFLTools.getParams(ProjectAccess.path, project.openFLTarget, function (stdout:String):Void \r\n\t\t\t\t{\r\n\t\t\t\t\tclasspathsAndLibs = getClasspaths(stdout.split(\"\\n\"));\r\n\t\t\t\t\t\r\n\t\t\t\t\tprocessHaxelibs(classpathsAndLibs.libs, function (libs)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvar classpathsAndLibs2 = {classpaths: classpathsAndLibs.classpaths, libs: libs};\r\n\t\t\t\t\t\t\t\t\tonComplete(classpathsAndLibs2);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t   );\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function parseProjectArguments():Void \r\n\t{\r\n\t\tClassParser.classCompletions = new StringMap();\r\n\t\tClassParser.filesList = [];\r\n\t\t\r\n\t\tClassParser.topLevelClassList = [];\r\n\t\tClassParser.importsList = [];\r\n\t\t\r\n\t\tif (ProjectAccess.path != null) \r\n\t\t{\r\n\t\t\tvar project = ProjectAccess.currentProject;\r\n\t\t\t\r\n\t\t\tgetProjectClasspaths(project, function (classpathsAndLibs)\r\n\t\t\t\t\t\t\t\t {\r\n\t\t\t\t\t\t\t\t\tfor (path in classpathsAndLibs.classpaths) \r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tparseClasspath(path);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t \tfor (lib in classpathsAndLibs.libs)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tparseClasspath(lib.path, lib.std);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\twalkProjectDirectory(ProjectAccess.path);\r\n\t}\r\n        \r\n    function getFileDirectory(relativePath:String):String\r\n\t{\r\n        var directory:String = \"\";\r\n        \r\n        if (relativePath.indexOf(\"/\") != -1)\r\n        {\r\n            directory = relativePath.substring(0, relativePath.lastIndexOf(\"/\"));\r\n        }\r\n        else if (relativePath.indexOf(\"\\\\\") != -1)\r\n        {\r\n            directory = relativePath.substring(0, relativePath.lastIndexOf(\"\\\\\"));\r\n        }\r\n            \r\n        return directory;\r\n    }\r\n\t\r\n\tfunction getClasspaths(data:Array<String>)\r\n\t{\r\n\t\tvar classpaths:Array<String> = [];\r\n\t\t\r\n\t\tfor (arg in parseArg(data, \"-cp\")) \r\n\t\t{\r\n\t\t\tvar classpath:String = Node.path.resolve(ProjectAccess.path, arg);\r\n\t\t\tclasspaths.push(classpath);\r\n\t\t}\r\n\r\n\t\tvar libs:Array<String> = parseArg(data, \"-lib\");\r\n\t\treturn {classpaths: classpaths, libs: libs};\r\n\t}\r\n\t\r\n\tfunction processHaxelibs(libs:Array<String>, onComplete:Array<LibClassPath>->Void):Void \r\n\t{\t\t\r\n\t\tvar n = libs.length;\r\n\t\t\r\n\t\tvar classpaths = [];\r\n\t\t\r\n\t\tif (n > 0)\r\n\t\t{\r\n\t\t\tfor (arg in libs) \r\n\t\t\t{\r\n\t\t\t\tvar processHelper = ProcessHelper.get();\r\n\r\n\t\t\t\tprocessHelper.runProcess(HaxeHelper.getPathToHaxelib(), [\"path\", arg], null, function (stdout:String, stderr:String):Void \r\n\t\t\t\t{\r\n\t\t\t\t\tn--;\r\n\r\n\t\t\t\t\tfor (path in stdout.split(\"\\n\")) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (path.indexOf(Node.path.sep) != -1) \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath = StringTools.trim(path);\r\n\t\t\t\t\t\t\tpath = Node.path.normalize(path);\r\n\r\n\t\t\t\t\t\t\tNode.fs.exists(path, function (exists:Bool)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif (exists) \r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tclasspaths.push({path: path, std: false});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (n == 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonComplete(classpaths);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tonComplete(classpaths);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction parseArg(args:Array<String>, type:String):Array<String>\r\n\t{\r\n\t\tvar result:Array<String> = [];\r\n\t\t\r\n\t\tfor (arg in args)\r\n\t\t{\r\n\t\t\targ = StringTools.trim(arg);\r\n\t\t\t\r\n\t\t\tif (StringTools.startsWith(arg, type)) \r\n\t\t\t{\r\n\t\t\t\tresult.push(arg.substr(type.length + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction parseClasspath(path:String, ?std:Bool = false):Void\r\n\t{        \r\n        if (Main.sync)\r\n        {\r\n            for (pathToFile in Walkdir.walkSync(path))\r\n            {\r\n                var stat = js.Node.fs.lstatSync(pathToFile);\r\n                \r\n                if (stat.isFile())\r\n                {\r\n               \t\tprocessFile(pathToFile, std);    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var emitter = Walkdir.walk(path, {});\r\n\t\t\r\n            emitter.on(\"file\", function (pathToFile, stat):Void \r\n            {\r\n                processFile(pathToFile, std);\r\n            }\r\n            );\r\n\r\n            emitter.on(\"error\", function (pathToFile:String, stat):Void \r\n            {\r\n                trace(pathToFile);\r\n            }\r\n            );\r\n        }\r\n\t}\r\n\t\r\n    function processFile(path:String, std:Bool)\r\n    {\r\n        addFile(path, std);\r\n\r\n        var options:NodeFsFileOptions = { };\r\n       \toptions.encoding = NodeC.UTF8;\r\n            \r\n        if (Node.path.extname(path) == \".hx\") \r\n        {\r\n            Node.fs.readFile(path, options, function (error:NodeErr, data:String):Void \r\n            {\r\n                if (error == null) \r\n                {\r\n                    ClassParser.processFile(data, path, std);\r\n                }\r\n            }\r\n            );\r\n        }\r\n    }\r\n\r\n\tfunction getFileIndex(pathToFile:String, list:Array<FileData>):Int\r\n\t{\r\n        var index:Int = -1;\r\n            \r\n        for (i in 0...list.length)\r\n        {\r\n            if (list[i].path == pathToFile)\r\n            {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n            \r\n        return index;\r\n    }\r\n\r\n\tpublic function addFile(path:String, ?std:Bool = false)\r\n\t{\r\n        var relativePath:String;\r\n        var list:Array<FileData>;\r\n        \r\n\t\tvar completionInstance = Completion.get();\r\n\t\t\r\n\t\tif (!SettingsWatcher.isItemInIgnoreList(path) && !ProjectAccess.isItemInIgnoreList(path)) \r\n\t\t{            \r\n            if (std)\r\n            {\r\n                list = ClassParser.haxeStdFileList;\r\n            }\r\n            else\r\n            {\r\n                list = ClassParser.filesList;\r\n            }\r\n                \r\n            if (ProjectAccess.path != null && (core.Utils.os == core.Utils.WINDOWS || !std))\r\n            {\r\n                relativePath = Node.path.relative(ProjectAccess.path, path);\r\n\r\n                if (getFileIndex(relativePath, list) == -1)\r\n                {\r\n                    list.push({path: relativePath, directory: getFileDirectory(relativePath), displayText: completionInstance.processDisplayText(relativePath), filename: js.Node.path.basename(relativePath)});\r\n                }\r\n            }\r\n            else if (getFileIndex(path, list) == -1)\r\n            {\r\n                list.push({path: path, directory: getFileDirectory(path), displayText: completionInstance.processDisplayText(path), filename: Node.path.basename(path)});\r\n            }            \r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function removeFile(path:String)\r\n\t{\r\n\t\tvar relativePath;\r\n\t\t\r\n        var index:Int = -1;\r\n        \r\n        for (list in [ClassParser.haxeStdFileList, ClassParser.filesList])\r\n        {\r\n\t\t\tif (ProjectAccess.path != null) \r\n            {\r\n                relativePath = Node.path.relative(ProjectAccess.path, path);\r\n\r\n                index = getFileIndex(relativePath, list);\r\n\r\n                if (index != -1)\r\n                {\r\n                    list.remove(list[index]);    \r\n                }\r\n            }\r\n\r\n            index = getFileIndex(path, list);\r\n\r\n            if (index != -1)\r\n            {\r\n                list.remove(list[index]);    \r\n            }\r\n        }\r\n\t}\r\n\t\r\n\tfunction walkProjectDirectory(path:String):Void \r\n\t{\r\n        if (Main.sync)\r\n        {\r\n\t\t\tWalkdir.walkSync(path, {}, function (path:String, stat:js.Node.NodeStat)\r\n                            {\r\n                                if (stat.isFile())\r\n                                {\r\n                                    addFile(path);\r\n                                }\r\n                            }\r\n                            );\r\n        }\r\n        else\r\n        {\r\n            var emitter = Walkdir.walk(path, {});\r\n\r\n            var options:NodeFsFileOptions = { };\r\n            options.encoding = NodeC.UTF8;\r\n\r\n            emitter.on(\"file\", function (path, stat):Void \r\n            {\t\t\t\r\n                addFile(path);\r\n            }\r\n            );\r\n\r\n            emitter.on(\"error\", function (path:String, stat):Void \r\n            {\r\n                trace(path);\r\n            }\r\n            );\r\n        }\r\n\t}\r\n\t\r\n}\r\n","package projectaccess;\r\nimport CodeMirror.Pos;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\n \r\ntypedef TargetData = {\r\n\t@:optional var pathToHxml:String;\r\n\t@:optional var runActionType:Int;\r\n\t@:optional var runActionText:String;\r\n} \r\n\t\r\ntypedef FileData = {\r\n\t@:optional var path:String;\r\n\t@:optional var foldedRegions:Array<Pos>;\r\n\t@:optional var activeLine:Int;\r\n\t@:optional var useTabs:Bool;\r\n\t@:optional var indentSize:Int;\r\n}\r\n \r\nclass Project\r\n{\r\n\tinline public static var HAXE:Int = 0;\r\n\tinline public static var OPENFL:Int = 1;\r\n\tinline public static var HXML:Int = 2;\r\n\tinline public static var FLAMBE:Int = 3;\r\n\t\r\n\tinline public static var FLASH:Int = 0;\r\n\tinline public static var JAVASCRIPT:Int = 1;\r\n\tinline public static var NEKO:Int = 2;\r\n\tinline public static var PHP:Int = 3;\r\n\tinline public static var CPP:Int = 4;\r\n\tinline public static var JAVA:Int = 5;\r\n\tinline public static var CSHARP:Int = 6;\r\n\tinline public static var PYTHON:Int = 7;\r\n\t\r\n\tinline public static var URL:Int = 0;\r\n\tinline public static var FILE:Int = 1;\r\n\tinline public static var COMMAND:Int = 2;\r\n\t//inline public static var WEBSERVER:Int = 3;\r\n\t//inline public static var URL_IN_HIDE:Int = 4;\r\n\t\r\n\tpublic var type:Int;\r\n\tpublic var target:Int;\r\n\t\r\n\tpublic var name:String;\r\n\tpublic var main:String;\r\n\tpublic var projectPackage:String;\r\n\tpublic var company:String;\r\n\tpublic var license:String;\r\n\tpublic var url:String;\r\n\t\r\n\tpublic var targetData:Array<TargetData>;\r\n\t\r\n\tpublic var files:Array<FileData>;\r\n\tpublic var activeFile:String;\r\n\t\r\n\tpublic var openFLTarget:String;\r\n\tpublic var openFLBuildMode:String;\r\n\t\r\n\tpublic var runActionType:Int;\r\n\tpublic var runActionText:String;\r\n\tpublic var buildActionCommand:String;\r\n\t\r\n\tpublic var hiddenItems:Array<String>;\r\n\tpublic var showHiddenItems:Bool;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\ttargetData = [];\r\n\t\tfiles = [];\r\n\t\topenFLBuildMode = \"Debug\";\r\n\t\t\r\n\t\thiddenItems = [];\r\n\t\tshowHiddenItems = false;\r\n\t}\t\r\n}","package projectaccess;\r\nimport cm.Editor;\r\nimport tabmanager.TabManager;\r\nimport core.Helper;\r\nimport haxe.Json;\r\nimport js.Browser;\r\nimport js.Node;\r\nimport nodejs.webkit.Window;\r\nimport projectaccess.Project.TargetData;\r\nimport projectaccess.Project.FileData;\r\nimport tjson.TJSON;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nclass ProjectAccess\r\n{\r\n\tpublic static var currentProject:Project = new Project();\r\n\t\r\n\tpublic static var path:String;\r\n\t\r\n\tpublic static function registerSaveOnCloseListener():Void\r\n\t{\r\n\t\tvar window = Window.get();\r\n\t\t\r\n\t\tvar tabManagerInstance = TabManager.get();\r\n\t\t\r\n\t\twindow.on(\"close\", function ():Void \r\n\t\t{\r\n\t\t\tif (currentProject != null && tabManagerInstance.getCurrentDocumentPath() != null)\r\n\t\t\t{\r\n\t\t\t\tEditor.saveFoldedRegions();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsave(null, true);\r\n\t\t\twindow.close();\r\n\t\t\t\r\n\t\t});\r\n\t}\r\n\t\r\n\tpublic static function save(?onComplete:Dynamic, ?sync:Bool = false):Void\r\n\t{\r\n\t\tif (ProjectAccess.path != null)\r\n\t\t{\r\n\t\t\tEditor.saveFoldedRegions();\r\n\t\t\t\r\n\t\t\tvar pathToProjectHide:String = js.Node.path.join(ProjectAccess.path, \"project.hide\");\r\n\t\t\t\r\n\t\t\tvar data:String = TJSON.encode(ProjectAccess.currentProject, 'fancy');\r\n\t\t\t\r\n\t\t\tif (sync) \r\n\t\t\t{\r\n\t\t\t\tNode.fs.writeFileSync(pathToProjectHide, data, js.Node.NodeC.UTF8);\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tHelper.debounce(\"saveProject\", function ():Void \r\n\t\t\t\t{\r\n\t\t\t\t\tNode.fs.writeFile(pathToProjectHide, data, js.Node.NodeC.UTF8, function (error:js.Node.NodeErr)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (onComplete != null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tonComplete();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t}, 250);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\ttrace(\"project path is null\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function load(path:String, ?onComplete:Dynamic):Void\r\n\t{\r\n\t\t//trace(js.Node.parse());\r\n\t}\r\n\t\r\n\tpublic static function isItemInIgnoreList(path:String):Bool\r\n\t{        \r\n\t\tvar ignore:Bool = false;\r\n        \r\n\t\tif (ProjectAccess.path != null && !ProjectAccess.currentProject.showHiddenItems) \r\n\t\t{\r\n\t\t\tvar relativePath:String = Node.path.relative(ProjectAccess.path, path);\r\n\t\t\t\r\n\t\t\tif (ProjectAccess.currentProject.hiddenItems.indexOf(relativePath) != -1) \r\n\t\t\t{\r\n\t\t\t\tignore = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn ignore;\r\n\t}\r\n\t\r\n\tpublic static function isItemHidden(path:String)\r\n\t{\r\n\t\tvar relativePath:String = Node.path.relative(ProjectAccess.path, path);\r\n\t\treturn ProjectAccess.currentProject.hiddenItems.indexOf(relativePath) != -1;\r\n\t}\r\n\t\r\n\tpublic static function hideItem(path:String)\r\n\t{\r\n\t\tvar relativePath:String = Node.path.relative(ProjectAccess.path, path);\r\n\t\tProjectAccess.currentProject.hiddenItems.push(relativePath);\r\n\t}\r\n\t\r\n\tpublic static function unhideItem(path:String)\r\n\t{\r\n\t\tvar relativePath:String = Node.path.relative(ProjectAccess.path, path);\r\n\t\tProjectAccess.currentProject.hiddenItems.push(relativePath);\r\n\t}\r\n\t\r\n\tpublic static function getPathToHxml():String\r\n\t{\r\n\t\tvar pathToHxml:String = null;\r\n\t\t\t\t\t\r\n\t\tvar project = ProjectAccess.currentProject;\r\n\t\t\r\n\t\tswitch (project.type) \r\n\t\t{\r\n\t\t\tcase Project.HAXE:\r\n\t\t\t\tvar targetData:TargetData = project.targetData[project.target];\r\n\t\t\t\tpathToHxml = targetData.pathToHxml;\r\n\t\t\tcase Project.HXML:\r\n\t\t\t\tpathToHxml = project.main;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t\t\r\n\t\treturn pathToHxml;\r\n\t}\r\n\t\r\n\tpublic static function getFileByPath(path:String)\r\n\t{\r\n\t\tvar selectedFile = null;\r\n\t\t\r\n\t\tif (ProjectAccess.path != null)\r\n\t\t{\r\n\t\t\tvar relativePath:String = Node.path.relative(ProjectAccess.path, path);\r\n\t\t\r\n\t\t\tvar project = ProjectAccess.currentProject;\r\n\t\t\r\n\t\t\tselectedFile = Lambda.find(project.files, function (file:FileData)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn file.path == relativePath;\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn selectedFile;\r\n\t}\r\n}","\npackage tjson;\nusing StringTools;\n\nclass TJSON {    \n\tpublic static var OBJECT_REFERENCE_PREFIX = \"@~obRef#\";\n\t/**\n\t * Parses a JSON string into a haxe dynamic object or array.\n\t * @param String - The JSON string to parse\n\t * @param String the file name to whic the JSON code belongs. Used for generating nice error messages.\n\t */\n\tpublic static function parse(json:String, ?fileName:String=\"JSON Data\", ?stringProcessor:String->Dynamic = null):Dynamic{\n        var t = new TJSONParser(json, fileName, stringProcessor);\n\t\treturn t.doParse();\n\t}\n\n\t/**\n\t * Serializes a dynamic object or an array into a JSON string.\n\t * @param Dynamic - The object to be serialized\n\t * @param Dynamic - The style to use. Either an object implementing EncodeStyle interface or the strings 'fancy' or 'simple'.\n\t */\n\tpublic static function encode(obj:Dynamic, ?style:Dynamic=null, useCache:Bool=true):String{\n\t\tvar t = new TJSONEncoder(useCache);\n\t\treturn t.doEncode(obj,style);\n\t}\n\n\n}\n\n\nclass TJSONParser{\n\tvar pos:Int;\n\tvar json:String;\n\tvar lastSymbolQuoted:Bool; //true if the last symbol was in quotes.\n    var fileName:String;\n\tvar currentLine:Int;\n\tvar cache:Array<Dynamic>;\n\tvar floatRegex:EReg;\n\tvar intRegex:EReg;\n\tvar strProcessor:String->Dynamic;\n\n\tpublic function new(vjson:String, ?vfileName:String=\"JSON Data\", ?stringProcessor:String->Dynamic = null)\n    {\n\t\tjson = vjson;\n\t\tfileName = vfileName;\n\t\tcurrentLine = 1;\n        lastSymbolQuoted = false;\n\t\tpos = 0;\n\t\tfloatRegex = ~/^-?[0-9]*\\.[0-9]+$/;\n\t\tintRegex = ~/^-?[0-9]+$/;\t\n\t\tstrProcessor = (stringProcessor==null? defaultStringProcessor : stringProcessor);\n\t\tcache = new Array();\n    }\n\n    public function doParse():Dynamic{\n    \ttry{\n\t\t\t//determine if objector array\n\t\t\treturn switch (getNextSymbol()) {\n\t\t\t\tcase '{': doObject();\n\t\t\t\tcase '[': doArray();\n\t\t\t\tcase s: convertSymbolToProperType(s);\n\t\t\t}\n\t\t}catch(e:String){\n\t\t\tthrow fileName + \" on line \" + currentLine + \": \" + e;\n\t\t}\n\t}\n\n\tprivate function doObject():Dynamic{\n\t\tvar o:Dynamic = { };\n\t\tvar val:Dynamic ='';\n\t\tvar key:String;\n\t\tvar isClassOb:Bool = false;\n\t\tcache.push(o);\n\t\twhile(pos < json.length){\n\t\t\tkey=getNextSymbol();\n\t\t\tif(key == \",\" && !lastSymbolQuoted)continue;\n\t\t\tif(key == \"}\" && !lastSymbolQuoted){\n\t\t\t\t//end of the object. Run the TJ_unserialize function if there is one\n\t\t\t\tif( isClassOb && #if flash9 try o.TJ_unserialize != null catch( e : Dynamic ) false #elseif (cs || java) Reflect.hasField(o, \"TJ_unserialize\") #else o.TJ_unserialize != null #end  ) {\n\t\t\t\t\to.TJ_unserialize();\n\t\t\t\t}\n\t\t\t\treturn o;\n\t\t\t}\n\n\t\t\tvar seperator = getNextSymbol();\n\t\t\tif(seperator != \":\"){\n\t\t\t\tthrow(\"Expected ':' but got '\"+seperator+\"' instead.\");\n\t\t\t}\n\n\t\t\tvar v = getNextSymbol();\n\n\t\t\tif(key == '_hxcls'){\n\t\t\t\tvar cls =Type.resolveClass(v);\n\t\t\t\tif(cls==null) throw \"Invalid class name - \"+v;\n\t\t\t\to = Type.createEmptyInstance(cls);\n\t\t\t\tcache.pop();\n\t\t\t\tcache.push(o);\n\t\t\t\tisClassOb = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\n\t\t\tif(v == \"{\" && !lastSymbolQuoted){\n\t\t\t\tval = doObject();\n\t\t\t}else if(v == \"[\" && !lastSymbolQuoted){\n\t\t\t\tval = doArray();\n\t\t\t}else{\n\t\t\t\tval = convertSymbolToProperType(v);\n\t\t\t}\n\t\t\tReflect.setField(o,key,val);\n\t\t}\n\t\tthrow \"Unexpected end of file. Expected '}'\";\n\t\t\n\t}\n\n\tprivate function doArray():Dynamic{\n\t\tvar a:Array<Dynamic> = new Array<Dynamic>();\n\t\tvar val:Dynamic;\n\t\twhile(pos < json.length){\n\t\t\tval=getNextSymbol();\n\t\t\tif(val == ',' && !lastSymbolQuoted){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(val == ']' && !lastSymbolQuoted){\n\t\t\t\treturn a;\n\t\t\t}\n\t\t\telse if(val == \"{\" && !lastSymbolQuoted){\n\t\t\t\tval = doObject();\n\t\t\t}else if(val == \"[\" && !lastSymbolQuoted){\n\t\t\t\tval = doArray();\n\t\t\t}else{\n\t\t\t\tval = convertSymbolToProperType(val);\n\t\t\t}\n\t\t\ta.push(val);\n\t\t}\n\t\tthrow \"Unexpected end of file. Expected ']'\";\n\t}\n\n\tprivate function convertSymbolToProperType(symbol):Dynamic{\n\t\tif(lastSymbolQuoted) {\n\t\t\t//value was in quotes, so it's a string.\n\t\t\t//look for reference prefix, return cached reference if it is\n\t\t\tif(StringTools.startsWith(symbol,TJSON.OBJECT_REFERENCE_PREFIX)){\n\t\t\t\tvar idx:Int = Std.parseInt(symbol.substr(TJSON.OBJECT_REFERENCE_PREFIX.length));\n\t\t\t\treturn cache[idx];\n\t\t\t}\n\t\t\treturn symbol; //just a normal string so return it\n\t\t}\n\t\tif(looksLikeFloat(symbol)){\n\t\t\treturn Std.parseFloat(symbol);\n\t\t}\n\t\tif(looksLikeInt(symbol)){\n\t\t\treturn Std.parseInt(symbol);\n\t\t}\n\t\tif(symbol.toLowerCase() == \"true\"){\n\t\t\treturn true;\n\t\t}\n\t\tif(symbol.toLowerCase() == \"false\"){\n\t\t\treturn false;\n\t\t}\n\t\tif(symbol.toLowerCase() == \"null\"){\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\treturn symbol;\n\t}\n\n\n\tprivate function looksLikeFloat(s:String):Bool{\n\t\treturn floatRegex.match(s) || (\n\t\t\tintRegex.match(s) && {\n\t\t\t\tvar intStr = intRegex.matched(0);\n\t\t\t\tif (intStr.charCodeAt(0) == \"-\".code)\n\t\t\t\t\tintStr > \"-2147483648\";\n\t\t\t\telse\n\t\t\t\t\tintStr > \"2147483647\";\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate function looksLikeInt(s:String):Bool{\n\t\treturn intRegex.match(s);\n\t}\n\n\tprivate function getNextSymbol(){\n\t\tlastSymbolQuoted=false;\n\t\tvar c:String = '';\n\t\tvar inQuote:Bool = false;\n\t\tvar quoteType:String=\"\";\n\t\tvar symbol:String = '';\n\t\tvar inEscape:Bool = false;\n\t\tvar inSymbol:Bool = false;\n\t\tvar inLineComment = false;\n\t\tvar inBlockComment = false;\n\n\t\twhile(pos < json.length){\n\t\t\tc = json.charAt(pos++);\n\t\t\tif(c == \"\\n\" && !inSymbol)\n\t\t\t\tcurrentLine++;\n\t\t\tif(inLineComment){\n\t\t\t\tif(c == \"\\n\" || c == \"\\r\"){\n\t\t\t\t\tinLineComment = false;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(inBlockComment){\n\t\t\t\tif(c==\"*\" && json.charAt(pos) == \"/\"){\n\t\t\t\t\tinBlockComment = false;\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(inQuote){\n\t\t\t\tif(inEscape){\n\t\t\t\t\tinEscape = false;\n\t\t\t\t\tif(c==\"'\" || c=='\"'){\n\t\t\t\t\t\tsymbol += c;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"t\"){\n\t\t\t\t\t\tsymbol += \"\\t\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"n\"){\n\t\t\t\t\t\tsymbol += \"\\n\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"\\\\\"){\n\t\t\t\t\t\tsymbol += \"\\\\\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"r\"){\n\t\t\t\t\t\tsymbol += \"\\r\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c==\"/\"){\n\t\t\t\t\t\tsymbol += \"/\";\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(c==\"u\"){\n                        var hexValue = 0;\n\n                        for (i in 0...4){\n                            if (pos >= json.length)\n                              throw \"Unfinished UTF8 character\";\n\t\t\t                var nc = json.charCodeAt(pos++);\n                            hexValue = hexValue << 4;\n                            if (nc >= 48 && nc <= 57) // 0..9\n                              hexValue += nc - 48;\n                            else if (nc >= 65 && nc <= 70) // A..F\n                              hexValue += 10 + nc - 65;\n                            else if (nc >= 97 && nc <= 102) // a..f\n                              hexValue += 10 + nc - 95;\n                            else throw \"Not a hex digit\";\n                        }\n                        \n\t\t\t\t\t\tvar utf = new haxe.Utf8();\n\t\t\t\t\t\tutf.addChar(hexValue);\n\t\t\t\t\t\tsymbol += utf.toString();\n                        \n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tthrow \"Invalid escape sequence '\\\\\"+c+\"'\";\n\t\t\t\t}else{\n\t\t\t\t\tif(c == \"\\\\\"){\n\t\t\t\t\t\tinEscape = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(c == quoteType){\n\t\t\t\t\t\treturn symbol;\n\t\t\t\t\t}\n\t\t\t\t\tsymbol+=c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\n\t\t\t//handle comments\n\t\t\telse if(c == \"/\"){\n\t\t\t\tvar c2 = json.charAt(pos);\n\t\t\t\t//handle single line comments.\n\t\t\t\t//These can even interrupt a symbol.\n\t\t\t\tif(c2 == \"/\"){\n\t\t\t\t\tinLineComment=true;\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t//handle block comments.\n\t\t\t\t//These can even interrupt a symbol.\n\t\t\t\telse if(c2 == \"*\"){\n\t\t\t\t\tinBlockComment=true;\n\t\t\t\t\tpos++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\n\t\t\tif (inSymbol){\n\t\t\t\tif(c==' ' || c==\"\\n\" || c==\"\\r\" || c==\"\\t\" || c==',' || c==\":\" || c==\"}\" || c==\"]\"){ //end of symbol, return it\n\t\t\t\t\tpos--;\n\t\t\t\t\treturn symbol;\n\t\t\t\t}else{\n\t\t\t\t\tsymbol+=c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(c==' ' || c==\"\\t\" || c==\"\\n\" || c==\"\\r\"){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif(c==\"{\" || c==\"}\" || c==\"[\" || c==\"]\" || c==\",\" || c == \":\"){\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\n\n\n\t\t\t\tif(c==\"'\" || c=='\"'){\n\t\t\t\t\tinQuote = true;\n\t\t\t\t\tquoteType = c;\n\t\t\t\t\tlastSymbolQuoted = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tinSymbol=true;\n\t\t\t\t\tsymbol = c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\n\t\t\t}\n\t\t} // end of while. We have reached EOF if we are here.\n\t\tif(inQuote){\n\t\t\tthrow \"Unexpected end of data. Expected ( \"+quoteType+\" )\";\n\t\t}\n\t\treturn symbol;\n\t}\n\n\n\tprivate function defaultStringProcessor(str:String):Dynamic{\n\t\treturn str;\n\t}\n}\n\n\nclass TJSONEncoder{\n\n\tvar cache:Array<Dynamic>;\n\tvar uCache:Bool;\n\n\tpublic function new(useCache:Bool=true){\n\t\tuCache = useCache;\n\t\tif(uCache)cache = new Array();\n\t}\n\n\tpublic function doEncode(obj:Dynamic, ?style:Dynamic=null){\n\t\tif(!Reflect.isObject(obj)){\n\t\t\tthrow(\"Provided object is not an object.\");\n\t\t}\n\t\tvar st:EncodeStyle;\n\t\tif(Std.is(style, EncodeStyle)){\n\t\t\tst = style;\n\t\t}\n\t\telse if(style == 'fancy'){\n\t\t\tst = new FancyStyle();\n\t\t}\n\t\telse st = new SimpleStyle();\n\t\tvar buffer = new StringBuf();\n\t\tif(Std.is(obj,Array) || Std.is(obj,List)) {\n\t\t\tbuffer.add(encodeIterable( obj, st, 0));\n\n\t\t} else if(Std.is(obj, haxe.ds.StringMap)){\n\t\t\tbuffer.add(encodeMap(obj, st, 0));\n\t\t} else {\n\t\t\tcacheEncode(obj);\n\t\t\tbuffer.add(encodeObject(obj, st, 0));\n\t\t}\n\t\treturn buffer.toString();\n\t}\n\n\tprivate function encodeObject( obj:Dynamic,style:EncodeStyle,depth:Int):String {\n\t\tvar buffer = new StringBuf();\n\t\tbuffer.add(style.beginObject(depth));\n\t\tvar fieldCount = 0;\n\t\tvar fields:Array<String>;\n\t\tvar dontEncodeFields:Array<String> = null;\n\t\tvar cls = Type.getClass(obj);\n\t\tif (cls != null) {\n\t\t\tfields = Type.getInstanceFields(cls);\n\t\t} else {\n\t\t\tfields = Reflect.fields(obj);\n\t\t}\n\t\t//preserve class name when serializing class objects\n\t\t//is there a way to get c outside of a switch?\n\t\tswitch(Type.typeof(obj)){\n\t\t\tcase TClass(c):\n\t\t\t\tif(fieldCount++ > 0) buffer.add(style.entrySeperator(depth));\n\t\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\t\tbuffer.add('\"_hxcls\"'+style.keyValueSeperator(depth));\n\t\t\t\tbuffer.add(encodeValue( Type.getClassName(c), style, depth));\n\n\t\t\t\tif( #if flash9 try obj.TJ_noEncode != null catch( e : Dynamic ) false #elseif (cs || java) Reflect.hasField(obj, \"TJ_noEncode\") #else obj.TJ_noEncode != null #end  ) {\n\t\t\t\t\tdontEncodeFields = obj.TJ_noEncode();\n\t\t\t\t}\n\t\t\tdefault:\n\t\t}\n\n\t\tfor (field in fields){\n\t\t\tif(dontEncodeFields!=null && dontEncodeFields.indexOf(field)>=0)continue;\n\t\t\tvar value:Dynamic = Reflect.field(obj,field);\n\t\t\tvar vStr:String = encodeValue(value, style, depth);\n\t\t\tif(vStr!=null){\n\t\t\t\tif(fieldCount++ > 0) buffer.add(style.entrySeperator(depth));\n\t\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\t\tbuffer.add('\"'+field+'\"'+style.keyValueSeperator(depth)+vStr);\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\n\t\t\n\t\tbuffer.add(style.endObject(depth));\n\t\treturn buffer.toString();\n\t}\n\n\n\tprivate function encodeMap( obj:Map<Dynamic, Dynamic>,style:EncodeStyle,depth:Int):String {\n\t\tvar buffer = new StringBuf();\n\t\tbuffer.add(style.beginObject(depth));\n\t\tvar fieldCount = 0;\n\t\tfor (field in obj.keys()){\n\t\t\tif(fieldCount++ > 0) buffer.add(style.entrySeperator(depth));\n\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\tvar value:Dynamic = obj.get(field);\n\t\t\tbuffer.add('\"'+field+'\"'+style.keyValueSeperator(depth));\n\t\t\tbuffer.add(encodeValue(value, style, depth));\n\t\t}\n\t\tbuffer.add(style.endObject(depth));\n\t\treturn buffer.toString();\n\t}\n\n\n\tprivate function encodeIterable(obj:Iterable<Dynamic>, style:EncodeStyle, depth:Int):String {\n\t\tvar buffer = new StringBuf();\n\t\tbuffer.add(style.beginArray(depth));\n\t\tvar fieldCount = 0;\n\t\tfor (value in obj){\n\t\t\tif(fieldCount++ >0) buffer.add(style.entrySeperator(depth));\n\t\t\telse buffer.add(style.firstEntry(depth));\n\t\t\tbuffer.add(encodeValue( value, style, depth));\n\t\t\t\n\t\t}\n\t\tbuffer.add(style.endArray(depth));\n\t\treturn buffer.toString();\n\t}\n\n\tprivate function cacheEncode(value:Dynamic):String{\n\t\tif(!uCache)return null;\n\n\t\tfor(c in 0...cache.length){\n\t\t\tif(cache[c] == value){\n\t\t\t\treturn '\"'+TJSON.OBJECT_REFERENCE_PREFIX+c+'\"';\n\t\t\t}\n\t\t}\n\t\tcache.push(value);\n\t\treturn null;\n\t}\n\n\tprivate function encodeValue( value:Dynamic, style:EncodeStyle, depth:Int):String {\n\t\tif(Std.is(value, Int) || Std.is(value,Float)){\n\t\t\t\treturn(value);\n\t\t}\n\t\telse if(Std.is(value,Array) || Std.is(value,List)){\n\t\t\tvar v: Array<Dynamic> = value;\n\t\t\treturn encodeIterable(v,style,depth+1);\n\t\t}\n\t\telse if(Std.is(value,List)){\n\t\t\tvar v: List<Dynamic> = value;\n\t\t\treturn encodeIterable(v,style,depth+1);\n\n\t\t}\n\t\telse if(Std.is(value,haxe.ds.StringMap)){\n\t\t\treturn encodeMap(value,style,depth+1);\n\n\t\t}\n\t\telse if(Std.is(value,String)){\n\t\t\treturn('\"'+Std.string(value).replace(\"\\\\\",\"\\\\\\\\\").replace(\"\\n\",\"\\\\n\").replace(\"\\r\",\"\\\\r\").replace('\"','\\\\\"')+'\"');\n\t\t}\n\t\telse if(Std.is(value,Bool)){\n\t\t\treturn(value);\n\t\t}\n\t\telse if(Reflect.isObject(value)){\n\t\t\tvar ret = cacheEncode(value);\n\t\t\tif(ret != null) return ret;\n\t\t\treturn encodeObject(value,style,depth+1);\n\t\t}\n\t\telse if(value == null){\n\t\t\treturn(\"null\");\n\t\t}\n\t\telse{\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n\n\ninterface EncodeStyle{\n\t\n\tpublic function beginObject(depth:Int):String;\n\tpublic function endObject(depth:Int):String;\n\tpublic function beginArray(depth:Int):String;\n\tpublic function endArray(depth:Int):String;\n\tpublic function firstEntry(depth:Int):String;\n\tpublic function entrySeperator(depth:Int):String;\n\tpublic function keyValueSeperator(depth:Int):String;\n\n}\n\nclass SimpleStyle implements EncodeStyle{\n\tpublic function new(){\n\n\t}\n\tpublic function beginObject(depth:Int):String{\n\t\treturn \"{\";\n\t}\n\tpublic function endObject(depth:Int):String{\n\t\treturn \"}\";\n\t}\n\tpublic function beginArray(depth:Int):String{\n\t\treturn \"[\";\n\t}\n\tpublic function endArray(depth:Int):String{\n\t\treturn \"]\";\n\t}\n\tpublic function firstEntry(depth:Int):String{\n\t\treturn \"\";\n\t}\n\tpublic function entrySeperator(depth:Int):String{\n\t\treturn \",\";\n\t}\n\tpublic function keyValueSeperator(depth:Int):String{\n\t\treturn \":\";\n\t}\n\t\n}\n\n\nclass FancyStyle implements EncodeStyle{\n\tpublic var tab(default, null):String;\n\tpublic function new(tab:String = \"    \"){\n\t\tthis.tab = tab;\n\t\tcharTimesNCache = [\"\"];\n\t}\n\tpublic function beginObject(depth:Int):String{\n\t\treturn \"{\\n\";\n\t}\n\tpublic function endObject(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth)+\"}\";\n\t}\n\tpublic function beginArray(depth:Int):String{\n\t\treturn \"[\\n\";\n\t}\n\tpublic function endArray(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth)+\"]\";\n\t}\n\tpublic function firstEntry(depth:Int):String{\n\t\treturn charTimesN(depth+1)+' ';\n\t}\n\tpublic function entrySeperator(depth:Int):String{\n\t\treturn \"\\n\"+charTimesN(depth+1)+\",\";\n\t}\n\tpublic function keyValueSeperator(depth:Int):String{\n\t\treturn \" : \";\n\t}\n\tprivate var charTimesNCache:Array<String>;\n\tprivate function charTimesN(n:Int):String{\n\t\treturn if (n < charTimesNCache.length) {\n\t\t\tcharTimesNCache[n];\n\t\t} else {\n\t\t\tcharTimesNCache[n] = charTimesN(n-1) + tab;\n\t\t}\n\t}\n\t\n}\n\n\n\n\n","package watchers;\r\nimport haxe.ds.StringMap.StringMap;\r\nimport js.Browser;\r\nimport js.html.Element;\r\nimport js.Node;\r\nimport nodejs.webkit.Window;\r\nimport js.node.Watchr;\r\nimport tjson.TJSON;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nclass LocaleWatcher\r\n{\r\n\tstatic var localeData:Dynamic;\r\n\tstatic var watcher:Dynamic;\r\n\tstatic var listenerAdded:Bool = false;\r\n    static var pathToLocale:String;\r\n\t\r\n\tpublic static function load():Void \r\n\t{        \r\n\t\tif (watcher != null) \r\n\t\t{\r\n\t\t\twatcher.close();\r\n\t\t}\r\n\t\t\r\n\t\tparse();\r\n\t\t\r\n\t\twatcher = Watcher.watchFileForUpdates(pathToLocale, function ():Void \r\n\t\t{\r\n\t\t\tparse();\r\n\t\t\tprocessHtmlElements();\r\n\t\t}, 1000);\r\n\t\t\r\n\t\tprocessHtmlElements();\r\n\t\t\r\n\t\tif (!listenerAdded) \r\n\t\t{\r\n\t\t\tWindow.get().on(\"close\", function (e) \r\n\t\t\t{\r\n\t\t\t\tif (watcher != null) \r\n\t\t\t\t{\r\n\t\t\t\t\twatcher.close();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tlistenerAdded = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function parse():Void \r\n\t{\r\n        pathToLocale = Node.path.join(\"core\", \"locale\", SettingsWatcher.settings.locale);\r\n        \r\n\t\tvar options:NodeFsFileOptions = { };\r\n\t\toptions.encoding = NodeC.UTF8;\r\n\t\t\r\n\t\tvar data:String = Node.fs.readFileSync(pathToLocale, options);\r\n\t\t\r\n\t\tlocaleData = TJSON.parse(data);\r\n\t}\r\n\t\r\n\tpublic static function getStringSync(name:String):String\r\n\t{\r\n\t\tvar value:String = name;\r\n\t\t\r\n\t\tif (Reflect.hasField(localeData, name)) \r\n\t\t{\r\n\t\t\tvalue = Reflect.field(localeData, name);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tReflect.setField(localeData, name, name);\r\n\t\t\tvar data:String = TJSON.encode(localeData, 'fancy');\r\n\t\t\tNode.fs.writeFileSync(pathToLocale, data, NodeC.UTF8);\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t}\r\n\t\r\n\tpublic static function processHtmlElements()\r\n\t{\r\n\t\tvar element:Element;\r\n\t\tvar value:String;\r\n\t\t\r\n\t\tfor (node in Browser.document.getElementsByTagName(\"*\")) \r\n\t\t{\r\n\t\t\telement = cast(node, Element);\r\n\t\t\t\r\n\t\t\tvalue = element.getAttribute(\"localeString\");\r\n\t\t\t\r\n\t\t\tif (value != null) \r\n\t\t\t{\r\n\t\t\t\telement.textContent = getStringSync(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","package watchers;\nimport nodejs.webkit.App;\nimport js.Node.NodeFsFileOptions;\nimport core.Utils;\nimport filetree.FileTree;\nimport haxe.Timer;\nimport js.Node;\nimport js.node.Watchr;\nimport nodejs.webkit.Window;\nimport projectaccess.ProjectAccess;\nimport tjson.TJSON;\n\ntypedef Settings = {\n\tvar theme:String;\n\tvar locale:String;\n\tvar ignore:Array<String>;\n\tvar indentWithTabs:Bool;\n\tvar indentSize:Int;\n}\n\n/**\n * ...\n * @author \n */\nclass SettingsWatcher\n{\n\tpublic static var settings:Settings;\n\tpublic static var watcher:Dynamic;\n    \n    static var pathToSettings:String;\n\tpublic static var pathToFolder:String;\n\t\n\t\n\t\n\tpublic static function load():Void \n\t{\t\t\n\t\tvar pathToConfigFolder:String = Node.path.join(\"core\", \"config\");\n\t\t\n// \t\tswitch (Utils.os)\n// \t\t{\n// \t\t\tcase Utils.WINDOWS:\n// \t\t\t\tpathToFolder = Node.process.env.APPDATA;\n// \t\t\tdefault:\n// \t\t\t\tpathToFolder = Node.process.env.HOME;\n// \t\t}\n\t\t\n\t\tpathToFolder = App.dataPath;\n\t\t\n\t\tif (pathToFolder != null)\n\t\t{\n\t\t\tpathToFolder = Node.path.join(pathToFolder, \".HIDE\");\n\t\t\tif (!Node.fs.existsSync(pathToFolder))\n\t\t\t{\n\t\t\t\tNode.fs.mkdirSync(pathToFolder);\n\t\t\t}\n\t\t\t\n\t\t\tvar configFiles = Node.fs.readdirSync(pathToConfigFolder);\n\t\t\tvar files = Node.fs.readdirSync(pathToFolder);\n\t\t\t\n\t\t\tvar options:NodeFsFileOptions = {};\n\t\t\toptions.encoding = NodeC.UTF8;\n\t\t\t\n\t\t\tvar content:String;\n\t\t\t\n\t\t\tvar pathToFile:String = null;\n\t\t\t\n\t\t\tfor (file in configFiles)\n\t\t\t{\n\t\t\t\tif (files.indexOf(file) == -1)\n\t\t\t\t{\n\t\t\t\t\tpathToFile = Node.path.join(pathToConfigFolder, file);\n\t\t\t\t\tcontent = Node.fs.readFileSync(pathToFile, options);\n\t\t\t\t\tpathToFile = Node.path.join(pathToFolder, file);\n\t\t\t\t\tNode.fs.writeFileSync(pathToFile, content, NodeC.UTF8);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpathToFolder = pathToConfigFolder;\n\t\t}\n\t\t\n        pathToSettings = Node.path.join(pathToFolder, \"settings.json\");\n        \n\t\twatcher = Watcher.watchFileForUpdates(pathToSettings, parse, 3000);\n\t\t\n\t\tparse();\n\t\t\n\t\tWindow.get().on(\"close\", function (e) \n\t\t{\n\t\t\tif (watcher != null) \n\t\t\t{\n\t\t\t\twatcher.close();\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\t\n\tstatic function parse():Void \n\t{\t\t\n\t\tvar options:NodeFsFileOptions = { };\n\t\toptions.encoding = NodeC.UTF8;\n\t\t\n\t\tvar data:String = Node.fs.readFileSync(pathToSettings, options);\n\t\tsettings = TJSON.parse(data);\n\t\t\n\t\tvar themeWatcher = ThemeWatcher.get();\n\t\tthemeWatcher.load();\n\t\tLocaleWatcher.load();\n\t\t\n\t\tif (ProjectAccess.path != null) \n\t\t{\n\t\t\tvar fileTree = FileTree.get();\n\t\t\tfileTree.load();\n\t\t}\n\t}\n\t\n\tpublic static function isItemInIgnoreList(path:String):Bool\n\t{\n\t\tvar ignored:Bool = false;\n\t\t\n\t\tvar ereg:EReg;\n\t\t\n\t\tfor (item in SettingsWatcher.settings.ignore) \n\t\t{\n\t\t\tereg = new EReg(item, \"\");\n\t\t\t\n\t\t\tif (ereg.match(path)) \n\t\t\t{\n\t\t\t\tignored = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ignored;\n\t}\n}","package watchers;\r\nimport cm.Editor;\r\nimport js.Node.NodeFsFileOptions;\r\nimport js.html.LinkElement;\r\nimport js.Browser;\r\nimport js.Node;\r\nimport haxe.Timer;\r\nimport jQuery.JQuery;\r\nimport js.node.Watchr;\r\nimport nodejs.webkit.Window;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nclass ThemeWatcher\r\n{\r\n\tvar watcher:Dynamic;\r\n\tvar listenerAdded:Bool = false;\r\n    var pathToTheme:String;\r\n\tvar currentTheme:String;\r\n\t\r\n\tstatic var instance:ThemeWatcher;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\t\r\n\t\r\n\tpublic static function get()\r\n\t{\r\n\t\tif (instance == null)\r\n\t\t{\r\n\t\t\tinstance = new ThemeWatcher();\r\n\t\t}\r\n\t\t\t\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function load() \r\n\t{\t\t\r\n        pathToTheme = Node.path.join(\"core\", SettingsWatcher.settings.theme);\r\n        \r\n        Node.fs.exists(pathToTheme, function (exists:Bool)\r\n                         {\r\n                             if (exists)\r\n                             {\r\n                                 continueLoading();\r\n                             }\r\n                             else\r\n                             {\r\n                                 Alertify.log(\"File \" + pathToTheme + \" for theme \" + SettingsWatcher.settings.theme + \" was not found. CSS files in core folder: [\" + getListOfCSSFiles().join(\",\") + \"]\", \"\", 10000);\r\n                             }\r\n                         });\r\n\t}\r\n    \r\n    function continueLoading()\r\n    {\r\n        updateTheme();\r\n\t\t\r\n\t\tif (watcher != null) \r\n\t\t{\r\n\t\t\twatcher.close();\r\n\t\t}\r\n\t\t\r\n\t\twatcher = Watcher.watchFileForUpdates(pathToTheme, function ():Void \r\n\t\t{\r\n\t\t\tupdateTheme();\r\n\t\t}, 1000);\r\n\t\t\r\n\t\tif (!listenerAdded) \r\n\t\t{\r\n\t\t\tWindow.get().on(\"close\", function (e) \r\n\t\t\t{\r\n\t\t\t\tif (watcher != null) \r\n\t\t\t\t{\r\n\t\t\t\t\twatcher.close();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tlistenerAdded = true;\r\n\t\t}\r\n    }\r\n\t\r\n    function getListOfCSSFiles()\r\n    {\r\n        var files:Array<String> = [];\r\n        \r\n        for (item in Node.fs.readdirSync(\"core\"))\r\n        {\r\n            if (Node.path.extname(item) == \".css\")\r\n            {\r\n                files.push(Node.path.basename(item));\r\n            }\r\n        }\r\n        \r\n        return files;\r\n    }\r\n    \r\n\tfunction updateTheme(?type:String) \r\n\t{\r\n\t\tvar theme = SettingsWatcher.settings.theme;\r\n\t\tnew JQuery(\"#theme\").attr(\"href\", theme);\r\n\t\t\r\n\t\tif (currentTheme != null && currentTheme != theme)\r\n\t\t{\r\n\t\t\tvar ereg = ~/\\/\\* *codeEditorTheme *= *([^ \\*]*) *\\*\\//g;\r\n\t\t\r\n\t\t\tvar options:NodeFsFileOptions = {};\r\n\t\t\toptions.encoding = NodeC.UTF8;\r\n\r\n\t\t\tvar data = Node.fs.readFileSync(Node.path.join(\"core\", theme), options);\r\n\r\n\t\t\tif (ereg.match(data))\r\n\t\t\t{\r\n\t\t\t\tvar codeEditorTheme = ereg.matched(1);\r\n\t\t\t\tEditor.setTheme(codeEditorTheme);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\tcurrentTheme = theme;\r\n\t}\r\n}","package watchers;\r\nimport js.node.Watchr;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\nclass Watcher\r\n{\r\n\tpublic static function watchFileForUpdates(_path:String, onUpdate:Dynamic, ?_interval:Int):Dynamic\r\n\t{\r\n\t\tvar config:Config = {\r\n\t\t\tpath: _path,\r\n\t\t\tlistener:\r\n\t\t\t\tfunction (changeType, filePath, fileCurrentStat, filePreviousStat):Void \r\n\t\t\t\t{\r\n\t\t\t\t\tif (changeType == \"update\") \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonUpdate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tif (_interval != null) \r\n\t\t{\r\n\t\t\tconfig.interval = _interval;\r\n\t\t}\r\n\t\t\r\n\t\tvar watcher = Watchr.watch(config);\r\n\t\t\r\n\t\treturn watcher;\r\n\t}\r\n\t\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","/* Same license as Node.js\r\n\r\n\tMaintainer: Dion Amago, dion@transition9.com\r\n\r\n\tCopied from Ritchie Turner's (blackdog@cloudshift.cl) repo due to a lack of contact with Ritchie and a desire to\r\n\tkeep node.js libraries updated\r\n\r\n\tFrom Ritchie's docs:\r\n\t\"Node.js 0.8 api without haXe embellishments so that other apis may be implemented\r\n\ton top without being hindered by design choices here.\r\n\tDomain not added.\"\r\n*/\r\n\r\npackage js;\r\nimport js.Node.NodeEventEmitter;\r\n\r\ntypedef NodeListener = Dynamic;\r\ntypedef NodeErr = Null<String>;\r\n\r\n/*\r\n\t emits: newListener\r\n */\r\ntypedef NodeEventEmitter = {\r\n\tfunction addListener(event:String,fn:NodeListener):Dynamic;\r\n\tfunction on(event:String,fn:NodeListener):Dynamic;\r\n\tfunction once(event:String,fn:NodeListener):Void;\r\n\tfunction removeListener(event:String,listener:NodeListener):Void;\r\n\tfunction removeAllListeners(event:String):Void;\r\n\tfunction listeners(event:String):Array<NodeListener>;\r\n\tfunction setMaxListeners(m:Int):Void;\r\n\tfunction emit(event:String,?arg1:Dynamic,?arg2:Dynamic,?arg3:Dynamic):Void;\r\n}\r\n\r\ntypedef NodeWatchOpt = {\r\n\t@:optional\r\n\tvar persistent:Bool;\r\n\t@:optional\r\n\tvar interval:Int;\r\n};\r\n\r\ntypedef NodeExecOpt = {\r\n\t@:optional var encoding:String;\r\n\t@:optional var timeout:Int;\r\n\t@:optional var maxBuffer:Int;\r\n\t@:optional var killSignal:String;\r\n\t@:optional var env:Dynamic;\r\n\t@:optional var cwd:String;\r\n}\r\n\r\ntypedef NodeSpawnOpt = {\r\n\t@:optional var cwd:String;\r\n\t@:optional var env:Dynamic;\r\n\t@:optional var customFds:Array<Int>;\r\n\t@:optional var setsid:Bool;\r\n}\r\n\r\n/* note:can't spec multiple optional args, so adding an arbitrary 3 */\r\ntypedef NodeConsole = {\r\n\tfunction log(s:String,?a1:Dynamic,?a2:Dynamic,?a3:Dynamic):Void;\r\n\tfunction info(s:String,?a1:Dynamic,?a2:Dynamic,?a3:Dynamic):Void;\r\n\tfunction warn(s:String,?a1:Dynamic,?a2:Dynamic,?a3:Dynamic):Void;\r\n\tfunction error(s:String,?a1:Dynamic,?a2:Dynamic,?a3:Dynamic):Void;\r\n\tfunction time(label:String):Void;\r\n\tfunction timeEnd(label:String):Void;\r\n\tfunction dir(obj:Dynamic):Void;\r\n\tfunction trace():Void;\r\n\tfunction assert():Void;\r\n}\r\n\r\ntypedef NodePath = {\r\n\tfunction join(?p1:String,?p2:String,?p3:String):String;\r\n\tfunction normalize(p:String):String;\r\n\tfunction resolve(?p1:String,?p2:String,?p3:String):String;\r\n\tfunction dirname(p:String):String;\r\n\tfunction basename(p:String,?ext:String):String;\r\n\tfunction extname(p:String):String;\r\n\tfunction relative(?p1:String,?p2:String,?p3:String):String;\r\n\tvar sep :String;\r\n\tvar delimiter :String;\r\n}\r\n\r\ntypedef NodeUrlObj = {\r\n\tvar href:String;\r\n\tvar host:String;\r\n\tvar protocol:String;\r\n\tvar auth:String;\r\n\tvar hostname:String;\r\n\tvar port:String;\r\n\tvar pathname:String;\r\n\tvar search:String;\r\n\tvar query:Dynamic;\r\n\tvar hash:String;\r\n}\r\n\r\ntypedef NodeUrl = {\r\n\tfunction parse(p:String,?andQueryString:Bool):NodeUrlObj;\r\n\tfunction format(o:NodeUrlObj):String;\r\n\tfunction resolve(from:Array<String>,to:String):String;\r\n}\r\n\r\ntypedef NodeQueryString = {\r\n\tfunction parse(s:String,?sep:String,?eq:String,?options:{maxKeys:Int}):Dynamic;\r\n\tfunction escape(s:String):String;\r\n\tfunction unescape(s:String):String;\r\n\tfunction stringify(obj:Dynamic,?sep:String,?eq:String):String;\r\n}\r\n\r\n@:native(\"Buffer\") extern class NodeBuffer implements ArrayAccess<Int> {\r\n\r\n\t@:overload(function(str:String,?enc:String):Void {})\r\n\t@:overload(function(arr:Array<Int>):Void {})\r\n\tfunction new(size:Int):Void;\r\n\r\n\tvar length(default,null) : Int;\r\n\tvar INSPECT_MAX_BYTES:Int;\r\n\r\n\tfunction copy(targetBuffer:NodeBuffer,targetStart:Int,sourceStart:Int,sourceEnd:Int):Void;\r\n\tfunction slice(start:Int,end:Int):NodeBuffer;\r\n\tfunction write(s:String,?offset:Int,?length:Int,?enc:String):Int;\r\n\tfunction toString(enc:String,?start:Int,?end:Int):String;\r\n\tfunction fill(value:Float,offset:Int,?end:Int):Void;\r\n\tstatic function isBuffer(o:Dynamic):Bool;\r\n\tstatic function byteLength(s:String,?enc:String):Int;\r\n\tstatic function concat(list:Array<NodeBuffer>, ?totalLength:Float):NodeBuffer;\r\n\r\n\tfunction readUInt8(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readUInt16LE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readUInt16BE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readUInt32LE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readUInt32BE(offset:Int,?noAssert:Bool):Int;\r\n\r\n\tfunction readInt8(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readInt16LE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readInt16BE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readInt32LE(offset:Int,?noAssert:Bool):Int;\r\n\tfunction readInt32BE(offset:Int,?noAssert:Bool):Int;\r\n\r\n\tfunction readFloatLE(offset:Int,?noAssert:Bool):Float;\r\n\tfunction readFloatBE(offset:Int,?noAssert:Bool):Float;\r\n\tfunction readDoubleLE(offset:Int,?noAssert:Bool):Float; // is this right?\r\n\tfunction readDoubleBE(offset:Int,?noAssert:Bool):Float; // is this right?\r\n\r\n\tfunction writeUInt8(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeUInt16LE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeUInt16BE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeUInt32LE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeUInt32BE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\r\n\tfunction writeInt8(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeInt16LE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeInt16BE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeInt32LE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeInt32BE(value:Int,offset:Int,?noAssert:Bool):Void;\r\n\r\n\tfunction writeFloatLE(value:Float,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeFloatBE(value:Float,offset:Int,?noAssert:Bool):Void;\r\n\tfunction writeDoubleLE(value:Float,offset:Int,?noAssert:Bool):Void; // is this right?\r\n\tfunction writeDoubleBE(value:Float,offset:Int,?noAssert:Bool):Void; // is this right?\r\n}\r\n\r\ntypedef NodeScript = {\r\n\tfunction runInThisContext():Dynamic;\r\n\tfunction runInNewContext(?sandbox:Dynamic):Void;\r\n}\r\n\r\ntypedef NodeVM = {\r\n\tfunction runInThisContext(code:String,?fileName:String):Dynamic;\r\n\tfunction runInNewContext(?sandbox:Dynamic):Void;\r\n\tfunction createScript(code:Dynamic,?fileName:String):NodeScript;\r\n}\r\n\r\ntypedef ReadStreamOpt = {\r\n\tflags:String,\r\n\tencoding:String,\r\n\tfd:Null<Int>,\r\n\tmode:Int,\r\n\tbufferSize:Int,\r\n\t?start:Int,\r\n\t?end:Int\r\n}\r\n\r\ntypedef WriteStreamOpt = {\r\n\tvar flags:String;\r\n\tvar encoding:String;\r\n\tvar mode:Int;\r\n}\r\n\r\n/*\r\n\t Emits:\r\n\t data,end,error,close\r\n*/\r\ntypedef NodeReadStream = { > NodeEventEmitter,\r\n\tvar readable:Bool;\r\n\tfunction pause():Void;\r\n\tfunction resume():Void;\r\n\tfunction destroy():Void;\r\n\tfunction destroySoon():Void;\r\n\tfunction setEncoding(enc:String):Void;\r\n\tfunction pipe(dest:NodeWriteStream,?opts:{end:Bool}):Void;\r\n}\r\n\r\n/*\r\n\t Emits:\r\n\t drain,error,close,pipe\r\n*/\r\ntypedef NodeWriteStream = { > NodeEventEmitter,\r\n\tvar writeable:Bool;\r\n\t@:overload(function(chunk:NodeBuffer):Bool {})\r\n\tfunction write(d:String,?enc:String,?fd:Int):Bool;\r\n\t@:overload(function(b:NodeBuffer):Void {})\r\n\tfunction end(?s:String,?enc:String):Void;\r\n\tfunction destroy():Void;\r\n\tfunction destroySoon():Void;\r\n}\r\n\r\ntypedef NodeNetworkInterface = {\r\n\tvar address :String;\r\n\tvar family :String;\r\n\tvar internal :Bool;\r\n}\r\n\r\ntypedef NodeOs = {\r\n\tfunction hostname():String;\r\n\tfunction type():String;\r\n\tfunction release():String;\r\n\tfunction uptime():Int;\r\n\tfunction loadavg():Array<Float>;\r\n\tfunction totalmem():Int;\r\n\tfunction freemem():Int;\r\n\tfunction cpus():Int;\r\n\tfunction platform():String;\r\n\tfunction arch():String;\r\n\tfunction networkInterfaces():Dynamic;\r\n}\r\n\r\n\r\ntypedef NodeJsDate = {\r\n\t\tfunction getTime():Int;\r\n\t\tfunction toDateString():String;\r\n\t\tfunction toUTCString():String;\r\n}\r\n\r\ntypedef NodeStat = {\r\n\tvar dev:Int;\r\n\tvar ino:Int;\r\n\tvar mode:Int;\r\n\tvar nlink:Int;\r\n\tvar uid:Int;\r\n\tvar gid:Int;\r\n\tvar rdev:Int;\r\n\tvar size:Int;\r\n\tvar blkSize:Int;\r\n\tvar blocks:Int;\r\n\tvar atime:NodeJsDate;\r\n\tvar mtime:NodeJsDate;\r\n\tvar ctime:NodeJsDate;\r\n\r\n\tfunction isFile():Bool;\r\n\tfunction isDirectory():Bool;\r\n\tfunction isBlockDevice():Bool;\r\n\tfunction isCharacterDevice():Bool;\r\n\tfunction isSymbolicLink():Bool;\r\n\tfunction isFIFO():Bool;\r\n\tfunction isSocket():Bool;\r\n}\r\n\r\n/*\r\n\tEmits: error,change\r\n */\r\ntypedef NodeFSWatcher = { > NodeEventEmitter,\r\n\t function close():Void;\r\n}\r\n\r\ntypedef NodeFsFileOptions = {\r\n\t@:optional var encoding :String;\r\n\t@:optional var flag :String;\r\n}\r\n\r\ntypedef NodeFS = {\r\n\tfunction rename(from:String,to:String,cb:NodeErr->Void):Void;\r\n\tfunction renameSync(from:String,to:String):Void;\r\n\r\n\tfunction stat(path:String,cb:NodeErr->NodeStat->Void):Void;\r\n\tfunction statSync(path:String):NodeStat;\r\n\r\n\tfunction lstat(path:Dynamic,cb:NodeErr->NodeStat->Void):Void;\r\n\tfunction lstatSync(path:String):NodeStat;\r\n\r\n\tfunction fstat(fd:Int,cb:NodeErr->NodeStat->Void):Void;\r\n\tfunction fstatSync(fd:Int):NodeStat;\r\n\r\n\tfunction link(srcPath:String,dstPath:String,cb:NodeErr->Void):Void;\r\n\tfunction linkSync(srcPath:String,dstPath:String):Void;\r\n\r\n\tfunction unlink(path:String,cn:NodeErr->Void):Void;\r\n\tfunction unlinkSync(path:String):Void;\r\n\r\n\tfunction symlink(linkData:Dynamic,path:String,?type:String,?cb:NodeErr->Void):Void;\r\n\tfunction symlinkSync(linkData:Dynamic,path:String,?type:String):Void;\r\n\r\n\tfunction readlink(path:String,cb:NodeErr->String->Void):Void;\r\n\tfunction readlinkSync(path:String):String;\r\n\r\n\tfunction realpath(path:String,cb:NodeErr->String->Void):Void;\r\n\tfunction realpathSync(path:String):String;\r\n\r\n\tfunction chmod(path:String,mode:Int,cb:NodeErr->Void):Void;\r\n\tfunction chmodSync(path:String,?mode:Int):Void;\r\n\r\n\tfunction fchmod(fd:Int,mode:Int,cb:NodeErr->Void):Void;\r\n\tfunction fchmodSync(fd:Int,?mode:Int):Void;\r\n\r\n\tfunction chown(path:String,uid:Int,gid:Int,cb:NodeErr->Void):Void ;\r\n\tfunction chownSync(path:String,uid:Int,gid:Int):Void;\r\n\r\n\tfunction fchown(fd:Int,uid:Int,gid:Int,cb:NodeErr->Void):Void ;\r\n\tfunction fchownSync(fd:Int,uid:Int,gid:Int):Void;\r\n\r\n\tfunction rmdir(path:String,cb:NodeErr->Void):Void;\r\n\tfunction rmdirSync(path:String):Void;\r\n\r\n\tfunction mkdir(path:String,?mode:Int,?cb:NodeErr->Void):Void;\r\n\tfunction mkdirSync(path:String,?mode:Int):Void;\r\n\r\n\tfunction readdir(path:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction readdirSync(path:String):Array<String>;\r\n\r\n\tfunction close(fd:Int,cb:NodeErr->Void):Void;\r\n\tfunction closeSync(fd:Int):Void;\r\n\r\n\tfunction open(path:String,flags:String,?mode:Int,cb:NodeErr->Int->Void):Void;\r\n\r\n\tfunction openSync(path:String,flags:String,?mode:Int):Int;\r\n\r\n\tfunction write(fd:Int,bufOrStr:Dynamic,offset:Int,length:Int,position:Null<Int>,?cb:NodeErr->Int->Void):Void;\r\n\tfunction writeSync(fd:Int,bufOrStr:Dynamic,offset:Int,length:Int,position:Null<Int>):Int;\r\n\r\n\tfunction read(fd:Int,buffer:NodeBuffer,offset:Int,length:Int,position:Int,cb:NodeErr->Int->NodeBuffer->Void):Void;\r\n\tfunction readSync(fd:Int,buffer:NodeBuffer,offset:Int,length:Int,position:Int):Int;\r\n\r\n\tfunction truncate(fd:Int,len:Int,cb:NodeErr->Void):Void;\r\n\tfunction truncateSync(fd:Int,len:Int):NodeErr;\r\n\r\n\t@:overload(function(path:String,cb:NodeErr->String->Void):Void {})\r\n\tfunction readFile(path:String,?options:NodeFsFileOptions,cb:NodeErr->Dynamic->Void):Void;\r\n\tfunction readFileSync(path:String,?options:NodeFsFileOptions):Dynamic;\r\n\r\n\t@:overload(function(fileName:String,data:NodeBuffer,cb:NodeErr->Void):Void {})\r\n\tfunction writeFile(fileName:String,contents:String,?enc:String,cb:NodeErr->Void):Void;\r\n\t@:overload(function(fileName:String,data:NodeBuffer):Void {})\r\n\tfunction writeFileSync(fileName:String,contents:String,?enc:String):Void;\r\n\r\n\t@:overload(function(fileName:String,data:NodeBuffer,cb:NodeErr->Void):Void {})\r\n\tfunction appendFile(fileName:String,contents:String,?enc:String,cb:NodeErr->Void):Void;\r\n\r\n\t@:overload(function(fileName:String,data:NodeBuffer):Void {})\r\n\tfunction appendFileSync(fileName:String,contents:String,?enc:String):Void;\r\n\r\n\r\n\tfunction utimes(path:String,atime:Dynamic,mtime:Dynamic,cb:NodeErr->Void):Void;\r\n\tfunction utimeSync(path:String,atime:Dynamic,mtime:Dynamic):Void;\r\n\r\n\tfunction futimes(fd:Int,atime:Dynamic,mtime:Dynamic,cb:NodeErr->Void):Void;\r\n\tfunction futimeSync(fd:Int,atime:Dynamic,mtime:Dynamic):Void;\r\n\r\n\tfunction fsync(fd:Int,cb:NodeErr->Void):Void;\r\n\tfunction fsyncSync(fd:Int):Void;\r\n\r\n\tfunction watchFile(fileName:String,?options:NodeWatchOpt,listener:NodeStat->NodeStat->Void):Void;\r\n\tfunction unwatchFile(fileName:String):Void;\r\n\tfunction watch(fileName:String,?options:NodeWatchOpt,listener:String->String->Void):NodeFSWatcher;\r\n\tfunction createReadStream(path:String,?options:ReadStreamOpt):NodeReadStream;\r\n\tfunction createWriteStream(path:String,?options:WriteStreamOpt):NodeWriteStream;\r\n\r\n\tfunction exists(p:String,cb:Bool->Void):Void;\r\n\tfunction existsSync(p:String):Bool;\r\n}\r\n\r\ntypedef NodeUtil = {\r\n\tfunction debug(s:String):Void;\r\n\tfunction inspect(o:Dynamic,?showHidden:Bool,?depth:Int):Void;\r\n\tfunction log(s:String):Void;\r\n\tfunction pump(rs:NodeReadStream,ws:NodeWriteStream,cb:Dynamic->Void):Void;\r\n\tfunction inherits(constructor:Dynamic,superConstructor:Dynamic):Void;\r\n\tfunction isArray(o:Dynamic):Bool;\r\n\tfunction isRegExp(o:Dynamic):Bool;\r\n\tfunction isDate(o:Dynamic):Bool;\r\n\tfunction isError(o:Dynamic):Bool;\r\n\tfunction format(out:String,?a1:Dynamic,?a2:Dynamic,?a3:Dynamic):Void; // should be arbitrary # of args\r\n}\r\n\r\n/*\r\n\tEmits:\r\n\texit, uncaughtException + SIGNAL events (SIGINT etc)\r\n */\r\ntypedef NodeProcess = { > NodeEventEmitter,\r\n\tvar stdout:NodeWriteStream;\r\n\tvar stdin:NodeReadStream;\r\n\tvar stderr:NodeWriteStream;\r\n\tvar argv:Array<String>;\r\n\tvar env:Dynamic;\r\n\tvar pid:Int;\r\n\tvar title:String;\r\n\tvar arch:String;\r\n\tvar platform:String;\r\n\tvar installPrefix:String;\r\n\tvar execPath:String;\r\n\tvar version:String;\r\n\tvar versions:Dynamic;\r\n\r\n\tfunction memoryUsage():{rss:Int,vsize:Int,heapUsed:Int,heapTotal:Int};\r\n\tfunction nextTick(fn:Void->Void):Void;\r\n\tfunction exit(code:Int):Void;\r\n\tfunction cwd():String;\r\n\tfunction getuid():Int;\r\n\tfunction getgid():Int;\r\n\tfunction setuid(u:Int):Void;\r\n\tfunction setgid(g:Int):Void;\r\n\tfunction umask(?m:Int):Int;\r\n\tfunction chdir(d:String):Void;\r\n\tfunction kill(pid:Int,?signal:String):Void;\r\n\tfunction uptime():Int;\r\n\tfunction abort():Void;\r\n\tfunction hrtime():Array<Int>;\r\n}\r\n\r\n/*\r\n\tEmits: exit,close\r\n*/\r\ntypedef NodeChildProcess = { > NodeEventEmitter,\r\n\tvar stdin:NodeWriteStream;\r\n\tvar stdout:NodeReadStream;\r\n\tvar stderr:NodeReadStream;\r\n\tvar pid:Int;\r\n\tfunction kill(?signal:String):Void;\r\n}\r\n\r\n/*\r\n\tEmits: message\r\n*/\r\ntypedef NodeChildForkProcess = { > NodeChildProcess,\r\n\t @:overload(function(o:Dynamic,?socket:NodeNetSocket):Void {})\r\n\t function send(o:Dynamic,?server:NodeNetServer):Void;\r\n}\r\n\r\ntypedef NodeChildProcessCommands = {\r\n\tfunction spawn(command: String,args: Array<String>,?options: Dynamic ) : NodeChildProcess;\r\n\tfunction exec(command: String,?options:Dynamic,cb: {code:Int}->String->String->Void ): NodeChildProcess;\r\n\tfunction execFile(command: String,?options:Dynamic,cb: {code:Int}->String->String->Void ): NodeChildProcess;\r\n\tfunction fork(path:String,?args:Dynamic,?options:Dynamic):NodeChildForkProcess;\r\n}\r\n\r\ntypedef NodeClusterSettings = {\r\n\tvar exec:String;\r\n\tvar args:Array<String>;\r\n\tvar silent:Bool;\r\n}\r\n\r\n\r\n/* emits: message, online,listening,disconnect,exit, setup */\r\ntypedef NodeWorker = { > NodeEventEmitter,\r\n\tvar uniqueID:String; // indexes into cluster.workers\r\n\tvar process:NodeChildProcess;\r\n\tvar suicide:Bool;\r\n\tfunction send(message:Dynamic,?sendHandle:Dynamic):Void;\r\n\tfunction destroy():Void;\r\n}\r\n\r\n/* Emits: death,message, fork, online, listening\t*/\r\ntypedef NodeCluster = { > NodeEventEmitter,\r\n\tvar isMaster:Bool;\r\n\tvar isWorker:Bool;\r\n\tvar workers:Array<NodeWorker>;\r\n\tfunction fork(?env:Dynamic):NodeWorker;\r\n\tfunction send(o:Dynamic):Void;\r\n\tfunction setupMaster(?settings:NodeClusterSettings):Void;\r\n\tfunction disconnect(?cb:Void->Void):Void;\r\n}\r\n\r\n\r\n/* NET ............................................. */\r\n\r\n/*\r\n\t Emits:\r\n\t connection\r\n*/\r\ntypedef NodeNet = { > NodeEventEmitter,\r\n\tfunction createServer(?options:{allowHalfOpen:Bool},fn:NodeNetSocket->Void):NodeNetServer;\r\n\t@:overload(function(cs:String):NodeNetSocket {})\r\n\tfunction createConnection(port:Int,host:String):NodeNetSocket;\r\n\t@:overload(function(cs:String):NodeNetSocket {})\r\n\tfunction connect(port:Int,host:String):NodeNetSocket;\r\n\tfunction isIP(input:String):Int; // 4 or 6\r\n\tfunction isIPv4(input:String):Bool;\r\n\tfunction isIPv6(input:String):Bool;\r\n}\r\n\r\n/*\r\n\t Emits:\r\n\t connection,close,error,listening\r\n*/\r\ntypedef NodeNetServer = { > NodeEventEmitter,\r\n\tvar maxConnections:Int;\r\n\tvar connections:Int;\r\n\r\n\t@:overload(function(path:String,?cb:Void->Void):Void {})\r\n\t@:overload(function(fd:Int,?cb:Void->Void):Void {})\r\n\tfunction listen(port:Int,?host:String,?cb:Void->Void):Void;\r\n\tfunction close(cb:Void->Void):Void;\r\n\tfunction address():Void;\r\n\tfunction pause(msecs:Int):Void;\r\n}\r\n\r\ntypedef NodeConnectionOpt = {\r\n\tport:Int,\r\n\t?host:String,\r\n\t?localAddress:String\r\n}\r\n\r\n/*\r\n\r\n\tEmits:\r\n\tconnect,data,end,timeout,drain,error,close\r\n\r\n\timplements a duplex stream interface\r\n*/\r\ntypedef NodeNetSocket = { > NodeEventEmitter,\r\n\tvar remoteAddress:String;\r\n\tvar remotePort:Int;\r\n\tvar bufferSize:Int;\r\n\tvar bytesRead:Int;\r\n\tvar bytesWritten:Int;\r\n\r\n\t@:overload(function(path:String,?cb:Void->Void):Void {})\r\n\t@:overload(function(options:NodeConnectionOpt,connectionListener:Void->Void):Void {})\r\n\tfunction connect(port:Int,?host:String,?cb:Void->Void):Void;\r\n\tfunction setEncoding(enc:String):Void;\r\n\tfunction setSecure():Void;\r\n\t@:overload(function(data:Dynamic,?enc:String,?fileDesc:Int,?cb:Void->Void):Bool {})\r\n\tfunction write(data:Dynamic,?enc:String,?cb:Void->Void):Bool;\r\n\tfunction end(?data:Dynamic,?enc:String):Void;\r\n\tfunction destroy():Void;\r\n\tfunction pause():Void;\r\n\tfunction resume():Void;\r\n\tfunction setTimeout(timeout:Int,?cb:Void->Void):Void;\r\n\tfunction setNoDelay(?noDelay:Bool):Void;\r\n\tfunction setKeepAlive(enable:Bool,?delay:Int):Void;\r\n\tfunction address():{address:String,port:Int};\r\n}\r\n\r\n/* HTTP ............................................*/\r\n\r\n\r\n/*\r\n\t Emits:\r\n\t data,end,close\r\n */\r\ntypedef NodeHttpServerReq = { > NodeReadStream,\r\n\tvar method:String;\r\n\tvar url:String;\r\n\tvar headers:Dynamic;\r\n\tvar trailers:Dynamic;\r\n\tvar httpVersion:String;\r\n\tvar connection:NodeNetSocket;\r\n}\r\n\r\n/*\r\n */\r\ntypedef NodeHttpServerResp = { > NodeWriteStream,\r\n\tvar statusCode:Int;\r\n\tfunction writeContinue():Void;\r\n\t@:overload(function(statusCode:Int,?reasonPhrase:String,?headers:Dynamic):Void {})\r\n\tfunction writeHead(statusCode:Int,headers:Dynamic):Void;\r\n\tfunction setHeader(name:String,value:Dynamic):Void;\r\n\tfunction getHeader(name:String):Dynamic;\r\n\tfunction removeHeader(name:String):Void;\r\n\tfunction addTrailers(headers:Dynamic):Void;\r\n}\r\n\r\n/* Emits:\r\n\t continue,response\r\n*/\r\ntypedef NodeHttpClientReq = { > NodeWriteStream,\r\n}\r\n\r\n/* Emits:\r\n\t data,end,close\r\n*/\r\ntypedef NodeHttpClientResp = { > NodeReadStream,\r\n\tvar statusCode:Int;\r\n\tvar httpVersion:String;\r\n\tvar headers:Dynamic;\r\n\tvar client:NodeHttpClient;\r\n}\r\n\r\n\r\ntypedef NodeHttpClient = { > NodeEventEmitter,\r\n\tfunction request(method:String,path:String,?headers:Dynamic):NodeHttpClientReq;\r\n\tfunction verifyPeer():Bool;\r\n\tfunction getPeerCertificate():NodePeerCert;\r\n}\r\n\r\n/*\r\n\t Emits:\r\n\t request,connection,checkContinue,connect,clientError,close\r\n */\r\ntypedef NodeHttpServer = { > NodeEventEmitter,\r\n\t@:overload(function(path:String,?cb:Void->Void):Void {})\r\n\tfunction listen(port:Int,?host:String,?cb:Void->Void):Void;\r\n\tfunction close(?cb:Void->Void):Void;\r\n}\r\n\r\n/*\r\n */\r\ntypedef NodeHttpReqOpt = {\r\n\tvar host:String;\r\n\tvar port:Int;\r\n\tvar path:String;\r\n\t@:optional var method:String;\r\n\t@:optional var headers:Dynamic;\r\n}\r\n\r\ntypedef NodeHttpsReqOpt = { > NodeHttpReqOpt,\r\n\tvar ciphers:Dynamic;\r\n\tvar rejectUnauthorized:Dynamic;\r\n}\r\n\r\n/*\r\n\t Emits:\r\n\t upgrade,continue\r\n*/\r\ntypedef NodeAgent = { > NodeEventEmitter,\r\n\tvar maxSockets:Int;\r\n\tvar sockets:Array<NodeNetSocket>;\r\n\tvar queue:Array<NodeHttpServerReq>;\r\n}\r\n\r\ntypedef NodeHttp = {\r\n\tfunction createServer(listener:NodeHttpServerReq->NodeHttpServerResp->Void):NodeHttpServer;\r\n\tfunction createClient(port:Int,host:String):NodeHttpClient;\r\n\t@:overload(function(parsedUrl:NodeUrlObj,res:NodeHttpClientResp->Void):NodeHttpClientReq {})\r\n\tfunction request(options:NodeHttpReqOpt,res:NodeHttpClientResp->Void):NodeHttpClientReq;\r\n\t@:overload(function(parsedUrl:NodeUrlObj,res:NodeHttpClientResp->Void):Void {})\r\n\tfunction get(options:NodeHttpReqOpt,res:NodeHttpClientResp->Void):NodeEventEmitter;\r\n\tfunction getAgent(host:String,port:Int):NodeAgent;\r\n}\r\n\r\ntypedef NodeHttps = {\r\n\tfunction createServer(options:{key:String,cert:String},\r\n\t\t\t\t\t\t\t\t\t\t\t\tlistener:NodeHttpServerReq->NodeHttpServerResp->Void):NodeHttpServer;\r\n\tfunction request(options:NodeHttpsReqOpt,res:NodeHttpClientResp->Void):NodeHttpClientReq;\r\n\tfunction get(options:NodeHttpsReqOpt,res:NodeHttpClientResp->Void):Void;\r\n}\r\n\r\ntypedef NodeDns = {\r\n\tfunction resolve(domain:String,?rrtype:String,cb:NodeErr->Array<Dynamic>->Void):Void;\r\n\tfunction resolveNs(domain:String,cb:NodeErr->Array<Dynamic>->Void):Void;\r\n\tfunction resolve4(domain:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction resolve6(domain:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction resolveMx(domain:String,cb:NodeErr->Array<{priority:Int,exchange:String}>->Void):Void;\r\n\tfunction resolveSrv(domain:String,cb:NodeErr->Array<{priority:Int,weight:Int,port:Int,name:String}->Void>):Void;\r\n\tfunction resolveCname(domain:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction reverse(ip:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction resolveTxt(domain:String,cb:NodeErr->Array<String>->Void):Void;\r\n\tfunction lookup(domain:String,?family:String,cb:NodeErr->String->Int->Void):Void;\r\n}\r\n\r\n/* UDP ........................................ */\r\n\r\ntypedef NodeUDPCallback = NodeErr->haxe.io.Bytes->Void;\r\n\r\ntypedef NodeUDP = {\r\n\t// Valid types: udp6, and unix_dgram.\r\n\tfunction createSocket(type:String,cb:NodeUDPCallback):NodeDGSocket;\r\n}\r\n\r\n/*\r\n\t Emits: message,listening,close\r\n*/\r\ntypedef NodeDGSocket = { > NodeEventEmitter,\r\n\tfunction send(buf:NodeBuffer,offset:Int,length:Int,port:Int,address:String,cb:NodeUDPCallback):Void;\r\n\tfunction bind(port:Int,?address:String):Void;\r\n\tfunction close():Void;\r\n\tfunction address():Dynamic;\r\n\tfunction setBroadcast(flag:Bool):Void;\r\n\tfunction setTTL(ttl:Int):Void;\r\n\tfunction setMulticastTTL(ttl:Int):Void;\r\n\tfunction setMulticastLoopback(flag:Bool):Void;\r\n\tfunction addMembership(multicastAddress:String,?multicastInterface:String):Void;\r\n\tfunction dropMembership(multicastAddress:String,?multicastInterface:String):Void;\r\n}\r\n\r\n\r\n/* CRYPTO ..................................... */\r\n\r\ntypedef NodeCredDetails = {\r\n\tvar key:String;\r\n\tvar cert:String;\r\n\tvar ca:Array<String>;\r\n\t/*\r\n\t\tTODO\r\n\t*/\r\n}\r\n\r\ntypedef NodePeerCert = {\r\n\tvar subject:String;\r\n\tvar issuer:String;\r\n\tvar valid_from:String;\r\n\tvar valid_to:String;\r\n}\r\n\r\ntypedef NodeCreds = Dynamic;\r\n\r\ntypedef NodeHmac = {\r\n\tfunction update(data:Dynamic):Void;\r\n\tfunction digest(?enc:String):String;\r\n}\r\n\r\ntypedef NodeHash = {\r\n\tfunction update(data:Dynamic):NodeHash;\r\n\tfunction digest(?enc:String):String;\r\n\tfunction createHmac(algo:String,key:String):NodeHmac;\r\n}\r\n\r\ntypedef NodeCipher = {\r\n\tfunction update(data:Dynamic,?input_enc:String,?output_enc:String):Dynamic;\r\n\tfunction final(output_enc:String):Void;\r\n\tfunction setAutoPadding(padding:Bool):Void; // default true\r\n}\r\n\r\ntypedef NodeDecipher = {\r\n\tfunction update(data:Dynamic,?input_enc:String,?output_enc:String):Dynamic;\r\n\tfunction final(?output_enc:String):Dynamic;\r\n\tfunction setAutoPadding(padding:Bool):Void; // default true\r\n}\r\n\r\ntypedef NodeSigner = {\r\n\tfunction update(data:Dynamic):Void;\r\n\tfunction sign(private_key:String,?output_format:String):Dynamic;\r\n}\r\n\r\ntypedef NodeVerify = {\r\n\tfunction update(data:Dynamic):Void;\r\n\tfunction verify(cert:String,?sig_format:String):Bool;\r\n}\r\n\r\ntypedef NodeDiffieHellman = {\r\n\tfunction generateKeys(?enc:String):String;\r\n\tfunction computeSecret(otherPublicKey:String,?inputEnc:String,?outputEnc:String):String;\r\n\tfunction getPrime(?enc:String):Int;\r\n\tfunction getGenerator(?enc:String):String;\r\n\tfunction getPublicKey(?enc:String):String;\r\n\tfunction getPrivateKey(?enc:String):String;\r\n\tfunction setPublicKey(pubKey:String,?enc:String):Void;\r\n\tfunction setPrivateKey(privKey:String,?enc:String):Void;\r\n}\r\n\r\ntypedef NodeCrypto = {\r\n\tfunction createCredentials(details:NodeCredDetails):NodeCreds;\r\n\tfunction createHash(algo:String):NodeHash; // 'sha1', 'md5', 'sha256', 'sha512'\r\n\tfunction createCipher(algo:String,password:String):NodeCipher;\r\n\tfunction createCipheriv(algo:String,key:String,iv:String):NodeCipher;\r\n\tfunction createDecipher(algo:String,key:String):NodeDecipher;\r\n\tfunction createDecipheriv(algo:String,key:String,iv:String):NodeDecipher;\r\n\tfunction createSign(algo:String):NodeSigner;\r\n\tfunction createVerify(algo:String):NodeVerify;\r\n\t@:overload(function(prime_length:Int):NodeDiffieHellman {})\r\n\tfunction createDiffieHellman(prime:String,?enc:String):NodeDiffieHellman;\r\n\tfunction getDiffieHellman(groupName:String):NodeDiffieHellman;\r\n\tfunction pbkdf2(password:String,salt:String,iterations:Int,keylen:Int,cb:NodeErr->String):Void;\r\n\tfunction randomBytes(size:Int,cb:NodeErr->NodeBuffer):Void;\r\n\r\n}\r\n\r\n/* TLS/SSL ................................................ */\r\n\r\n/*\r\n\t Emits:\r\n\t secureConnection\r\n*/\r\ntypedef NodeTLSServer =\t{ > NodeNetServer,\r\n\t\tfunction addContext(hostName:String,credentials:NodeCreds):Void;\r\n\r\n}\r\n\r\n/* Emits: secure */\r\ntypedef NodeSecurePair = { > NodeEventEmitter,\r\n\t // ?? todo\r\n}\r\ntypedef NodeTLS ={\r\n\tfunction connect(port:Int,host:String,opts:Dynamic,cb:Void->Void):Void;\r\n\tfunction createServer(opts:Dynamic,cb:NodeTLSServer->Void):Void;\r\n\tfunction createSecurePair(creds:NodeCreds,isServer:Bool,requestCert:Bool,rejectUnauthorized:Bool):NodeSecurePair;\r\n}\r\n\r\n/*\r\n\tSnarfed from Tong's version ...\r\n */\r\ntypedef NodeAssert = {\r\n\tfunction fail(actual:Dynamic,expected:Dynamic,message:Dynamic,operator:Dynamic): Void;\r\n\tfunction ok(value:Dynamic,?message:Dynamic):Void;\r\n\tfunction equal(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction notEqual(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction deepEqual(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction notDeepEqual(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction strictEqual(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction notStrictEqual(actual:Dynamic,expected:Dynamic,?message:Dynamic):Void;\r\n\tfunction throws(block:Dynamic,error:Dynamic,?message:Dynamic):Void;\r\n\tfunction doesNotThrow(block:Dynamic,error:Dynamic,?message:Dynamic):Void;\r\n\tfunction ifError(value:Dynamic):Void;\r\n}\r\n\r\ntypedef NodeREPL = {\r\n\tfunction start( prompt : String, ?stream : Dynamic ) : Void;\r\n}\r\n\r\ntypedef NodeGZip = {}\r\ntypedef NodeGUnzip = {}\r\ntypedef NodeDeflate = {}\r\ntypedef NodeInflate = {}\r\ntypedef NodeDeflateRaw = {}\r\ntypedef NodeInflateRaw = {}\r\ntypedef NodeUnzip = {}\r\n\r\n\r\ntypedef NodeZLib = {\r\n\tfunction createGzip(?options:Dynamic):NodeGZip;\r\n\tfunction createGunzip(?options:Dynamic):NodeGUnzip;\r\n\tfunction createDeflate(?options:Dynamic):NodeDeflate;\r\n\tfunction createInflate(?options:Dynamic):NodeInflate;\r\n\tfunction createInflateRaw(?options:Dynamic):NodeInflateRaw;\r\n\tfunction createDeflateRaw(?options:Dynamic):NodeDeflateRaw;\r\n\tfunction createUnzip(?options:Dynamic):NodeUnzip;\r\n\r\n\t// convenience\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction deflate(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction deflateRaw(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction gzip(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction gunzip(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction inflate(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction inflateRaw(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n\t@:overload(function (str:String,cb:NodeErr->Dynamic->Void):Void {})\r\n\tfunction unzip(buf:NodeBuffer,cb:NodeErr->Dynamic->Void):Void;\r\n}\r\n\r\ntypedef NodeJson = {\r\n\tfunction stringify(obj :Dynamic, ?replacer :Dynamic, ?space :Dynamic):String;\r\n\tfunction parse(text :String) :Dynamic;\r\n}\r\n\r\n// @:native(\"Error\")\r\n// extern class Error\r\n// {\r\n// \tpublic function new(msg : String) : Void;\r\n// }\r\n\r\n// Node Constants\r\nclass NodeC {\r\n\tpublic static inline var UTF8 = \"utf8\";\r\n\tpublic static inline var ASCII = \"ascii\";\r\n\tpublic static inline var BINARY = \"binary\";\r\n\tpublic static inline var BASE64 = \"base64\";\r\n\tpublic static inline var HEX = \"hex\";\r\n\r\n\t//events - thanks tmedema\r\n\tpublic static inline var EVENT_EVENTEMITTER_NEWLISTENER = \"newListener\";\r\n\tpublic static inline var EVENT_EVENTEMITTER_ERROR = \"error\";\r\n\r\n\tpublic static inline var EVENT_STREAM_DATA = \"data\";\r\n\tpublic static inline var EVENT_STREAM_END = \"end\";\r\n\tpublic static inline var EVENT_STREAM_ERROR = \"error\";\r\n\tpublic static inline var EVENT_STREAM_CLOSE = \"close\";\r\n\tpublic static inline var EVENT_STREAM_DRAIN = \"drain\";\r\n\tpublic static inline var EVENT_STREAM_CONNECT = \"connect\";\r\n\tpublic static inline var EVENT_STREAM_SECURE = \"secure\";\r\n\tpublic static inline var EVENT_STREAM_TIMEOUT = \"timeout\";\r\n\tpublic static inline var EVENT_STREAM_PIPE = \"pipe\";\r\n\r\n\tpublic static inline var EVENT_PROCESS_EXIT = \"exit\";\r\n\tpublic static inline var EVENT_PROCESS_UNCAUGHTEXCEPTION = \"uncaughtException\";\r\n\tpublic static inline var EVENT_PROCESS_SIGINT = \"SIGINT\";\r\n\tpublic static inline var EVENT_PROCESS_SIGUSR1 = \"SIGUSR1\";\r\n\tpublic static inline var EVENT_CHILDPROCESS_EXIT = \"exit\";\r\n\tpublic static inline var EVENT_HTTPSERVER_REQUEST = \"request\";\r\n\tpublic static inline var EVENT_HTTPSERVER_CONNECTION = \"connection\";\r\n\tpublic static inline var EVENT_HTTPSERVER_CLOSE = \"close\";\r\n\tpublic static inline var EVENT_HTTPSERVER_UPGRADE = \"upgrade\";\r\n\tpublic static inline var EVENT_HTTPSERVER_CLIENTERROR = \"clientError\";\r\n\tpublic static inline var EVENT_HTTPSERVERREQUEST_DATA = \"data\";\r\n\tpublic static inline var EVENT_HTTPSERVERREQUEST_END = \"end\";\r\n\tpublic static inline var EVENT_CLIENTREQUEST_RESPONSE = \"response\";\r\n\tpublic static inline var EVENT_CLIENTRESPONSE_DATA = \"data\";\r\n\tpublic static inline var EVENT_CLIENTRESPONSE_END = \"end\";\r\n\tpublic static inline var EVENT_NETSERVER_CONNECTION = \"connection\";\r\n\tpublic static inline var EVENT_NETSERVER_CLOSE = \"close\";\r\n\r\n\tpublic static inline var FILE_READ = \"r\";\r\n\tpublic static inline var FILE_READ_APPEND = \"r+\";\r\n\tpublic static inline var FILE_WRITE = \"w\";\r\n\tpublic static inline var FILE_WRITE_APPEND = \"a+\";\r\n\tpublic static inline var FILE_READWRITE = \"a\";\r\n\tpublic static inline var FILE_READWRITE_APPEND = \"a+\";\r\n}\r\n\r\nclass Node {\r\n\tpublic static var assert(get,null) : NodeAssert;\r\n\tpublic static var child_process(get,null) : NodeChildProcessCommands;\r\n\tpublic static var cluster(get,null) : NodeCluster;\r\n\tpublic static var console(default,null) : NodeConsole;\r\n\tpublic static var crypto(get,null) : NodeCrypto;\r\n\tpublic static var dgram(get,null) :NodeUDP ;\r\n\tpublic static var dns(get,null) : NodeDns;\r\n\tpublic static var fs(get,null) : NodeFS;\r\n\tpublic static var http(get,null) : NodeHttp;\r\n\tpublic static var https(get,null) : NodeHttps;\r\n\tpublic static var net(get,null) : NodeNet;\r\n\tpublic static var os(get,null) : NodeOs;\r\n\tpublic static var path(get,null) : NodePath;\r\n\tpublic static var process(default,null) : NodeProcess;\r\n\tpublic static var querystring(get,null) : NodeQueryString;\r\n\tpublic static var repl(get,null) : NodeREPL;\r\n\tpublic static var require(default,null) : String->Dynamic;\r\n\tpublic static var tls(get,null) : NodeTLS;\r\n\tpublic static var url(get,null) : NodeUrl;\r\n\tpublic static var util(get,null) : NodeUtil;\r\n\tpublic static var vm(get,null) : NodeVM;\r\n\tpublic static var json(get,null) : NodeJson;\r\n\tpublic static var zlib(get,null) : NodeZLib;\r\n\r\n\r\n\t//\tpublic static var paths:Array<String>;\r\n\tpublic static var setTimeout:Dynamic->Int->?Array<Dynamic>->Int;\r\n\tpublic static var clearTimeout:Int->Void;\r\n\tpublic static var setInterval:Dynamic->Int->?Array<Dynamic>->Int;\r\n\tpublic static var clearInterval:Int->Void;\r\n\tpublic static var setImmediate:Dynamic->?Array<Dynamic>->Int;\r\n\tpublic static var clearImmediate:Int->Void;\r\n\tpublic static var global:Dynamic;\r\n\r\n\tpublic static var __filename(get, null):String;\r\n\tpublic static var __dirname(get, null):String;\r\n\tpublic static var module:Dynamic;\r\n\tpublic static var stringify:Dynamic->?Dynamic->?Dynamic->String;\r\n\tpublic static var parse:String->Dynamic;\r\n\tpublic static var queryString:NodeQueryString;\r\n\r\n\tstatic inline function get_assert() : NodeAssert return require(\"assert\");\r\n\tstatic inline function get_child_process() : NodeChildProcessCommands return require(\"child_process\");\r\n\tstatic inline function get_cluster() : NodeCluster return require(\"cluster\");\r\n\tstatic inline function get_crypto() : NodeCrypto return require(\"crypto\");\r\n\tstatic inline function get_dgram() : NodeUDP return require(\"dgram\");\r\n\tstatic inline function get_dns() : NodeDns return require(\"dns\");\r\n\tstatic inline function get_fs() : NodeFS return require(\"fs\");\r\n\tstatic inline function get_http() : NodeHttp return require(\"http\");\r\n\tstatic inline function get_https() : NodeHttps return require(\"https\");\r\n\tstatic inline function get_net() : NodeNet return require(\"net\");\r\n\tstatic inline function get_os() : NodeOs return require(\"os\");\r\n\tstatic inline function get_path() : NodePath return require(\"path\");\r\n\tstatic inline function get_querystring() : NodeQueryString return require(\"querystring\");\r\n\tstatic inline function get_repl() : NodeREPL return require(\"repl\");\r\n\tstatic inline function get_tls() : NodeTLS return require(\"tls\");\r\n\tstatic inline function get_url() : NodeUrl return require(\"url\");\r\n\tstatic inline function get_util() : NodeUtil return require(\"util\");\r\n\tstatic inline function get_vm() : NodeVM return require(\"vm\");\r\n\tstatic inline function get_zlib() : NodeZLib return require(\"zlib\");\r\n\r\n\tstatic inline function get___filename() : String return untyped __js__('__filename');\r\n\tstatic inline function get___dirname() : String return untyped __js__('__dirname');\r\n\tstatic inline function get_json() : NodeJson return untyped __js__('JSON');\r\n\r\n\tpublic static function newSocket(?options):NodeNetSocket {\r\n\t\treturn untyped __js__(\"new js.Node.net.Socket(options)\");\r\n\t}\r\n\r\n\t#if !macro\r\n\tpublic static function __init__()\r\n\t{\r\n\t\tuntyped __js__(\"var module, setImmediate, clearImmediate\");\r\n\t\tsetTimeout = untyped __js__('setTimeout');\r\n\t\tclearTimeout = untyped __js__('clearTimeout');\r\n\t\tsetInterval = untyped __js__('setInterval');\r\n\t\tclearInterval = untyped __js__('clearInterval');\r\n\t\tglobal = untyped __js__('global');\r\n\t\tprocess = untyped __js__('process');\r\n\t\trequire = untyped __js__('require');\r\n\t\tconsole = untyped __js__('console');\r\n\t\tmodule = untyped __js__('module');\t// ref to the current module\r\n\t\tstringify = untyped __js__('JSON.stringify');\r\n\t\tparse = untyped __js__('JSON.parse');\r\n\t\t// Not present in Node < 0.9\r\n\t\tvar version = process.version.substr(1).split(\".\").map(Std.parseInt);\r\n\t\tif (version[0] > 0 || version[1] >= 9) {\r\n\t\t\tsetImmediate = untyped __js__('setImmediate');\r\n\t\t\tclearImmediate = untyped __js__('clearImmediate');\r\n\t\t}\r\n\t}\r\n\t#end\r\n}\r\n\r\n\r\n","package js.node;\r\nimport js.Node;\r\n\r\n/**\r\n * ...\r\n * @author AS3Boyan\r\n */\r\n \r\ntypedef Listeners =\r\n{\r\n\t@:optional var log:String->Void;\r\n\t@:optional var error:Dynamic->Void;\r\n\t@:optional var watching:Dynamic->Dynamic->Bool->Void;\r\n\t@:optional var change:String->String->NodeStat->NodeStat->Void;\r\n}\r\n \r\ntypedef Config =\r\n{\r\n\t@:optional var path:String;\r\n\t@:optional var paths:Array<String>;\r\n\t@:optional var listener:Dynamic;\r\n\t@:optional var listeners:Dynamic;\r\n\t@:optional var next:Dynamic;\r\n\t@:optional var stat:Dynamic;\r\n\t@:optional var interval:Int;\r\n\t@:optional var persistent:Bool;\r\n\t@:optional var catchupDelay:Int;\r\n\t@:optional var preferredMethods:Array<String>;\r\n\t@:optional var followLinks:Bool;\r\n\t@:optional var ignorePaths:Bool;\r\n\t@:optional var ignoreHiddenFiles:Bool;\r\n\t@:optional var ignoreCommonPatterns:Bool;\r\n\t@:optional var ignoreCustomPatterns:Dynamic;\r\n}\r\n\r\n@:native(\"Watchr\")\r\nextern class Watchr\r\n{\r\n\tstatic function watch(config:Config):Dynamic;\r\n\t\r\n\tstatic function __init__() : Void untyped {\r\n\t\tvar Watchr = Node.require('watchr');\r\n\t}\t\r\n}","package parser;\r\nimport haxeparser.Data.TypeDecl;\r\nimport byte.ByteData;\r\nimport cm.Editor;\r\nimport haxe.ds.StringMap.StringMap;\r\nimport haxe.macro.Expr.Access;\r\nimport haxe.macro.Expr.Field;\r\nimport haxe.macro.Expr.Function;\r\nimport haxeparser.Data.ClassFlag;\r\nimport haxeparser.Data.Definition;\r\nimport haxeparser.Data.TypeDef;\r\nimport haxeparser.HaxeParser;\r\nimport hxparse.NoMatch;\r\nimport hxparse.Unexpected;\r\nimport js.Node;\r\n\r\n/**\r\n * ...\r\n * @author \r\n */\r\n\r\ntypedef FileData =\r\n{\r\n    path: String, \r\n    directory:String,\r\n    filename: String,\r\n    displayText: String\r\n}\r\n\t\r\ntypedef ClassData =\r\n{\r\n\tfields: Array<String>\r\n}\r\n\r\nclass ClassParser\r\n{\r\n    public static var haxeStdTopLevelClassList:Array<String> = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\", \"null\", \"this\", \"break\", \"continue\", \"extends\", \"implements\", \"in\", \"override\", \"package\", \"inline\", \"throw\", \"untyped\", \"using\", \"import\", \"return\", \"extern\"];\r\n\tpublic static var topLevelClassList:Array<String> = [];\r\n    \r\n    public static var haxeStdImports:Array<String> = [];\r\n\tpublic static var importsList:Array<String> = [];\r\n    \r\n\tpublic static var classCompletions:StringMap<ClassData> = new StringMap();\r\n    \r\n    public static var haxeStdFileList:Array<FileData> = [];\r\n    public static var filesList:Array<FileData> = [];\r\n\t\r\n\tpublic static function parse(data:String, path:String)\r\n\t{\r\n\t\tvar input = ByteData.ofString(data);\r\n\t\tvar parser = new HaxeParser(input, path);\r\n\t\tvar ast = null;\r\n\t\t\r\n\t\ttry \r\n\t\t{\r\n\t\t\tast = parser.parse();\r\n\t\t}\r\n\t\tcatch (e:NoMatch<Dynamic>) \r\n\t\t{\r\n// \t\t\ttrace(e.pos.format(input) + \": Unexpected \" + e.token.tok);\r\n\t\t}\r\n\t\tcatch (e:Unexpected<Dynamic>) \r\n\t\t{\r\n// \t\t\ttrace(e.pos.format(input) + \": Unexpected \" + e.token.tok);\r\n\t\t} \r\n\t\tcatch (e:Dynamic)\r\n\t\t{\t\t\t\r\n\t\t\t//trace(\"Unhandled parsing error: \");\r\n\t\t\t//trace(e);\r\n\t\t}\r\n\t\t\r\n\t\treturn ast;\r\n\t}\r\n\t\r\n\tpublic static function processFile(data:String, path:String, std:Bool):Void \r\n\t{\r\n\t\tvar ast = parse(data, path);\r\n\t\t\r\n        var mainClass = Node.path.basename(path, \".hx\");\r\n        \r\n\t\tif (ast != null) \r\n\t\t{\r\n\t\t\tparseDeclarations(ast, mainClass, std);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n            var filePackage = RegexParser.getFilePackage(data);\r\n            var typeDeclarations = RegexParser.getTypeDeclarations(data);\r\n            \r\n            var packages;\r\n            \r\n            if (filePackage.filePackage != null)\r\n            {\r\n                packages = filePackage.filePackage.split(\".\");\r\n            }\r\n            else\r\n            {\r\n                packages = [];\r\n            }\r\n            \r\n            for (item in typeDeclarations)\r\n            {                 \r\n                var className:String = resolveClassName(packages, mainClass, item.name);\r\n                addClassName(className, std);\r\n\t\t\t}\r\n            \r\n\t\t\t//trace(\"ast for \" + path + \" is null\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function parseDeclarations(ast:{decls:Array<TypeDecl>, pack:Array<String>}, mainClass:String, std:Bool) \r\n\t{\t\t\r\n\t\tfor (decl in ast.decls) switch (decl.decl) \r\n\t\t{\r\n\t\t\tcase EImport(sl, mode): \r\n\t\t\tcase EUsing(path): \r\n\t\t\tcase EAbstract(data): \r\n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\r\n\t\t\t\taddClassName(className, std);\r\n\t\t\tcase EClass(data): \r\n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\r\n\t\t\t\tprocessClass(className, data);\r\n\t\t\t\taddClassName(className, std);\r\n\t\t\t\t\r\n\t\t\t\t//\r\n\t\t\t\t\r\n\t\t\t\t//if (processClass(data, pos)) \r\n\t\t\t\t//{\r\n\t\t\t\t\t//break;\r\n\t\t\t\t//}\r\n\t\t\tcase EEnum(data): \r\n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\r\n\t\t\t\taddClassName(className, std);\r\n\t\t\tcase ETypedef(data): \r\n\t\t\t\tvar className:String = resolveClassName(ast.pack, mainClass, data.name);\r\n\t\t\t\taddClassName(className, std);\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function processClass(className:String, type:Definition<ClassFlag, Array<Field>>) \r\n\t{\r\n\t\tvar completions:Array<String> = [];\r\n\t\t\r\n\t\tfor (i in 0...type.data.length)\r\n\t\t{\r\n\t\t\tif (getScope(type.data[i]))\r\n\t\t\t{\r\n\t\t\t\tcompletions.push(type.data[i].name);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//switch (type.data[i].kind) \r\n\t\t//{\r\n\t\t\t//case FFun(f):\r\n\t\t\t\t//\r\n\t\t\t\t//currentFunctionScopeType = getFunctionScope(type.data[i], f);\r\n\t\t\t\t//\r\n\t\t\t\t//if (pos > f.expr.pos.min && pos < f.expr.pos.max) \r\n\t\t\t\t//{\r\n\t\t\t\t\t//if (processExpression(f.expr.expr, pos)) \r\n\t\t\t\t\t//{\r\n\t\t\t\t\t\t//break;\r\n\t\t\t\t\t//}\r\n\t\t\t\t//}\r\n\t\t\t//case FVar(t, e):\r\n\t\t\t\t//completions.push(type.data[i].name);\r\n\t\t\t\t//trace(e);\r\n\t\t\t\t//currentFunctionScopeType = SClass;\r\n\t\t\t//case FProp(get, set, t, e):\r\n\t\t\t\t//completions.push(type.data[i].name);\r\n\t\t\t\t//currentFunctionScopeType = SClass;\r\n\t\t//}\r\n\t\t\r\n\t\tif (completions.length > 0)\r\n\t\t{\r\n\t\t\tclassCompletions.set(className, {fields: completions});\r\n\t\t}\r\n\t}\r\n\t\r\n\tstatic function getScope(field:Field) \r\n\t{\r\n\t\tvar isPublic:Bool = false;\r\n\t\tvar access:Array<Access> = field.access;\r\n\t\t\r\n\t\tfor (accessType in access)\r\n\t\t{\r\n\t\t\tswitch (accessType) \r\n\t\t\t{\r\n\t\t\t\tcase APublic:\r\n\t\t\t\t\tisPublic = true;\r\n\t\t\t\tcase AStatic:\r\n\t\t\t\tcase AMacro:\r\n\t\t\t\tcase AInline:\r\n\t\t\t\tcase ADynamic:\r\n\t\t\t\tcase AOverride:\r\n\t\t\t\tcase APrivate:\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn isPublic;\r\n\t}\r\n\t\r\n\tstatic function resolveClassName(pack:Array<String>, mainClass:String, name:String):String \r\n\t{\r\n\t\tvar classPackage = pack.copy();\r\n\t\t\t\t\r\n\t\tif (name == mainClass) \r\n\t\t{\r\n\t\t\tclassPackage.push(name);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tclassPackage.push(mainClass);\r\n\t\t\tclassPackage.push(name);\r\n\t\t}\r\n\t\t\r\n\t\tvar className= classPackage.join(\".\");\r\n\t\treturn className;\r\n\t}\r\n\t\r\n\tstatic function addClassName(name:String, std:Bool):Void \r\n\t{\r\n        var list:Array<String>;\r\n        \r\n\t\tif (name.indexOf(\".\") == -1) \r\n\t\t{\r\n\t\t\tif (std) \r\n\t\t\t{\r\n                list = haxeStdTopLevelClassList;\r\n\t\t\t}\r\n            else\r\n            {\r\n                list = topLevelClassList;\r\n            }\r\n            \r\n\t\t\tif (list.indexOf(name) == -1)\r\n\t\t\t{\r\n\t\t\t\tlist.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\t\tif (std) \r\n\t\t\t{\r\n\t\t\t\tlist = haxeStdImports;\r\n\t\t\t}\r\n            else\r\n            {\r\n                list = importsList;\r\n            }\r\n\t\t\t\r\n\t\t\tif (list.indexOf(name) == -1)\r\n\t\t\t{\r\n\t\t\t\tlist.push(name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"],
"names":[],
"mappings":"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"
}